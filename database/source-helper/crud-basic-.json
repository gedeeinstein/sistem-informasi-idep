{
    "app": {
        "isDir": true,
        "content": {
            "Console": {
                "isDir": true,
                "content": {
                    "Kernel.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Console;\n\nuse Illuminate\\Console\\Scheduling\\Schedule;\nuse Illuminate\\Foundation\\Console\\Kernel as ConsoleKernel;\n\nclass Kernel extends ConsoleKernel\n{\n    \/**\n     * Define the application's command schedule.\n     *\/\n    protected function schedule(Schedule $schedule): void\n    {\n        \/\/ $schedule->command('inspire')->hourly();\n    }\n\n    \/**\n     * Register the commands for the application.\n     *\/\n    protected function commands(): void\n    {\n        $this->load(__DIR__.'\/Commands');\n\n        require base_path('routes\/console.php');\n    }\n}\n",
                        "uuid": "cee31c56396743c7"
                    }
                },
                "uuid": "22d6dfa45e43ef40"
            },
            "Exceptions": {
                "isDir": true,
                "content": {
                    "Handler.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Exceptions;\n\nuse Illuminate\\Foundation\\Exceptions\\Handler as ExceptionHandler;\nuse Throwable;\n\nclass Handler extends ExceptionHandler\n{\n    \/**\n     * A list of exception types with their corresponding custom log levels.\n     *\n     * @var array<class-string<\\Throwable>, \\Psr\\Log\\LogLevel::*>\n     *\/\n    protected $levels = [\n        \/\/\n    ];\n\n    \/**\n     * A list of the exception types that are not reported.\n     *\n     * @var array<int, class-string<\\Throwable>>\n     *\/\n    protected $dontReport = [\n        \/\/\n    ];\n\n    \/**\n     * A list of the inputs that are never flashed to the session on validation exceptions.\n     *\n     * @var array<int, string>\n     *\/\n    protected $dontFlash = [\n        'current_password',\n        'password',\n        'password_confirmation',\n    ];\n\n    \/**\n     * Register the exception handling callbacks for the application.\n     *\/\n    public function register(): void\n    {\n        $this->reportable(function (Throwable $e) {\n            \/\/\n        });\n    }\n}\n",
                        "uuid": "9991ae51088827d0"
                    }
                },
                "uuid": "6237a829079598a2"
            },
            "Http": {
                "isDir": true,
                "content": {
                    "Controllers": {
                        "isDir": true,
                        "content": {
                            "Admin": {
                                "isDir": true,
                                "content": {
                                    "AssetCategoryController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\MassDestroyAssetCategoryRequest;\nuse App\\Http\\Requests\\StoreAssetCategoryRequest;\nuse App\\Http\\Requests\\UpdateAssetCategoryRequest;\nuse App\\Models\\AssetCategory;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass AssetCategoryController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('asset_category_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $assetCategories = AssetCategory::all();\n\n        return view('admin.assetCategories.index', compact('assetCategories'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('asset_category_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.assetCategories.create');\n    }\n\n    public function store(StoreAssetCategoryRequest $request)\n    {\n        $assetCategory = AssetCategory::create($request->all());\n\n        return redirect()->route('admin.asset-categories.index');\n    }\n\n    public function edit(AssetCategory $assetCategory)\n    {\n        abort_if(Gate::denies('asset_category_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.assetCategories.edit', compact('assetCategory'));\n    }\n\n    public function update(UpdateAssetCategoryRequest $request, AssetCategory $assetCategory)\n    {\n        $assetCategory->update($request->all());\n\n        return redirect()->route('admin.asset-categories.index');\n    }\n\n    public function show(AssetCategory $assetCategory)\n    {\n        abort_if(Gate::denies('asset_category_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.assetCategories.show', compact('assetCategory'));\n    }\n\n    public function destroy(AssetCategory $assetCategory)\n    {\n        abort_if(Gate::denies('asset_category_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $assetCategory->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyAssetCategoryRequest $request)\n    {\n        $assetCategories = AssetCategory::find(request('ids'));\n\n        foreach ($assetCategories as $assetCategory) {\n            $assetCategory->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                        "uuid": "6d692ef0f190c417"
                                    },
                                    "AssetController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Controllers\\Traits\\MediaUploadingTrait;\nuse App\\Http\\Requests\\MassDestroyAssetRequest;\nuse App\\Http\\Requests\\StoreAssetRequest;\nuse App\\Http\\Requests\\UpdateAssetRequest;\nuse App\\Models\\Asset;\nuse App\\Models\\AssetCategory;\nuse App\\Models\\AssetLocation;\nuse App\\Models\\AssetStatus;\nuse App\\Models\\User;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Spatie\\MediaLibrary\\MediaCollections\\Models\\Media;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass AssetController extends Controller\n{\n    use MediaUploadingTrait;\n\n    public function index()\n    {\n        abort_if(Gate::denies('asset_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $assets = Asset::with(['category', 'status', 'location', 'assigned_to', 'media'])->get();\n\n        return view('admin.assets.index', compact('assets'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('asset_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $categories = AssetCategory::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');\n\n        $statuses = AssetStatus::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');\n\n        $locations = AssetLocation::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');\n\n        $assigned_tos = User::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');\n\n        return view('admin.assets.create', compact('assigned_tos', 'categories', 'locations', 'statuses'));\n    }\n\n    public function store(StoreAssetRequest $request)\n    {\n        $asset = Asset::create($request->all());\n\n        foreach ($request->input('photos', []) as $file) {\n            $asset->addMedia(storage_path('tmp\/uploads\/' . basename($file)))->toMediaCollection('photos');\n        }\n\n        if ($media = $request->input('ck-media', false)) {\n            Media::whereIn('id', $media)->update(['model_id' => $asset->id]);\n        }\n\n        return redirect()->route('admin.assets.index');\n    }\n\n    public function edit(Asset $asset)\n    {\n        abort_if(Gate::denies('asset_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $categories = AssetCategory::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');\n\n        $statuses = AssetStatus::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');\n\n        $locations = AssetLocation::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');\n\n        $assigned_tos = User::pluck('name', 'id')->prepend(trans('global.pleaseSelect'), '');\n\n        $asset->load('category', 'status', 'location', 'assigned_to');\n\n        return view('admin.assets.edit', compact('asset', 'assigned_tos', 'categories', 'locations', 'statuses'));\n    }\n\n    public function update(UpdateAssetRequest $request, Asset $asset)\n    {\n        $asset->update($request->all());\n\n        if (count($asset->photos) > 0) {\n            foreach ($asset->photos as $media) {\n                if (! in_array($media->file_name, $request->input('photos', []))) {\n                    $media->delete();\n                }\n            }\n        }\n        $media = $asset->photos->pluck('file_name')->toArray();\n        foreach ($request->input('photos', []) as $file) {\n            if (count($media) === 0 || ! in_array($file, $media)) {\n                $asset->addMedia(storage_path('tmp\/uploads\/' . basename($file)))->toMediaCollection('photos');\n            }\n        }\n\n        return redirect()->route('admin.assets.index');\n    }\n\n    public function show(Asset $asset)\n    {\n        abort_if(Gate::denies('asset_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $asset->load('category', 'status', 'location', 'assigned_to');\n\n        return view('admin.assets.show', compact('asset'));\n    }\n\n    public function destroy(Asset $asset)\n    {\n        abort_if(Gate::denies('asset_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $asset->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyAssetRequest $request)\n    {\n        $assets = Asset::find(request('ids'));\n\n        foreach ($assets as $asset) {\n            $asset->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n\n    public function storeCKEditorImages(Request $request)\n    {\n        abort_if(Gate::denies('asset_create') && Gate::denies('asset_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $model         = new Asset();\n        $model->id     = $request->input('crud_id', 0);\n        $model->exists = true;\n        $media         = $model->addMediaFromRequest('upload')->toMediaCollection('ck-media');\n\n        return response()->json(['id' => $media->id, 'url' => $media->getUrl()], Response::HTTP_CREATED);\n    }\n}\n",
                                        "uuid": "98bd8ab589edddc1"
                                    },
                                    "AssetLocationController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\MassDestroyAssetLocationRequest;\nuse App\\Http\\Requests\\StoreAssetLocationRequest;\nuse App\\Http\\Requests\\UpdateAssetLocationRequest;\nuse App\\Models\\AssetLocation;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass AssetLocationController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('asset_location_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $assetLocations = AssetLocation::all();\n\n        return view('admin.assetLocations.index', compact('assetLocations'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('asset_location_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.assetLocations.create');\n    }\n\n    public function store(StoreAssetLocationRequest $request)\n    {\n        $assetLocation = AssetLocation::create($request->all());\n\n        return redirect()->route('admin.asset-locations.index');\n    }\n\n    public function edit(AssetLocation $assetLocation)\n    {\n        abort_if(Gate::denies('asset_location_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.assetLocations.edit', compact('assetLocation'));\n    }\n\n    public function update(UpdateAssetLocationRequest $request, AssetLocation $assetLocation)\n    {\n        $assetLocation->update($request->all());\n\n        return redirect()->route('admin.asset-locations.index');\n    }\n\n    public function show(AssetLocation $assetLocation)\n    {\n        abort_if(Gate::denies('asset_location_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.assetLocations.show', compact('assetLocation'));\n    }\n\n    public function destroy(AssetLocation $assetLocation)\n    {\n        abort_if(Gate::denies('asset_location_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $assetLocation->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyAssetLocationRequest $request)\n    {\n        $assetLocations = AssetLocation::find(request('ids'));\n\n        foreach ($assetLocations as $assetLocation) {\n            $assetLocation->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                        "uuid": "4ced0612cfd6cbcd"
                                    },
                                    "AssetStatusController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\MassDestroyAssetStatusRequest;\nuse App\\Http\\Requests\\StoreAssetStatusRequest;\nuse App\\Http\\Requests\\UpdateAssetStatusRequest;\nuse App\\Models\\AssetStatus;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass AssetStatusController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('asset_status_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $assetStatuses = AssetStatus::all();\n\n        return view('admin.assetStatuses.index', compact('assetStatuses'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('asset_status_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.assetStatuses.create');\n    }\n\n    public function store(StoreAssetStatusRequest $request)\n    {\n        $assetStatus = AssetStatus::create($request->all());\n\n        return redirect()->route('admin.asset-statuses.index');\n    }\n\n    public function edit(AssetStatus $assetStatus)\n    {\n        abort_if(Gate::denies('asset_status_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.assetStatuses.edit', compact('assetStatus'));\n    }\n\n    public function update(UpdateAssetStatusRequest $request, AssetStatus $assetStatus)\n    {\n        $assetStatus->update($request->all());\n\n        return redirect()->route('admin.asset-statuses.index');\n    }\n\n    public function show(AssetStatus $assetStatus)\n    {\n        abort_if(Gate::denies('asset_status_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.assetStatuses.show', compact('assetStatus'));\n    }\n\n    public function destroy(AssetStatus $assetStatus)\n    {\n        abort_if(Gate::denies('asset_status_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $assetStatus->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyAssetStatusRequest $request)\n    {\n        $assetStatuses = AssetStatus::find(request('ids'));\n\n        foreach ($assetStatuses as $assetStatus) {\n            $assetStatus->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                        "uuid": "4c96832cbd76b10e"
                                    },
                                    "AssetsHistoryController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\AssetsHistory;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass AssetsHistoryController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('assets_history_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $assetsHistories = AssetsHistory::with(['asset', 'status', 'location', 'assigned_user'])->get();\n\n        return view('admin.assetsHistories.index', compact('assetsHistories'));\n    }\n}\n",
                                        "uuid": "d8dc92d14207181e"
                                    },
                                    "AuditLogsController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\AuditLog;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Yajra\\DataTables\\Facades\\DataTables;\n\nclass AuditLogsController extends Controller\n{\n    public function index(Request $request)\n    {\n        abort_if(Gate::denies('audit_log_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        if ($request->ajax()) {\n            $query = AuditLog::query()->select(sprintf('%s.*', (new AuditLog)->table));\n            $table = Datatables::of($query);\n\n            $table->addColumn('placeholder', '&nbsp;');\n            $table->addColumn('actions', '&nbsp;');\n\n            $table->editColumn('actions', function ($row) {\n                $viewGate      = 'audit_log_show';\n                $editGate      = 'audit_log_edit';\n                $deleteGate    = 'audit_log_delete';\n                $crudRoutePart = 'audit-logs';\n\n                return view('partials.datatablesActions', compact(\n                    'viewGate',\n                    'editGate',\n                    'deleteGate',\n                    'crudRoutePart',\n                    'row'\n                ));\n            });\n\n            $table->editColumn('id', function ($row) {\n                return $row->id ? $row->id : '';\n            });\n            $table->editColumn('description', function ($row) {\n                return $row->description ? $row->description : '';\n            });\n            $table->editColumn('subject_id', function ($row) {\n                return $row->subject_id ? $row->subject_id : '';\n            });\n            $table->editColumn('subject_type', function ($row) {\n                return $row->subject_type ? $row->subject_type : '';\n            });\n            $table->editColumn('user_id', function ($row) {\n                return $row->user_id ? $row->user_id : '';\n            });\n            $table->editColumn('host', function ($row) {\n                return $row->host ? $row->host : '';\n            });\n\n            $table->rawColumns(['actions', 'placeholder']);\n\n            return $table->make(true);\n        }\n\n        return view('admin.auditLogs.index');\n    }\n\n    public function show(AuditLog $auditLog)\n    {\n        abort_if(Gate::denies('audit_log_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.auditLogs.show', compact('auditLog'));\n    }\n}\n",
                                        "uuid": "666f206d1cf14c58"
                                    },
                                    "ContentCategoryController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\MassDestroyContentCategoryRequest;\nuse App\\Http\\Requests\\StoreContentCategoryRequest;\nuse App\\Http\\Requests\\UpdateContentCategoryRequest;\nuse App\\Models\\ContentCategory;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass ContentCategoryController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('content_category_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $contentCategories = ContentCategory::all();\n\n        return view('admin.contentCategories.index', compact('contentCategories'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('content_category_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.contentCategories.create');\n    }\n\n    public function store(StoreContentCategoryRequest $request)\n    {\n        $contentCategory = ContentCategory::create($request->all());\n\n        return redirect()->route('admin.content-categories.index');\n    }\n\n    public function edit(ContentCategory $contentCategory)\n    {\n        abort_if(Gate::denies('content_category_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.contentCategories.edit', compact('contentCategory'));\n    }\n\n    public function update(UpdateContentCategoryRequest $request, ContentCategory $contentCategory)\n    {\n        $contentCategory->update($request->all());\n\n        return redirect()->route('admin.content-categories.index');\n    }\n\n    public function show(ContentCategory $contentCategory)\n    {\n        abort_if(Gate::denies('content_category_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.contentCategories.show', compact('contentCategory'));\n    }\n\n    public function destroy(ContentCategory $contentCategory)\n    {\n        abort_if(Gate::denies('content_category_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $contentCategory->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyContentCategoryRequest $request)\n    {\n        $contentCategories = ContentCategory::find(request('ids'));\n\n        foreach ($contentCategories as $contentCategory) {\n            $contentCategory->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                        "uuid": "27fa9c440e043217"
                                    },
                                    "ContentPageController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Controllers\\Traits\\MediaUploadingTrait;\nuse App\\Http\\Requests\\MassDestroyContentPageRequest;\nuse App\\Http\\Requests\\StoreContentPageRequest;\nuse App\\Http\\Requests\\UpdateContentPageRequest;\nuse App\\Models\\ContentCategory;\nuse App\\Models\\ContentPage;\nuse App\\Models\\ContentTag;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Spatie\\MediaLibrary\\MediaCollections\\Models\\Media;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass ContentPageController extends Controller\n{\n    use MediaUploadingTrait;\n\n    public function index()\n    {\n        abort_if(Gate::denies('content_page_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $contentPages = ContentPage::with(['categories', 'tags', 'media'])->get();\n\n        return view('admin.contentPages.index', compact('contentPages'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('content_page_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $categories = ContentCategory::pluck('name', 'id');\n\n        $tags = ContentTag::pluck('name', 'id');\n\n        return view('admin.contentPages.create', compact('categories', 'tags'));\n    }\n\n    public function store(StoreContentPageRequest $request)\n    {\n        $contentPage = ContentPage::create($request->all());\n        $contentPage->categories()->sync($request->input('categories', []));\n        $contentPage->tags()->sync($request->input('tags', []));\n        if ($request->input('featured_image', false)) {\n            $contentPage->addMedia(storage_path('tmp\/uploads\/' . basename($request->input('featured_image'))))->toMediaCollection('featured_image');\n        }\n\n        if ($media = $request->input('ck-media', false)) {\n            Media::whereIn('id', $media)->update(['model_id' => $contentPage->id]);\n        }\n\n        return redirect()->route('admin.content-pages.index');\n    }\n\n    public function edit(ContentPage $contentPage)\n    {\n        abort_if(Gate::denies('content_page_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $categories = ContentCategory::pluck('name', 'id');\n\n        $tags = ContentTag::pluck('name', 'id');\n\n        $contentPage->load('categories', 'tags');\n\n        return view('admin.contentPages.edit', compact('categories', 'contentPage', 'tags'));\n    }\n\n    public function update(UpdateContentPageRequest $request, ContentPage $contentPage)\n    {\n        $contentPage->update($request->all());\n        $contentPage->categories()->sync($request->input('categories', []));\n        $contentPage->tags()->sync($request->input('tags', []));\n        if ($request->input('featured_image', false)) {\n            if (! $contentPage->featured_image || $request->input('featured_image') !== $contentPage->featured_image->file_name) {\n                if ($contentPage->featured_image) {\n                    $contentPage->featured_image->delete();\n                }\n                $contentPage->addMedia(storage_path('tmp\/uploads\/' . basename($request->input('featured_image'))))->toMediaCollection('featured_image');\n            }\n        } elseif ($contentPage->featured_image) {\n            $contentPage->featured_image->delete();\n        }\n\n        return redirect()->route('admin.content-pages.index');\n    }\n\n    public function show(ContentPage $contentPage)\n    {\n        abort_if(Gate::denies('content_page_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $contentPage->load('categories', 'tags');\n\n        return view('admin.contentPages.show', compact('contentPage'));\n    }\n\n    public function destroy(ContentPage $contentPage)\n    {\n        abort_if(Gate::denies('content_page_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $contentPage->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyContentPageRequest $request)\n    {\n        $contentPages = ContentPage::find(request('ids'));\n\n        foreach ($contentPages as $contentPage) {\n            $contentPage->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n\n    public function storeCKEditorImages(Request $request)\n    {\n        abort_if(Gate::denies('content_page_create') && Gate::denies('content_page_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $model         = new ContentPage();\n        $model->id     = $request->input('crud_id', 0);\n        $model->exists = true;\n        $media         = $model->addMediaFromRequest('upload')->toMediaCollection('ck-media');\n\n        return response()->json(['id' => $media->id, 'url' => $media->getUrl()], Response::HTTP_CREATED);\n    }\n}\n",
                                        "uuid": "d2a448e04a5fcfad"
                                    },
                                    "ContentTagController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\MassDestroyContentTagRequest;\nuse App\\Http\\Requests\\StoreContentTagRequest;\nuse App\\Http\\Requests\\UpdateContentTagRequest;\nuse App\\Models\\ContentTag;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass ContentTagController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('content_tag_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $contentTags = ContentTag::all();\n\n        return view('admin.contentTags.index', compact('contentTags'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('content_tag_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.contentTags.create');\n    }\n\n    public function store(StoreContentTagRequest $request)\n    {\n        $contentTag = ContentTag::create($request->all());\n\n        return redirect()->route('admin.content-tags.index');\n    }\n\n    public function edit(ContentTag $contentTag)\n    {\n        abort_if(Gate::denies('content_tag_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.contentTags.edit', compact('contentTag'));\n    }\n\n    public function update(UpdateContentTagRequest $request, ContentTag $contentTag)\n    {\n        $contentTag->update($request->all());\n\n        return redirect()->route('admin.content-tags.index');\n    }\n\n    public function show(ContentTag $contentTag)\n    {\n        abort_if(Gate::denies('content_tag_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.contentTags.show', compact('contentTag'));\n    }\n\n    public function destroy(ContentTag $contentTag)\n    {\n        abort_if(Gate::denies('content_tag_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $contentTag->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyContentTagRequest $request)\n    {\n        $contentTags = ContentTag::find(request('ids'));\n\n        foreach ($contentTags as $contentTag) {\n            $contentTag->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                        "uuid": "3255f67e7c94095f"
                                    },
                                    "HomeController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nclass HomeController\n{\n    public function index()\n    {\n        return view('home');\n    }\n}\n",
                                        "uuid": "24c70a6264a96658"
                                    },
                                    "PermissionsController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\MassDestroyPermissionRequest;\nuse App\\Http\\Requests\\StorePermissionRequest;\nuse App\\Http\\Requests\\UpdatePermissionRequest;\nuse App\\Models\\Permission;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass PermissionsController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('permission_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $permissions = Permission::all();\n\n        return view('admin.permissions.index', compact('permissions'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('permission_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.permissions.create');\n    }\n\n    public function store(StorePermissionRequest $request)\n    {\n        $permission = Permission::create($request->all());\n\n        return redirect()->route('admin.permissions.index');\n    }\n\n    public function edit(Permission $permission)\n    {\n        abort_if(Gate::denies('permission_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.permissions.edit', compact('permission'));\n    }\n\n    public function update(UpdatePermissionRequest $request, Permission $permission)\n    {\n        $permission->update($request->all());\n\n        return redirect()->route('admin.permissions.index');\n    }\n\n    public function show(Permission $permission)\n    {\n        abort_if(Gate::denies('permission_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.permissions.show', compact('permission'));\n    }\n\n    public function destroy(Permission $permission)\n    {\n        abort_if(Gate::denies('permission_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $permission->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyPermissionRequest $request)\n    {\n        $permissions = Permission::find(request('ids'));\n\n        foreach ($permissions as $permission) {\n            $permission->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                        "uuid": "58d54385b59704a9"
                                    },
                                    "ProvinsiController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Controllers\\Traits\\MediaUploadingTrait;\nuse App\\Http\\Requests\\MassDestroyProvinsiRequest;\nuse App\\Http\\Requests\\StoreProvinsiRequest;\nuse App\\Http\\Requests\\UpdateProvinsiRequest;\nuse App\\Models\\Provinsi;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Spatie\\MediaLibrary\\MediaCollections\\Models\\Media;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass ProvinsiController extends Controller\n{\n    use MediaUploadingTrait;\n\n    public function index()\n    {\n        abort_if(Gate::denies('provinsi_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $provinsis = Provinsi::with(['media'])->get();\n\n        return view('admin.provinsis.index', compact('provinsis'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('provinsi_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.provinsis.create');\n    }\n\n    public function store(StoreProvinsiRequest $request)\n    {\n        $provinsi = Provinsi::create($request->all());\n\n        if ($request->input('logo', false)) {\n            $provinsi->addMedia(storage_path('tmp\/uploads\/' . basename($request->input('logo'))))->toMediaCollection('logo');\n        }\n\n        if ($media = $request->input('ck-media', false)) {\n            Media::whereIn('id', $media)->update(['model_id' => $provinsi->id]);\n        }\n\n        return redirect()->route('admin.provinsis.index');\n    }\n\n    public function edit(Provinsi $provinsi)\n    {\n        abort_if(Gate::denies('provinsi_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.provinsis.edit', compact('provinsi'));\n    }\n\n    public function update(UpdateProvinsiRequest $request, Provinsi $provinsi)\n    {\n        $provinsi->update($request->all());\n\n        if ($request->input('logo', false)) {\n            if (! $provinsi->logo || $request->input('logo') !== $provinsi->logo->file_name) {\n                if ($provinsi->logo) {\n                    $provinsi->logo->delete();\n                }\n                $provinsi->addMedia(storage_path('tmp\/uploads\/' . basename($request->input('logo'))))->toMediaCollection('logo');\n            }\n        } elseif ($provinsi->logo) {\n            $provinsi->logo->delete();\n        }\n\n        return redirect()->route('admin.provinsis.index');\n    }\n\n    public function show(Provinsi $provinsi)\n    {\n        abort_if(Gate::denies('provinsi_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('admin.provinsis.show', compact('provinsi'));\n    }\n\n    public function destroy(Provinsi $provinsi)\n    {\n        abort_if(Gate::denies('provinsi_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $provinsi->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyProvinsiRequest $request)\n    {\n        $provinsis = Provinsi::find(request('ids'));\n\n        foreach ($provinsis as $provinsi) {\n            $provinsi->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n\n    public function storeCKEditorImages(Request $request)\n    {\n        abort_if(Gate::denies('provinsi_create') && Gate::denies('provinsi_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $model         = new Provinsi();\n        $model->id     = $request->input('crud_id', 0);\n        $model->exists = true;\n        $media         = $model->addMediaFromRequest('upload')->toMediaCollection('ck-media');\n\n        return response()->json(['id' => $media->id, 'url' => $media->getUrl()], Response::HTTP_CREATED);\n    }\n}\n",
                                        "uuid": "9db371dc2eca08a8"
                                    },
                                    "RolesController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\MassDestroyRoleRequest;\nuse App\\Http\\Requests\\StoreRoleRequest;\nuse App\\Http\\Requests\\UpdateRoleRequest;\nuse App\\Models\\Permission;\nuse App\\Models\\Role;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass RolesController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('role_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $roles = Role::with(['permissions'])->get();\n\n        return view('admin.roles.index', compact('roles'));\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('role_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $permissions = Permission::pluck('title', 'id');\n\n        return view('admin.roles.create', compact('permissions'));\n    }\n\n    public function store(StoreRoleRequest $request)\n    {\n        $role = Role::create($request->all());\n        $role->permissions()->sync($request->input('permissions', []));\n\n        return redirect()->route('admin.roles.index');\n    }\n\n    public function edit(Role $role)\n    {\n        abort_if(Gate::denies('role_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $permissions = Permission::pluck('title', 'id');\n\n        $role->load('permissions');\n\n        return view('admin.roles.edit', compact('permissions', 'role'));\n    }\n\n    public function update(UpdateRoleRequest $request, Role $role)\n    {\n        $role->update($request->all());\n        $role->permissions()->sync($request->input('permissions', []));\n\n        return redirect()->route('admin.roles.index');\n    }\n\n    public function show(Role $role)\n    {\n        abort_if(Gate::denies('role_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $role->load('permissions');\n\n        return view('admin.roles.show', compact('role'));\n    }\n\n    public function destroy(Role $role)\n    {\n        abort_if(Gate::denies('role_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $role->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyRoleRequest $request)\n    {\n        $roles = Role::find(request('ids'));\n\n        foreach ($roles as $role) {\n            $role->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                        "uuid": "947100073b9dd29c"
                                    },
                                    "UsersController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\MassDestroyUserRequest;\nuse App\\Http\\Requests\\StoreUserRequest;\nuse App\\Http\\Requests\\UpdateUserRequest;\nuse App\\Models\\Role;\nuse App\\Models\\User;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Yajra\\DataTables\\Facades\\DataTables;\n\nclass UsersController extends Controller\n{\n    public function index(Request $request)\n    {\n        abort_if(Gate::denies('user_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        if ($request->ajax()) {\n            $query = User::with(['roles'])->select(sprintf('%s.*', (new User)->table));\n            $table = Datatables::of($query);\n\n            $table->addColumn('placeholder', '&nbsp;');\n            $table->addColumn('actions', '&nbsp;');\n\n            $table->editColumn('actions', function ($row) {\n                $viewGate      = 'user_show';\n                $editGate      = 'user_edit';\n                $deleteGate    = 'user_delete';\n                $crudRoutePart = 'users';\n\n                return view('partials.datatablesActions', compact(\n                    'viewGate',\n                    'editGate',\n                    'deleteGate',\n                    'crudRoutePart',\n                    'row'\n                ));\n            });\n\n            $table->editColumn('name', function ($row) {\n                return $row->name ? $row->name : '';\n            });\n            $table->editColumn('email', function ($row) {\n                return $row->email ? $row->email : '';\n            });\n\n            $table->editColumn('roles', function ($row) {\n                $labels = [];\n                foreach ($row->roles as $role) {\n                    $labels[] = sprintf('<span class=\"label label-info label-many\">%s<\/span>', $role->title);\n                }\n\n                return implode(' ', $labels);\n            });\n\n            $table->rawColumns(['actions', 'placeholder', 'roles']);\n\n            return $table->make(true);\n        }\n\n        return view('admin.users.index');\n    }\n\n    public function create()\n    {\n        abort_if(Gate::denies('user_create'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $roles = Role::pluck('title', 'id');\n\n        return view('admin.users.create', compact('roles'));\n    }\n\n    public function store(StoreUserRequest $request)\n    {\n        $user = User::create($request->all());\n        $user->roles()->sync($request->input('roles', []));\n\n        return redirect()->route('admin.users.index');\n    }\n\n    public function edit(User $user)\n    {\n        abort_if(Gate::denies('user_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $roles = Role::pluck('title', 'id');\n\n        $user->load('roles');\n\n        return view('admin.users.edit', compact('roles', 'user'));\n    }\n\n    public function update(UpdateUserRequest $request, User $user)\n    {\n        $user->update($request->all());\n        $user->roles()->sync($request->input('roles', []));\n\n        return redirect()->route('admin.users.index');\n    }\n\n    public function show(User $user)\n    {\n        abort_if(Gate::denies('user_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $user->load('roles');\n\n        return view('admin.users.show', compact('user'));\n    }\n\n    public function destroy(User $user)\n    {\n        abort_if(Gate::denies('user_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $user->delete();\n\n        return back();\n    }\n\n    public function massDestroy(MassDestroyUserRequest $request)\n    {\n        $users = User::find(request('ids'));\n\n        foreach ($users as $user) {\n            $user->delete();\n        }\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                        "uuid": "397480e35e56e867"
                                    }
                                },
                                "uuid": "0c623e7e77de1706"
                            },
                            "Api": {
                                "isDir": true,
                                "content": {
                                    "V1": {
                                        "isDir": true,
                                        "content": {
                                            "Admin": {
                                                "isDir": true,
                                                "content": {
                                                    "AssetsHistoryApiController.php": {
                                                        "isDir": false,
                                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api\\V1\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Resources\\Admin\\AssetsHistoryResource;\nuse App\\Models\\AssetsHistory;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass AssetsHistoryApiController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('assets_history_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return new AssetsHistoryResource(AssetsHistory::with(['asset', 'status', 'location', 'assigned_user'])->get());\n    }\n}\n",
                                                        "uuid": "05b8c603d61b2a82"
                                                    },
                                                    "PermissionsApiController.php": {
                                                        "isDir": false,
                                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api\\V1\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\StorePermissionRequest;\nuse App\\Http\\Requests\\UpdatePermissionRequest;\nuse App\\Http\\Resources\\Admin\\PermissionResource;\nuse App\\Models\\Permission;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass PermissionsApiController extends Controller\n{\n    public function index()\n    {\n        abort_if(Gate::denies('permission_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return new PermissionResource(Permission::all());\n    }\n\n    public function store(StorePermissionRequest $request)\n    {\n        $permission = Permission::create($request->all());\n\n        return (new PermissionResource($permission))\n            ->response()\n            ->setStatusCode(Response::HTTP_CREATED);\n    }\n\n    public function show(Permission $permission)\n    {\n        abort_if(Gate::denies('permission_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return new PermissionResource($permission);\n    }\n\n    public function update(UpdatePermissionRequest $request, Permission $permission)\n    {\n        $permission->update($request->all());\n\n        return (new PermissionResource($permission))\n            ->response()\n            ->setStatusCode(Response::HTTP_ACCEPTED);\n    }\n\n    public function destroy(Permission $permission)\n    {\n        abort_if(Gate::denies('permission_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $permission->delete();\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                                        "uuid": "b1efa3716d6dcfc3"
                                                    },
                                                    "ProvinsiApiController.php": {
                                                        "isDir": false,
                                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Api\\V1\\Admin;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Controllers\\Traits\\MediaUploadingTrait;\nuse App\\Http\\Requests\\StoreProvinsiRequest;\nuse App\\Http\\Requests\\UpdateProvinsiRequest;\nuse App\\Http\\Resources\\Admin\\ProvinsiResource;\nuse App\\Models\\Provinsi;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass ProvinsiApiController extends Controller\n{\n    use MediaUploadingTrait;\n\n    public function index()\n    {\n        abort_if(Gate::denies('provinsi_access'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return new ProvinsiResource(Provinsi::all());\n    }\n\n    public function store(StoreProvinsiRequest $request)\n    {\n        $provinsi = Provinsi::create($request->all());\n\n        if ($request->input('logo', false)) {\n            $provinsi->addMedia(storage_path('tmp\/uploads\/' . basename($request->input('logo'))))->toMediaCollection('logo');\n        }\n\n        return (new ProvinsiResource($provinsi))\n            ->response()\n            ->setStatusCode(Response::HTTP_CREATED);\n    }\n\n    public function show(Provinsi $provinsi)\n    {\n        abort_if(Gate::denies('provinsi_show'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return new ProvinsiResource($provinsi);\n    }\n\n    public function update(UpdateProvinsiRequest $request, Provinsi $provinsi)\n    {\n        $provinsi->update($request->all());\n\n        if ($request->input('logo', false)) {\n            if (! $provinsi->logo || $request->input('logo') !== $provinsi->logo->file_name) {\n                if ($provinsi->logo) {\n                    $provinsi->logo->delete();\n                }\n                $provinsi->addMedia(storage_path('tmp\/uploads\/' . basename($request->input('logo'))))->toMediaCollection('logo');\n            }\n        } elseif ($provinsi->logo) {\n            $provinsi->logo->delete();\n        }\n\n        return (new ProvinsiResource($provinsi))\n            ->response()\n            ->setStatusCode(Response::HTTP_ACCEPTED);\n    }\n\n    public function destroy(Provinsi $provinsi)\n    {\n        abort_if(Gate::denies('provinsi_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        $provinsi->delete();\n\n        return response(null, Response::HTTP_NO_CONTENT);\n    }\n}\n",
                                                        "uuid": "0d735a7e52cf45bd"
                                                    }
                                                },
                                                "uuid": "23f7273826211533"
                                            }
                                        },
                                        "uuid": "26230250d49419db"
                                    }
                                },
                                "uuid": "c2834810f20ebe13"
                            },
                            "Auth": {
                                "isDir": true,
                                "content": {
                                    "ChangePasswordController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Http\\Requests\\UpdatePasswordRequest;\nuse App\\Http\\Requests\\UpdateProfileRequest;\nuse Gate;\nuse Illuminate\\Http\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass ChangePasswordController extends Controller\n{\n    public function edit()\n    {\n        abort_if(Gate::denies('profile_password_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return view('auth.passwords.edit');\n    }\n\n    public function update(UpdatePasswordRequest $request)\n    {\n        auth()->user()->update($request->validated());\n\n        return redirect()->route('profile.password.edit')->with('message', __('global.change_password_success'));\n    }\n\n    public function updateProfile(UpdateProfileRequest $request)\n    {\n        $user = auth()->user();\n\n        $user->update($request->validated());\n\n        return redirect()->route('profile.password.edit')->with('message', __('global.update_profile_success'));\n    }\n\n    public function destroy()\n    {\n        $user = auth()->user();\n\n        $user->update([\n            'email' => time() . '_' . $user->email,\n        ]);\n\n        $user->delete();\n\n        return redirect()->route('login')->with('message', __('global.delete_account_success'));\n    }\n}\n",
                                        "uuid": "e6c86bc10c363bb9"
                                    },
                                    "ConfirmPasswordController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Providers\\RouteServiceProvider;\nuse Illuminate\\Foundation\\Auth\\ConfirmsPasswords;\n\nclass ConfirmPasswordController extends Controller\n{\n    \/*\n    |--------------------------------------------------------------------------\n    | Confirm Password Controller\n    |--------------------------------------------------------------------------\n    |\n    | This controller is responsible for handling password confirmations and\n    | uses a simple trait to include the behavior. You're free to explore\n    | this trait and override any functions that require customization.\n    |\n    *\/\n\n    use ConfirmsPasswords;\n\n    \/**\n     * Where to redirect users when the intended url fails.\n     *\n     * @var string\n     *\/\n    protected $redirectTo = RouteServiceProvider::HOME;\n\n    \/**\n     * Create a new controller instance.\n     *\n     * @return void\n     *\/\n    public function __construct()\n    {\n        $this->middleware('auth');\n    }\n}\n",
                                        "uuid": "e8559881abbcf42d"
                                    },
                                    "ForgotPasswordController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Foundation\\Auth\\SendsPasswordResetEmails;\n\nclass ForgotPasswordController extends Controller\n{\n    \/*\n    |--------------------------------------------------------------------------\n    | Password Reset Controller\n    |--------------------------------------------------------------------------\n    |\n    | This controller is responsible for handling password reset emails and\n    | includes a trait which assists in sending these notifications from\n    | your application to your users. Feel free to explore this trait.\n    |\n    *\/\n\n    use SendsPasswordResetEmails;\n}\n",
                                        "uuid": "84d586723df71978"
                                    },
                                    "LoginController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Providers\\RouteServiceProvider;\nuse Illuminate\\Foundation\\Auth\\AuthenticatesUsers;\n\nclass LoginController extends Controller\n{\n    \/*\n    |--------------------------------------------------------------------------\n    | Login Controller\n    |--------------------------------------------------------------------------\n    |\n    | This controller handles authenticating users for the application and\n    | redirecting them to your home screen. The controller uses a trait\n    | to conveniently provide its functionality to your applications.\n    |\n    *\/\n\n    use AuthenticatesUsers;\n\n    \/**\n     * Where to redirect users after login.\n     *\n     * @var string\n     *\/\n    protected $redirectTo = RouteServiceProvider::HOME;\n\n    \/**\n     * Create a new controller instance.\n     *\n     * @return void\n     *\/\n    public function __construct()\n    {\n        $this->middleware('guest')->except('logout');\n    }\n}\n",
                                        "uuid": "b69c54727e1f050d"
                                    },
                                    "RegisterController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Models\\User;\nuse App\\Providers\\RouteServiceProvider;\nuse Illuminate\\Foundation\\Auth\\RegistersUsers;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Facades\\Validator;\n\nclass RegisterController extends Controller\n{\n    \/*\n    |--------------------------------------------------------------------------\n    | Register Controller\n    |--------------------------------------------------------------------------\n    |\n    | This controller handles the registration of new users as well as their\n    | validation and creation. By default this controller uses a trait to\n    | provide this functionality without requiring any additional code.\n    |\n    *\/\n\n    use RegistersUsers;\n\n    \/**\n     * Where to redirect users after registration.\n     *\n     * @var string\n     *\/\n    protected $redirectTo = RouteServiceProvider::HOME;\n\n    \/**\n     * Create a new controller instance.\n     *\n     * @return void\n     *\/\n    public function __construct()\n    {\n        $this->middleware('guest');\n    }\n\n    \/**\n     * Get a validator for an incoming registration request.\n     *\n     * @param  array  $data\n     * @return \\Illuminate\\Contracts\\Validation\\Validator\n     *\/\n    protected function validator(array $data)\n    {\n        return Validator::make($data, [\n            'name'     => ['required', 'string', 'max:255'],\n            'email'    => ['required', 'string', 'email', 'max:255', 'unique:users'],\n            'password' => ['required', 'string', 'min:8', 'confirmed'],\n        ]);\n    }\n\n         \/**\n          * Create a new user instance after a valid registration.\n          *\n          * @param  array  $data\n          * @return \\App\\User\n          *\/\n         protected function create(array $data)\n         {\n             return User::create([\n                 'name'     => $data['name'],\n                 'email'    => $data['email'],\n                 'password' => Hash::make($data['password']),\n             ]);\n         }\n}\n",
                                        "uuid": "1ac1ac961eeb7446"
                                    },
                                    "ResetPasswordController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Providers\\RouteServiceProvider;\nuse Illuminate\\Foundation\\Auth\\ResetsPasswords;\n\nclass ResetPasswordController extends Controller\n{\n    \/*\n    |--------------------------------------------------------------------------\n    | Password Reset Controller\n    |--------------------------------------------------------------------------\n    |\n    | This controller is responsible for handling password reset requests\n    | and uses a simple trait to include this behavior. You're free to\n    | explore this trait and override any methods you wish to tweak.\n    |\n    *\/\n\n    use ResetsPasswords;\n\n    \/**\n     * Where to redirect users after resetting their password.\n     *\n     * @var string\n     *\/\n    protected $redirectTo = RouteServiceProvider::HOME;\n}\n",
                                        "uuid": "f7dc512d6493f634"
                                    },
                                    "VerificationController.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Auth;\n\nuse App\\Http\\Controllers\\Controller;\nuse App\\Providers\\RouteServiceProvider;\nuse Illuminate\\Foundation\\Auth\\VerifiesEmails;\n\nclass VerificationController extends Controller\n{\n    \/*\n    |--------------------------------------------------------------------------\n    | Email Verification Controller\n    |--------------------------------------------------------------------------\n    |\n    | This controller is responsible for handling email verification for any\n    | user that recently registered with the application. Emails may also\n    | be re-sent if the user didn't receive the original email message.\n    |\n    *\/\n\n    use VerifiesEmails;\n\n    \/**\n     * Where to redirect users after verification.\n     *\n     * @var string\n     *\/\n    protected $redirectTo = RouteServiceProvider::HOME;\n\n    \/**\n     * Create a new controller instance.\n     *\n     * @return void\n     *\/\n    public function __construct()\n    {\n        $this->middleware('auth');\n        $this->middleware('signed')->only('verify');\n        $this->middleware('throttle:6,1')->only('verify', 'resend');\n    }\n}\n",
                                        "uuid": "25c9870b3a37a988"
                                    }
                                },
                                "uuid": "6e54356e52432abc"
                            },
                            "Traits": {
                                "isDir": true,
                                "content": {
                                    "MediaUploadingTrait.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Controllers\\Traits;\n\nuse Illuminate\\Http\\Request;\n\ntrait MediaUploadingTrait\n{\n    public function storeMedia(Request $request)\n    {\n        \/\/ Validates file size\n        if (request()->has('size')) {\n            $this->validate(request(), [\n                'file' => 'max:' . request()->input('size') * 1024,\n            ]);\n        }\n        \/\/ If width or height is preset - we are validating it as an image\n        if (request()->has('width') || request()->has('height')) {\n            $this->validate(request(), [\n                'file' => sprintf(\n                    'image|dimensions:max_width=%s,max_height=%s',\n                    request()->input('width', 100000),\n                    request()->input('height', 100000)\n                ),\n            ]);\n        }\n\n        $path = storage_path('tmp\/uploads');\n\n        try {\n            if (! file_exists($path)) {\n                mkdir($path, 0755, true);\n            }\n        } catch (\\Exception $e) {\n        }\n\n        $file = $request->file('file');\n\n        $name = uniqid() . '_' . trim($file->getClientOriginalName());\n\n        $file->move($path, $name);\n\n        return response()->json([\n            'name'          => $name,\n            'original_name' => $file->getClientOriginalName(),\n        ]);\n    }\n}\n",
                                        "uuid": "65b49a9244773b54"
                                    }
                                },
                                "uuid": "951418d911f83b0c"
                            },
                            "Controller.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Foundation\\Auth\\Access\\AuthorizesRequests;\nuse Illuminate\\Foundation\\Validation\\ValidatesRequests;\nuse Illuminate\\Routing\\Controller as BaseController;\n\nclass Controller extends BaseController\n{\n    use AuthorizesRequests, ValidatesRequests;\n}\n",
                                "uuid": "30143b935571db84"
                            },
                            "HomeController.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\n\nclass HomeController extends Controller\n{\n    \/**\n     * Create a new controller instance.\n     *\n     * @return void\n     *\/\n    public function __construct()\n    {\n        $this->middleware('auth');\n    }\n\n    \/**\n     * Show the application dashboard.\n     *\n     * @return \\Illuminate\\Contracts\\Support\\Renderable\n     *\/\n    public function index()\n    {\n        return view('home');\n    }\n}\n",
                                "uuid": "f709040b93c23edd"
                            }
                        },
                        "uuid": "8427fc36e4dd94db"
                    },
                    "Middleware": {
                        "isDir": true,
                        "content": {
                            "AuthGates.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse App\\Models\\Role;\nuse Closure;\nuse Illuminate\\Support\\Facades\\Gate;\n\nclass AuthGates\n{\n    public function handle($request, Closure $next)\n    {\n        $user = auth()->user();\n\n        if (! $user) {\n            return $next($request);\n        }\n\n        $roles            = Role::with('permissions')->get();\n        $permissionsArray = [];\n\n        foreach ($roles as $role) {\n            foreach ($role->permissions as $permissions) {\n                $permissionsArray[$permissions->title][] = $role->id;\n            }\n        }\n\n        foreach ($permissionsArray as $title => $roles) {\n            Gate::define($title, function ($user) use ($roles) {\n                return count(array_intersect($user->roles->pluck('id')->toArray(), $roles)) > 0;\n            });\n        }\n\n        return $next($request);\n    }\n}\n",
                                "uuid": "4d2356829af46f59"
                            },
                            "Authenticate.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Auth\\Middleware\\Authenticate as Middleware;\nuse Illuminate\\Http\\Request;\n\nclass Authenticate extends Middleware\n{\n    \/**\n     * Get the path the user should be redirected to when they are not authenticated.\n     *\/\n    protected function redirectTo(Request $request): ?string\n    {\n        return $request->expectsJson() ? null : route('login');\n    }\n}\n",
                                "uuid": "226c1bab81bf6eb8"
                            },
                            "EncryptCookies.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Cookie\\Middleware\\EncryptCookies as Middleware;\n\nclass EncryptCookies extends Middleware\n{\n    \/**\n     * The names of the cookies that should not be encrypted.\n     *\n     * @var array<int, string>\n     *\/\n    protected $except = [\n        \/\/\n    ];\n}\n",
                                "uuid": "46702fbb83a1fd8d"
                            },
                            "PreventRequestsDuringMaintenance.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance as Middleware;\n\nclass PreventRequestsDuringMaintenance extends Middleware\n{\n    \/**\n     * The URIs that should be reachable while maintenance mode is enabled.\n     *\n     * @var array<int, string>\n     *\/\n    protected $except = [\n        \/\/\n    ];\n}\n",
                                "uuid": "e6317648af111565"
                            },
                            "RedirectIfAuthenticated.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse App\\Providers\\RouteServiceProvider;\nuse Closure;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass RedirectIfAuthenticated\n{\n    \/**\n     * Handle an incoming request.\n     *\n     * @param  \\Closure(\\Illuminate\\Http\\Request): (\\Symfony\\Component\\HttpFoundation\\Response)  $next\n     *\/\n    public function handle(Request $request, Closure $next, string ...$guards): Response\n    {\n        $guards = empty($guards) ? [null] : $guards;\n\n        foreach ($guards as $guard) {\n            if (Auth::guard($guard)->check()) {\n                return redirect(RouteServiceProvider::HOME);\n            }\n        }\n\n        return $next($request);\n    }\n}\n",
                                "uuid": "1e78a9d1848475e9"
                            },
                            "SetLocale.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass SetLocale\n{\n    public function handle($request, Closure $next)\n    {\n        if (request('change_language')) {\n            session()->put('language', request('change_language'));\n            $language = request('change_language');\n        } elseif (session('language')) {\n            $language = session('language');\n        } elseif (config('panel.primary_language')) {\n            $language = config('panel.primary_language');\n        }\n\n        if (isset($language)) {\n            app()->setLocale($language);\n        }\n\n        return $next($request);\n    }\n}\n",
                                "uuid": "dfca6af3de9431ce"
                            },
                            "TrimStrings.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Foundation\\Http\\Middleware\\TrimStrings as Middleware;\n\nclass TrimStrings extends Middleware\n{\n    \/**\n     * The names of the attributes that should not be trimmed.\n     *\n     * @var array<int, string>\n     *\/\n    protected $except = [\n        'current_password',\n        'password',\n        'password_confirmation',\n    ];\n}\n",
                                "uuid": "afb3977db4b49cea"
                            },
                            "TrustHosts.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Http\\Middleware\\TrustHosts as Middleware;\n\nclass TrustHosts extends Middleware\n{\n    \/**\n     * Get the host patterns that should be trusted.\n     *\n     * @return array<int, string|null>\n     *\/\n    public function hosts(): array\n    {\n        return [\n            $this->allSubdomainsOfApplicationUrl(),\n        ];\n    }\n}\n",
                                "uuid": "7aec560b3bb0b38d"
                            },
                            "TrustProxies.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Http\\Middleware\\TrustProxies as Middleware;\nuse Illuminate\\Http\\Request;\n\nclass TrustProxies extends Middleware\n{\n    \/**\n     * The trusted proxies for this application.\n     *\n     * @var array<int, string>|string|null\n     *\/\n    protected $proxies;\n\n    \/**\n     * The headers that should be used to detect proxies.\n     *\n     * @var int\n     *\/\n    protected $headers =\n        Request::HEADER_X_FORWARDED_FOR |\n        Request::HEADER_X_FORWARDED_HOST |\n        Request::HEADER_X_FORWARDED_PORT |\n        Request::HEADER_X_FORWARDED_PROTO |\n        Request::HEADER_X_FORWARDED_AWS_ELB;\n}\n",
                                "uuid": "f419362f47117cff"
                            },
                            "ValidateSignature.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Routing\\Middleware\\ValidateSignature as Middleware;\n\nclass ValidateSignature extends Middleware\n{\n    \/**\n     * The names of the query string parameters that should be ignored.\n     *\n     * @var array<int, string>\n     *\/\n    protected $except = [\n        \/\/ 'fbclid',\n        \/\/ 'utm_campaign',\n        \/\/ 'utm_content',\n        \/\/ 'utm_medium',\n        \/\/ 'utm_source',\n        \/\/ 'utm_term',\n    ];\n}\n",
                                "uuid": "3163a882e817b0a6"
                            },
                            "VerifyCsrfToken.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Middleware;\n\nuse Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken as Middleware;\n\nclass VerifyCsrfToken extends Middleware\n{\n    \/**\n     * The URIs that should be excluded from CSRF verification.\n     *\n     * @var array<int, string>\n     *\/\n    protected $except = [\n        \/\/\n    ];\n}\n",
                                "uuid": "dfb7163d6ac29300"
                            }
                        },
                        "uuid": "1968bc22adf6eeb5"
                    },
                    "Requests": {
                        "isDir": true,
                        "content": {
                            "MassDestroyAssetCategoryRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetCategory;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyAssetCategoryRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('asset_category_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:asset_categories,id',\n        ];\n    }\n}\n",
                                "uuid": "762da8aad04bb0d4"
                            },
                            "MassDestroyAssetLocationRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetLocation;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyAssetLocationRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('asset_location_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:asset_locations,id',\n        ];\n    }\n}\n",
                                "uuid": "cf808e9cfbddaaaa"
                            },
                            "MassDestroyAssetRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Asset;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyAssetRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('asset_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:assets,id',\n        ];\n    }\n}\n",
                                "uuid": "7d91a3ac60b57d47"
                            },
                            "MassDestroyAssetStatusRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetStatus;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyAssetStatusRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('asset_status_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:asset_statuses,id',\n        ];\n    }\n}\n",
                                "uuid": "9a78aa22f0edcacf"
                            },
                            "MassDestroyAssetsHistoryRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetsHistory;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyAssetsHistoryRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('assets_history_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:assets_histories,id',\n        ];\n    }\n}\n",
                                "uuid": "b4b65022e52c2e21"
                            },
                            "MassDestroyContentCategoryRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\ContentCategory;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyContentCategoryRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('content_category_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:content_categories,id',\n        ];\n    }\n}\n",
                                "uuid": "9728624bd940076b"
                            },
                            "MassDestroyContentPageRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\ContentPage;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyContentPageRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('content_page_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:content_pages,id',\n        ];\n    }\n}\n",
                                "uuid": "220eff80b1cc3ea6"
                            },
                            "MassDestroyContentTagRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\ContentTag;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyContentTagRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('content_tag_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:content_tags,id',\n        ];\n    }\n}\n",
                                "uuid": "80d122b85c5f8b7e"
                            },
                            "MassDestroyPermissionRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Permission;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyPermissionRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('permission_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:permissions,id',\n        ];\n    }\n}\n",
                                "uuid": "41bc07c02efc6219"
                            },
                            "MassDestroyProvinsiRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Provinsi;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyProvinsiRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('provinsi_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:provinsis,id',\n        ];\n    }\n}\n",
                                "uuid": "f9c10a77d3c7b4a0"
                            },
                            "MassDestroyRoleRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Role;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyRoleRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('role_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:roles,id',\n        ];\n    }\n}\n",
                                "uuid": "88a64380d79e465e"
                            },
                            "MassDestroyUserRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\User;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MassDestroyUserRequest extends FormRequest\n{\n    public function authorize()\n    {\n        abort_if(Gate::denies('user_delete'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    public function rules()\n    {\n        return [\n            'ids'   => 'required|array',\n            'ids.*' => 'exists:users,id',\n        ];\n    }\n}\n",
                                "uuid": "1cbdf3625f1672ad"
                            },
                            "StoreAssetCategoryRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetCategory;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreAssetCategoryRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('asset_category_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "cd1c6e825a7cc0a4"
                            },
                            "StoreAssetLocationRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetLocation;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreAssetLocationRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('asset_location_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "13a90e4acfb09036"
                            },
                            "StoreAssetRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Asset;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreAssetRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('asset_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'category_id' => [\n                'required',\n                'integer',\n            ],\n            'serial_number' => [\n                'string',\n                'nullable',\n            ],\n            'name' => [\n                'string',\n                'required',\n            ],\n            'photos' => [\n                'array',\n            ],\n            'status_id' => [\n                'required',\n                'integer',\n            ],\n            'location_id' => [\n                'required',\n                'integer',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "8b0f2222e29d0866"
                            },
                            "StoreAssetStatusRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetStatus;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreAssetStatusRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('asset_status_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "fab754113f171ae7"
                            },
                            "StoreAssetsHistoryRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetsHistory;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreAssetsHistoryRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('assets_history_create');\n    }\n\n    public function rules()\n    {\n        return [];\n    }\n}\n",
                                "uuid": "2ffd6f702458b2c5"
                            },
                            "StoreContentCategoryRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\ContentCategory;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreContentCategoryRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('content_category_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n            'slug' => [\n                'string',\n                'nullable',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "68ffc494c6bffb09"
                            },
                            "StoreContentPageRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\ContentPage;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreContentPageRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('content_page_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'title' => [\n                'string',\n                'required',\n            ],\n            'categories.*' => [\n                'integer',\n            ],\n            'categories' => [\n                'array',\n            ],\n            'tags.*' => [\n                'integer',\n            ],\n            'tags' => [\n                'array',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "5413b7650ea8773f"
                            },
                            "StoreContentTagRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\ContentTag;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreContentTagRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('content_tag_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n            'slug' => [\n                'string',\n                'nullable',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "cb5ea83e84b81fae"
                            },
                            "StorePermissionRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Permission;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StorePermissionRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('permission_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'title' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "e6a9ff4b942131ff"
                            },
                            "StoreProvinsiRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Provinsi;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreProvinsiRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('provinsi_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'kode' => [\n                'string',\n                'required',\n            ],\n            'nama' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "eaf1d69b5304d70d"
                            },
                            "StoreRoleRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Role;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreRoleRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('role_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'title' => [\n                'string',\n                'required',\n            ],\n            'permissions.*' => [\n                'integer',\n            ],\n            'permissions' => [\n                'required',\n                'array',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "5475bc3a0685cd1f"
                            },
                            "StoreUserRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\User;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass StoreUserRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('user_create');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n            'email' => [\n                'required',\n                'unique:users',\n            ],\n            'password' => [\n                'required',\n            ],\n            'roles.*' => [\n                'integer',\n            ],\n            'roles' => [\n                'required',\n                'array',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "19d7cf4e07969282"
                            },
                            "UpdateAssetCategoryRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetCategory;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateAssetCategoryRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('asset_category_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "2d18687d4eec642e"
                            },
                            "UpdateAssetLocationRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetLocation;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateAssetLocationRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('asset_location_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "6ed3109c18f4892a"
                            },
                            "UpdateAssetRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Asset;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateAssetRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('asset_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'category_id' => [\n                'required',\n                'integer',\n            ],\n            'serial_number' => [\n                'string',\n                'nullable',\n            ],\n            'name' => [\n                'string',\n                'required',\n            ],\n            'photos' => [\n                'array',\n            ],\n            'status_id' => [\n                'required',\n                'integer',\n            ],\n            'location_id' => [\n                'required',\n                'integer',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "6cc2e1151e639db5"
                            },
                            "UpdateAssetStatusRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetStatus;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateAssetStatusRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('asset_status_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "7ad28a02451d86e7"
                            },
                            "UpdateAssetsHistoryRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\AssetsHistory;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateAssetsHistoryRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('assets_history_edit');\n    }\n\n    public function rules()\n    {\n        return [];\n    }\n}\n",
                                "uuid": "384fdcf6fb805dfc"
                            },
                            "UpdateContentCategoryRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\ContentCategory;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateContentCategoryRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('content_category_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n            'slug' => [\n                'string',\n                'nullable',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "7d831b4bc25e1069"
                            },
                            "UpdateContentPageRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\ContentPage;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateContentPageRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('content_page_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'title' => [\n                'string',\n                'required',\n            ],\n            'categories.*' => [\n                'integer',\n            ],\n            'categories' => [\n                'array',\n            ],\n            'tags.*' => [\n                'integer',\n            ],\n            'tags' => [\n                'array',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "640db1e83e8417db"
                            },
                            "UpdateContentTagRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\ContentTag;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateContentTagRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('content_tag_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n            'slug' => [\n                'string',\n                'nullable',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "d0b7732031ffb399"
                            },
                            "UpdatePasswordRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdatePasswordRequest extends FormRequest\n{\n    \/**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     *\/\n    public function authorize()\n    {\n        abort_if(Gate::denies('profile_password_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    \/**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     *\/\n    public function rules()\n    {\n        return [\n            'password' => ['required', 'string', 'min:8', 'confirmed'],\n        ];\n    }\n}\n",
                                "uuid": "17f99f9371cd8bba"
                            },
                            "UpdatePermissionRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Permission;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdatePermissionRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('permission_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'title' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "dad745dfa1bd3103"
                            },
                            "UpdateProfileRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateProfileRequest extends FormRequest\n{\n    \/**\n     * Determine if the user is authorized to make this request.\n     *\n     * @return bool\n     *\/\n    public function authorize()\n    {\n        abort_if(Gate::denies('profile_password_edit'), Response::HTTP_FORBIDDEN, '403 Forbidden');\n\n        return true;\n    }\n\n    \/**\n     * Get the validation rules that apply to the request.\n     *\n     * @return array\n     *\/\n    public function rules()\n    {\n        return [\n            'name'  => ['required', 'string', 'max:255'],\n            'email' => ['required', 'string', 'email', 'max:255', 'unique:users,email,' . auth()->id()],\n        ];\n    }\n}\n",
                                "uuid": "adedb98265ddf45c"
                            },
                            "UpdateProvinsiRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Provinsi;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateProvinsiRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('provinsi_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'kode' => [\n                'string',\n                'required',\n            ],\n            'nama' => [\n                'string',\n                'required',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "ce21780dd812185b"
                            },
                            "UpdateRoleRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\Role;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateRoleRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('role_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'title' => [\n                'string',\n                'required',\n            ],\n            'permissions.*' => [\n                'integer',\n            ],\n            'permissions' => [\n                'required',\n                'array',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "43dcdcd54a8257d8"
                            },
                            "UpdateUserRequest.php": {
                                "isDir": false,
                                "content": "<?php\n\nnamespace App\\Http\\Requests;\n\nuse App\\Models\\User;\nuse Gate;\nuse Illuminate\\Foundation\\Http\\FormRequest;\nuse Illuminate\\Http\\Response;\n\nclass UpdateUserRequest extends FormRequest\n{\n    public function authorize()\n    {\n        return Gate::allows('user_edit');\n    }\n\n    public function rules()\n    {\n        return [\n            'name' => [\n                'string',\n                'required',\n            ],\n            'email' => [\n                'required',\n                'unique:users,email,' . request()->route('user')->id,\n            ],\n            'roles.*' => [\n                'integer',\n            ],\n            'roles' => [\n                'required',\n                'array',\n            ],\n        ];\n    }\n}\n",
                                "uuid": "5dc627a83c2f6aa9"
                            }
                        },
                        "uuid": "0d991cc17f844102"
                    },
                    "Resources": {
                        "isDir": true,
                        "content": {
                            "Admin": {
                                "isDir": true,
                                "content": {
                                    "AssetsHistoryResource.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Resources\\Admin;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass AssetsHistoryResource extends JsonResource\n{\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n",
                                        "uuid": "bc2cceb4ecf333b1"
                                    },
                                    "PermissionResource.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Resources\\Admin;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass PermissionResource extends JsonResource\n{\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n",
                                        "uuid": "5c0e3a3cae3e4b66"
                                    },
                                    "ProvinsiResource.php": {
                                        "isDir": false,
                                        "content": "<?php\n\nnamespace App\\Http\\Resources\\Admin;\n\nuse Illuminate\\Http\\Resources\\Json\\JsonResource;\n\nclass ProvinsiResource extends JsonResource\n{\n    public function toArray($request)\n    {\n        return parent::toArray($request);\n    }\n}\n",
                                        "uuid": "0474843b17c2b0dd"
                                    }
                                },
                                "uuid": "00cee906c5d3d2b4"
                            }
                        },
                        "uuid": "7d220c5fe24cfbb1"
                    },
                    "Kernel.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Http;\n\nuse Illuminate\\Foundation\\Http\\Kernel as HttpKernel;\n\nclass Kernel extends HttpKernel\n{\n    protected $middleware = [\n        \/\/ \\App\\Http\\Middleware\\TrustHosts::class,\n        \\App\\Http\\Middleware\\TrustProxies::class,\n        \\Illuminate\\Http\\Middleware\\HandleCors::class,\n        \\App\\Http\\Middleware\\PreventRequestsDuringMaintenance::class,\n        \\Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize::class,\n        \\App\\Http\\Middleware\\TrimStrings::class,\n        \\Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull::class,\n    ];\n\n    protected $middlewareAliases = [\n        'auth'             => \\App\\Http\\Middleware\\Authenticate::class,\n        'auth.basic'       => \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class,\n        'auth.session'     => \\Illuminate\\Session\\Middleware\\AuthenticateSession::class,\n        'cache.headers'    => \\Illuminate\\Http\\Middleware\\SetCacheHeaders::class,\n        'can'              => \\Illuminate\\Auth\\Middleware\\Authorize::class,\n        'guest'            => \\App\\Http\\Middleware\\RedirectIfAuthenticated::class,\n        'password.confirm' => \\Illuminate\\Auth\\Middleware\\RequirePassword::class,\n        'signed'           => \\App\\Http\\Middleware\\ValidateSignature::class,\n        'throttle'         => \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class,\n        'verified'         => \\Illuminate\\Auth\\Middleware\\EnsureEmailIsVerified::class,\n    ];\n\n    protected $middlewareGroups = [\n        'web' => [\n            \\App\\Http\\Middleware\\EncryptCookies::class,\n            \\Illuminate\\Cookie\\Middleware\\AddQueuedCookiesToResponse::class,\n            \\Illuminate\\Session\\Middleware\\StartSession::class,\n            \\Illuminate\\View\\Middleware\\ShareErrorsFromSession::class,\n            \\App\\Http\\Middleware\\VerifyCsrfToken::class,\n            \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n            \\App\\Http\\Middleware\\AuthGates::class,\n            \\App\\Http\\Middleware\\SetLocale::class,\n        ],\n        'api' => [\n            \/\/ \\Laravel\\Sanctum\\Http\\Middleware\\EnsureFrontendRequestsAreStateful::class,\n            \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class . ':api',\n            \\Illuminate\\Routing\\Middleware\\SubstituteBindings::class,\n        ],\n    ];\n}\n",
                        "uuid": "66b6b79411111635"
                    }
                },
                "uuid": "1749b73ab49ae67e"
            },
            "Models": {
                "isDir": true,
                "content": {
                    "Asset.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Spatie\\MediaLibrary\\HasMedia;\nuse Spatie\\MediaLibrary\\InteractsWithMedia;\nuse Spatie\\MediaLibrary\\MediaCollections\\Models\\Media;\n\nclass Asset extends Model implements HasMedia\n{\n    use SoftDeletes, InteractsWithMedia, HasFactory;\n\n    public $table = 'assets';\n\n    protected $appends = [\n        'photos',\n    ];\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'category_id',\n        'serial_number',\n        'name',\n        'status_id',\n        'location_id',\n        'notes',\n        'assigned_to_id',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n\n    public static function boot()\n    {\n        parent::boot();\n        self::observe(new \\App\\Observers\\AssetsHistoryObserver);\n    }\n\n    public function registerMediaConversions(Media $media = null): void\n    {\n        $this->addMediaConversion('thumb')->fit('crop', 50, 50);\n        $this->addMediaConversion('preview')->fit('crop', 120, 120);\n    }\n\n    public function category()\n    {\n        return $this->belongsTo(AssetCategory::class, 'category_id');\n    }\n\n    public function getPhotosAttribute()\n    {\n        return $this->getMedia('photos');\n    }\n\n    public function status()\n    {\n        return $this->belongsTo(AssetStatus::class, 'status_id');\n    }\n\n    public function location()\n    {\n        return $this->belongsTo(AssetLocation::class, 'location_id');\n    }\n\n    public function assigned_to()\n    {\n        return $this->belongsTo(User::class, 'assigned_to_id');\n    }\n}\n",
                        "uuid": "3a4f23eecff22bfb"
                    },
                    "AssetCategory.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\nclass AssetCategory extends Model\n{\n    use SoftDeletes, HasFactory;\n\n    public $table = 'asset_categories';\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'name',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n}\n",
                        "uuid": "3a67e3c7f77a0869"
                    },
                    "AssetLocation.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\nclass AssetLocation extends Model\n{\n    use SoftDeletes, HasFactory;\n\n    public $table = 'asset_locations';\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'name',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n}\n",
                        "uuid": "93fafe6d40d67d18"
                    },
                    "AssetStatus.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\nclass AssetStatus extends Model\n{\n    use SoftDeletes, HasFactory;\n\n    public $table = 'asset_statuses';\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'name',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n}\n",
                        "uuid": "2d83aa91ce0a9107"
                    },
                    "AssetsHistory.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass AssetsHistory extends Model\n{\n    use HasFactory;\n\n    public $table = 'assets_histories';\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n    ];\n\n    protected $fillable = [\n        'asset_id',\n        'status_id',\n        'location_id',\n        'assigned_user_id',\n        'created_at',\n        'updated_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n\n    public function asset()\n    {\n        return $this->belongsTo(Asset::class, 'asset_id');\n    }\n\n    public function status()\n    {\n        return $this->belongsTo(AssetStatus::class, 'status_id');\n    }\n\n    public function location()\n    {\n        return $this->belongsTo(AssetLocation::class, 'location_id');\n    }\n\n    public function assigned_user()\n    {\n        return $this->belongsTo(User::class, 'assigned_user_id');\n    }\n}\n",
                        "uuid": "31026672ab3bb619"
                    },
                    "AuditLog.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass AuditLog extends Model\n{\n    public $table = 'audit_logs';\n\n    protected $fillable = [\n        'description',\n        'subject_id',\n        'subject_type',\n        'user_id',\n        'properties',\n        'host',\n    ];\n\n    protected $casts = [\n        'properties' => 'collection',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n}\n",
                        "uuid": "3f9825c99fb9e75b"
                    },
                    "ContentCategory.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\nclass ContentCategory extends Model\n{\n    use SoftDeletes, HasFactory;\n\n    public $table = 'content_categories';\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'name',\n        'slug',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n}\n",
                        "uuid": "72a5455d6012d098"
                    },
                    "ContentPage.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Spatie\\MediaLibrary\\HasMedia;\nuse Spatie\\MediaLibrary\\InteractsWithMedia;\nuse Spatie\\MediaLibrary\\MediaCollections\\Models\\Media;\n\nclass ContentPage extends Model implements HasMedia\n{\n    use SoftDeletes, InteractsWithMedia, HasFactory;\n\n    public $table = 'content_pages';\n\n    protected $appends = [\n        'featured_image',\n    ];\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'title',\n        'page_text',\n        'excerpt',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n\n    public function registerMediaConversions(Media $media = null): void\n    {\n        $this->addMediaConversion('thumb')->fit('crop', 50, 50);\n        $this->addMediaConversion('preview')->fit('crop', 120, 120);\n    }\n\n    public function categories()\n    {\n        return $this->belongsToMany(ContentCategory::class);\n    }\n\n    public function tags()\n    {\n        return $this->belongsToMany(ContentTag::class);\n    }\n\n    public function getFeaturedImageAttribute()\n    {\n        $file = $this->getMedia('featured_image')->last();\n        if ($file) {\n            $file->url       = $file->getUrl();\n            $file->thumbnail = $file->getUrl('thumb');\n            $file->preview   = $file->getUrl('preview');\n        }\n\n        return $file;\n    }\n}\n",
                        "uuid": "ab5b3717ee37f280"
                    },
                    "ContentTag.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\nclass ContentTag extends Model\n{\n    use SoftDeletes, HasFactory;\n\n    public $table = 'content_tags';\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'name',\n        'slug',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n}\n",
                        "uuid": "98d09f434bb10e78"
                    },
                    "Permission.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse App\\Traits\\Auditable;\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\nclass Permission extends Model\n{\n    use SoftDeletes, Auditable, HasFactory;\n\n    public $table = 'permissions';\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'title',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n}\n",
                        "uuid": "68b7c439173c00ec"
                    },
                    "Provinsi.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse App\\Traits\\Auditable;\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Spatie\\MediaLibrary\\HasMedia;\nuse Spatie\\MediaLibrary\\InteractsWithMedia;\nuse Spatie\\MediaLibrary\\MediaCollections\\Models\\Media;\n\nclass Provinsi extends Model implements HasMedia\n{\n    use SoftDeletes, InteractsWithMedia, Auditable, HasFactory;\n\n    public $table = 'provinsis';\n\n    protected $appends = [\n        'logo',\n    ];\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'kode',\n        'nama',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n\n    public function registerMediaConversions(Media $media = null): void\n    {\n        $this->addMediaConversion('thumb')->fit('crop', 50, 50);\n        $this->addMediaConversion('preview')->fit('crop', 120, 120);\n    }\n\n    public function getLogoAttribute()\n    {\n        $file = $this->getMedia('logo')->last();\n        if ($file) {\n            $file->url       = $file->getUrl();\n            $file->thumbnail = $file->getUrl('thumb');\n            $file->preview   = $file->getUrl('preview');\n        }\n\n        return $file;\n    }\n}\n",
                        "uuid": "4faf7b354937fe12"
                    },
                    "Role.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse App\\Traits\\Auditable;\nuse DateTimeInterface;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\n\nclass Role extends Model\n{\n    use SoftDeletes, Auditable, HasFactory;\n\n    public $table = 'roles';\n\n    protected $dates = [\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'title',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n\n    public function permissions()\n    {\n        return $this->belongsToMany(Permission::class);\n    }\n}\n",
                        "uuid": "e82389e350870b8b"
                    },
                    "User.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Models;\n\nuse App\\Traits\\Auditable;\nuse Carbon\\Carbon;\nuse DateTimeInterface;\nuse Hash;\nuse Illuminate\\Auth\\Notifications\\ResetPassword;\nuse Illuminate\\Contracts\\Auth\\MustVerifyEmail;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\SoftDeletes;\nuse Illuminate\\Foundation\\Auth\\User as Authenticatable;\nuse Illuminate\\Notifications\\Notifiable;\n\nclass User extends Authenticatable\n{\n    use SoftDeletes, Notifiable, Auditable, HasFactory;\n\n    public $table = 'users';\n\n    protected $hidden = [\n        'remember_token',\n        'password',\n    ];\n\n    protected $dates = [\n        'email_verified_at',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected $fillable = [\n        'name',\n        'email',\n        'email_verified_at',\n        'password',\n        'remember_token',\n        'created_at',\n        'updated_at',\n        'deleted_at',\n    ];\n\n    protected function serializeDate(DateTimeInterface $date)\n    {\n        return $date->format('Y-m-d H:i:s');\n    }\n\n    public function getIsAdminAttribute()\n    {\n        return $this->roles()->where('id', 1)->exists();\n    }\n\n    public function getEmailVerifiedAtAttribute($value)\n    {\n        return $value ? Carbon::createFromFormat('Y-m-d H:i:s', $value)->format(config('panel.date_format') . ' ' . config('panel.time_format')) : null;\n    }\n\n    public function setEmailVerifiedAtAttribute($value)\n    {\n        $this->attributes['email_verified_at'] = $value ? Carbon::createFromFormat(config('panel.date_format') . ' ' . config('panel.time_format'), $value)->format('Y-m-d H:i:s') : null;\n    }\n\n    public function setPasswordAttribute($input)\n    {\n        if ($input) {\n            $this->attributes['password'] = app('hash')->needsRehash($input) ? Hash::make($input) : $input;\n        }\n    }\n\n    public function sendPasswordResetNotification($token)\n    {\n        $this->notify(new ResetPassword($token));\n    }\n\n    public function roles()\n    {\n        return $this->belongsToMany(Role::class);\n    }\n}\n",
                        "uuid": "643c1d118bb3b6a6"
                    }
                },
                "uuid": "70c3ac0b2c3d8caa"
            },
            "Observers": {
                "isDir": true,
                "content": {
                    "AssetsHistoryObserver.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Observers;\n\nuse App\\Models\\Asset;\nuse App\\Models\\AssetsHistory;\n\nclass AssetsHistoryObserver\n{\n    public function updated(Asset $asset)\n    {\n        if (auth()->check()) {\n            AssetsHistory::create([\n                'asset_id'         => $asset->id,\n                'status_id'        => $asset->status_id,\n                'location_id'      => $asset->location_id,\n                'assigned_user_id' => $asset->assigned_to_id,\n            ]);\n        }\n    }\n}\n",
                        "uuid": "e693f074d982e3a9"
                    }
                },
                "uuid": "df0db7c14900d855"
            },
            "Providers": {
                "isDir": true,
                "content": {
                    "AppServiceProvider.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\ServiceProvider;\n\nclass AppServiceProvider extends ServiceProvider\n{\n    \/**\n     * Register any application services.\n     *\/\n    public function register(): void\n    {\n        \/\/\n    }\n\n    \/**\n     * Bootstrap any application services.\n     *\/\n    public function boot(): void\n    {\n        \/\/\n    }\n}\n",
                        "uuid": "e60303db53fd4eef"
                    },
                    "AuthServiceProvider.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Providers;\n\n\/\/ use Illuminate\\Support\\Facades\\Gate;\nuse Illuminate\\Foundation\\Support\\Providers\\AuthServiceProvider as ServiceProvider;\n\nclass AuthServiceProvider extends ServiceProvider\n{\n    \/**\n     * The model to policy mappings for the application.\n     *\n     * @var array<class-string, class-string>\n     *\/\n    protected $policies = [\n        \/\/ 'App\\Models\\Model' => 'App\\Policies\\ModelPolicy',\n    ];\n\n    \/**\n     * Register any authentication \/ authorization services.\n     *\/\n    public function boot(): void\n    {\n        $this->registerPolicies();\n\n        \/\/\n    }\n}\n",
                        "uuid": "c62880cb0bd54931"
                    },
                    "BroadcastServiceProvider.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Support\\Facades\\Broadcast;\nuse Illuminate\\Support\\ServiceProvider;\n\nclass BroadcastServiceProvider extends ServiceProvider\n{\n    \/**\n     * Bootstrap any application services.\n     *\/\n    public function boot(): void\n    {\n        Broadcast::routes();\n\n        require base_path('routes\/channels.php');\n    }\n}\n",
                        "uuid": "e5790cc4765ce629"
                    },
                    "EventServiceProvider.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Auth\\Events\\Registered;\nuse Illuminate\\Auth\\Listeners\\SendEmailVerificationNotification;\nuse Illuminate\\Foundation\\Support\\Providers\\EventServiceProvider as ServiceProvider;\nuse Illuminate\\Support\\Facades\\Event;\n\nclass EventServiceProvider extends ServiceProvider\n{\n    \/**\n     * The event to listener mappings for the application.\n     *\n     * @var array<class-string, array<int, class-string>>\n     *\/\n    protected $listen = [\n        Registered::class => [\n            SendEmailVerificationNotification::class,\n        ],\n    ];\n\n    \/**\n     * Register any events for your application.\n     *\/\n    public function boot(): void\n    {\n        \/\/\n    }\n\n    \/**\n     * Determine if events and listeners should be automatically discovered.\n     *\/\n    public function shouldDiscoverEvents(): bool\n    {\n        return false;\n    }\n}\n",
                        "uuid": "76ec421c7f723193"
                    },
                    "RouteServiceProvider.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Providers;\n\nuse Illuminate\\Cache\\RateLimiting\\Limit;\nuse Illuminate\\Foundation\\Support\\Providers\\RouteServiceProvider as ServiceProvider;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\RateLimiter;\nuse Illuminate\\Support\\Facades\\Route;\n\nclass RouteServiceProvider extends ServiceProvider\n{\n    \/**\n     * The path to the \"home\" route for your application.\n     *\n     * This is used by Laravel authentication to redirect users after login.\n     *\n     * @var string\n     *\/\n    public const HOME = '\/home';\n\n    \/**\n     * The controller namespace for the application.\n     *\n     * When present, controller route declarations will automatically be prefixed with this namespace.\n     *\n     * @var string|null\n     *\/\n    protected $namespace = 'App\\\\Http\\\\Controllers';\n\n    \/**\n     * Define your route model bindings, pattern filters, etc.\n     *\/\n    public function boot(): void\n    {\n        $this->configureRateLimiting();\n\n        $this->routes(function () {\n            Route::prefix('api')\n                ->middleware('api')\n                ->namespace($this->namespace)\n                ->group(base_path('routes\/api.php'));\n\n            Route::middleware('web')\n                ->namespace($this->namespace)\n                ->group(base_path('routes\/web.php'));\n        });\n    }\n\n    \/**\n     * Configure the rate limiters for the application.\n     *\/\n    protected function configureRateLimiting(): void\n    {\n        RateLimiter::for('api', function (Request $request) {\n            return Limit::perMinute(60)->by(optional($request->user())->id ?: $request->ip());\n        });\n    }\n}\n",
                        "uuid": "1431ff42294af0bb"
                    }
                },
                "uuid": "6d4caa94f6e832b9"
            },
            "Traits": {
                "isDir": true,
                "content": {
                    "Auditable.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace App\\Traits;\n\nuse App\\Models\\AuditLog;\nuse Illuminate\\Database\\Eloquent\\Model;\n\ntrait Auditable\n{\n    public static function bootAuditable()\n    {\n        static::created(function (Model $model) {\n            self::audit('audit:created', $model);\n        });\n\n        static::updated(function (Model $model) {\n            self::audit('audit:updated', $model, $model->getChanges());\n        });\n\n        static::deleted(function (Model $model) {\n            self::audit('audit:deleted', $model);\n        });\n    }\n\n    protected static function audit($description, $model, $changes = [])\n    {\n        AuditLog::create([\n            'description'  => $description,\n            'subject_id'   => $model->id ?? null,\n            'subject_type' => sprintf('%s#%s', get_class($model), $model->id) ?? null,\n            'user_id'      => auth()->id() ?? null,\n            'properties'   => $changes ?: $model,\n            'host'         => request()->ip() ?? null,\n        ]);\n    }\n}\n",
                        "uuid": "134aa11c011b0d5b"
                    }
                },
                "uuid": "de64d3fa0fe3788d"
            }
        },
        "uuid": "8c5640a7d37ca8c0"
    },
    "config": {
        "isDir": true,
        "content": {
            "app.php": {
                "isDir": false,
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Facade;\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Application Name\n    |--------------------------------------------------------------------------\n    |\n    | This value is the name of your application. This value is used when the\n    | framework needs to place the application's name in a notification or\n    | any other location as required by the application or its packages.\n    |\n    *\/\n\n    'name' => env('APP_NAME', 'Laravel'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Application Environment\n    |--------------------------------------------------------------------------\n    |\n    | This value determines the \"environment\" your application is currently\n    | running in. This may determine how you prefer to configure various\n    | services the application utilizes. Set this in your \".env\" file.\n    |\n    *\/\n\n    'env' => env('APP_ENV', 'production'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Application Debug Mode\n    |--------------------------------------------------------------------------\n    |\n    | When your application is in debug mode, detailed error messages with\n    | stack traces will be shown on every error that occurs within your\n    | application. If disabled, a simple generic error page is shown.\n    |\n    *\/\n\n    'debug' => (bool) env('APP_DEBUG', false),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Application URL\n    |--------------------------------------------------------------------------\n    |\n    | This URL is used by the console to properly generate URLs when using\n    | the Artisan command line tool. You should set this to the root of\n    | your application so that it is used when running Artisan tasks.\n    |\n    *\/\n\n    'url' => env('APP_URL', 'http:\/\/localhost'),\n\n    'asset_url' => env('ASSET_URL', '\/'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Application Timezone\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the default timezone for your application, which\n    | will be used by the PHP date and date-time functions. We have gone\n    | ahead and set this to a sensible default for you out of the box.\n    |\n    *\/\n\n    'timezone' => 'UTC',\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Application Locale Configuration\n    |--------------------------------------------------------------------------\n    |\n    | The application locale determines the default locale that will be used\n    | by the translation service provider. You are free to set this value\n    | to any of the locales which will be supported by the application.\n    |\n    *\/\n\n    'locale' => 'en',\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Application Fallback Locale\n    |--------------------------------------------------------------------------\n    |\n    | The fallback locale determines the locale to use when the current one\n    | is not available. You may change the value to correspond to any of\n    | the language folders that are provided through your application.\n    |\n    *\/\n\n    'fallback_locale' => 'en',\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Faker Locale\n    |--------------------------------------------------------------------------\n    |\n    | This locale will be used by the Faker PHP library when generating fake\n    | data for your database seeds. For example, this will be used to get\n    | localized telephone numbers, street address information and more.\n    |\n    *\/\n\n    'faker_locale' => 'en_US',\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Encryption Key\n    |--------------------------------------------------------------------------\n    |\n    | This key is used by the Illuminate encrypter service and should be set\n    | to a random, 32 character string, otherwise these encrypted strings\n    | will not be safe. Please do this before deploying an application!\n    |\n    *\/\n\n    'key' => env('APP_KEY'),\n\n    'cipher' => 'AES-256-CBC',\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Maintenance Mode Driver\n    |--------------------------------------------------------------------------\n    |\n    | These configuration options determine the driver used to determine and\n    | manage Laravel's \"maintenance mode\" status. The \"cache\" driver will\n    | allow maintenance mode to be controlled across multiple machines.\n    |\n    | Supported drivers: \"file\", \"cache\"\n    |\n    *\/\n\n    'maintenance' => [\n        'driver' => 'file',\n        \/\/ 'store'  => 'redis',\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Autoloaded Service Providers\n    |--------------------------------------------------------------------------\n    |\n    | The service providers listed here will be automatically loaded on the\n    | request to your application. Feel free to add your own services to\n    | this array to grant expanded functionality to your applications.\n    |\n    *\/\n\n    'providers' => [\n\n        \/*\n         * Laravel Framework Service Providers...\n         *\/\n        Illuminate\\Auth\\AuthServiceProvider::class,\n        Illuminate\\Broadcasting\\BroadcastServiceProvider::class,\n        Illuminate\\Bus\\BusServiceProvider::class,\n        Illuminate\\Cache\\CacheServiceProvider::class,\n        Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider::class,\n        Illuminate\\Cookie\\CookieServiceProvider::class,\n        Illuminate\\Database\\DatabaseServiceProvider::class,\n        Illuminate\\Encryption\\EncryptionServiceProvider::class,\n        Illuminate\\Filesystem\\FilesystemServiceProvider::class,\n        Illuminate\\Foundation\\Providers\\FoundationServiceProvider::class,\n        Illuminate\\Hashing\\HashServiceProvider::class,\n        Illuminate\\Mail\\MailServiceProvider::class,\n        Illuminate\\Notifications\\NotificationServiceProvider::class,\n        Illuminate\\Pagination\\PaginationServiceProvider::class,\n        Illuminate\\Pipeline\\PipelineServiceProvider::class,\n        Illuminate\\Queue\\QueueServiceProvider::class,\n        Illuminate\\Redis\\RedisServiceProvider::class,\n        Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider::class,\n        Illuminate\\Session\\SessionServiceProvider::class,\n        Illuminate\\Translation\\TranslationServiceProvider::class,\n        Illuminate\\Validation\\ValidationServiceProvider::class,\n        Illuminate\\View\\ViewServiceProvider::class,\n\n        \/*\n         * Package Service Providers...\n         *\/\n\n        \/*\n         * Application Service Providers...\n         *\/\n        App\\Providers\\AppServiceProvider::class,\n        App\\Providers\\AuthServiceProvider::class,\n        \/\/ App\\Providers\\BroadcastServiceProvider::class,\n        App\\Providers\\EventServiceProvider::class,\n        App\\Providers\\RouteServiceProvider::class,\n\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Class Aliases\n    |--------------------------------------------------------------------------\n    |\n    | This array of class aliases will be registered when this application\n    | is started. However, feel free to register as many as you wish as\n    | the aliases are \"lazy\" loaded so they don't hinder performance.\n    |\n    *\/\n\n    'aliases' => Facade::defaultAliases()->merge([\n        \/\/ 'ExampleClass' => App\\Example\\ExampleClass::class,\n    ])->toArray(),\n\n];\n",
                "uuid": "3db4776a3c320ab2"
            },
            "auth.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Authentication Defaults\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default authentication \"guard\" and password\n    | reset options for your application. You may change these defaults\n    | as required, but they're a perfect start for most applications.\n    |\n    *\/\n\n    'defaults' => [\n        'guard'     => 'web',\n        'passwords' => 'users',\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Authentication Guards\n    |--------------------------------------------------------------------------\n    |\n    | Next, you may define every authentication guard for your application.\n    | Of course, a great default configuration has been defined for you\n    | here which uses session storage and the Eloquent user provider.\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | Supported: \"session\", \"token\"\n    |\n    *\/\n\n    'guards' => [\n        'web' => [\n            'driver'   => 'session',\n            'provider' => 'users',\n        ],\n\n        'api' => [\n            'driver'   => 'token',\n            'provider' => 'users',\n            'hash'     => false,\n        ],\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | User Providers\n    |--------------------------------------------------------------------------\n    |\n    | All authentication drivers have a user provider. This defines how the\n    | users are actually retrieved out of your database or other storage\n    | mechanisms used by this application to persist your user's data.\n    |\n    | If you have multiple user tables or models you may configure multiple\n    | sources which represent each model \/ table. These sources may then\n    | be assigned to any extra authentication guards you have defined.\n    |\n    | Supported: \"database\", \"eloquent\"\n    |\n    *\/\n\n    'providers' => [\n        'users' => [\n            'driver' => 'eloquent',\n            'model'  => App\\Models\\User::class,\n        ],\n\n        \/\/ 'users' => [\n        \/\/     'driver' => 'database',\n        \/\/     'table' => 'users',\n        \/\/ ],\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Resetting Passwords\n    |--------------------------------------------------------------------------\n    |\n    | You may specify multiple password reset configurations if you have more\n    | than one user table or model in the application and you want to have\n    | separate password reset settings based on the specific user types.\n    |\n    | The expire time is the number of minutes that the reset token should be\n    | considered valid. This security feature keeps tokens short-lived so\n    | they have less time to be guessed. You may change this as needed.\n    |\n    *\/\n\n    'passwords' => [\n        'users' => [\n            'provider' => 'users',\n            'table'    => 'password_resets',\n            'expire'   => 60,\n        ],\n    ],\n\n];\n",
                "uuid": "223113639716f9b3"
            },
            "broadcasting.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Default Broadcaster\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default broadcaster that will be used by the\n    | framework when an event needs to be broadcast. You may set this to\n    | any of the connections defined in the \"connections\" array below.\n    |\n    | Supported: \"pusher\", \"ably\", \"redis\", \"log\", \"null\"\n    |\n    *\/\n\n    'default' => env('BROADCAST_DRIVER', 'null'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Broadcast Connections\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define all of the broadcast connections that will be used\n    | to broadcast events to other systems or over websockets. Samples of\n    | each available type of connection are provided inside this array.\n    |\n    *\/\n\n    'connections' => [\n\n        'pusher' => [\n            'driver' => 'pusher',\n            'key' => env('PUSHER_APP_KEY'),\n            'secret' => env('PUSHER_APP_SECRET'),\n            'app_id' => env('PUSHER_APP_ID'),\n            'options' => [\n                'host' => env('PUSHER_HOST') ?: 'api-'.env('PUSHER_APP_CLUSTER', 'mt1').'.pusher.com',\n                'port' => env('PUSHER_PORT', 443),\n                'scheme' => env('PUSHER_SCHEME', 'https'),\n                'encrypted' => true,\n                'useTLS' => env('PUSHER_SCHEME', 'https') === 'https',\n            ],\n            'client_options' => [\n                \/\/ Guzzle client options: https:\/\/docs.guzzlephp.org\/en\/stable\/request-options.html\n            ],\n        ],\n\n        'ably' => [\n            'driver' => 'ably',\n            'key' => env('ABLY_KEY'),\n        ],\n\n        'redis' => [\n            'driver' => 'redis',\n            'connection' => 'default',\n        ],\n\n        'log' => [\n            'driver' => 'log',\n        ],\n\n        'null' => [\n            'driver' => 'null',\n        ],\n\n    ],\n\n];\n",
                "uuid": "319b9fb8091517fe"
            },
            "cache.php": {
                "isDir": false,
                "content": "<?php\n\nuse Illuminate\\Support\\Str;\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Default Cache Store\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default cache connection that gets used while\n    | using this caching library. This connection is used when another is\n    | not explicitly specified when executing a given caching function.\n    |\n    *\/\n\n    'default' => env('CACHE_DRIVER', 'file'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Cache Stores\n    |--------------------------------------------------------------------------\n    |\n    | Here you may define all of the cache \"stores\" for your application as\n    | well as their drivers. You may even define multiple stores for the\n    | same cache driver to group types of items stored in your caches.\n    |\n    | Supported drivers: \"apc\", \"array\", \"database\", \"file\",\n    |         \"memcached\", \"redis\", \"dynamodb\", \"octane\", \"null\"\n    |\n    *\/\n\n    'stores' => [\n\n        'apc' => [\n            'driver' => 'apc',\n        ],\n\n        'array' => [\n            'driver' => 'array',\n            'serialize' => false,\n        ],\n\n        'database' => [\n            'driver' => 'database',\n            'table' => 'cache',\n            'connection' => null,\n            'lock_connection' => null,\n        ],\n\n        'file' => [\n            'driver' => 'file',\n            'path' => storage_path('framework\/cache\/data'),\n        ],\n\n        'memcached' => [\n            'driver' => 'memcached',\n            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),\n            'sasl' => [\n                env('MEMCACHED_USERNAME'),\n                env('MEMCACHED_PASSWORD'),\n            ],\n            'options' => [\n                \/\/ Memcached::OPT_CONNECT_TIMEOUT => 2000,\n            ],\n            'servers' => [\n                [\n                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),\n                    'port' => env('MEMCACHED_PORT', 11211),\n                    'weight' => 100,\n                ],\n            ],\n        ],\n\n        'redis' => [\n            'driver' => 'redis',\n            'connection' => 'cache',\n            'lock_connection' => 'default',\n        ],\n\n        'dynamodb' => [\n            'driver' => 'dynamodb',\n            'key' => env('AWS_ACCESS_KEY_ID'),\n            'secret' => env('AWS_SECRET_ACCESS_KEY'),\n            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),\n            'endpoint' => env('DYNAMODB_ENDPOINT'),\n        ],\n\n        'octane' => [\n            'driver' => 'octane',\n        ],\n\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Cache Key Prefix\n    |--------------------------------------------------------------------------\n    |\n    | When utilizing the APC, database, memcached, Redis, or DynamoDB cache\n    | stores there might be other applications using the same cache. For\n    | that reason, you may prefix every cache key to avoid collisions.\n    |\n    *\/\n\n    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),\n\n];\n",
                "uuid": "994d34bb35aa549f"
            },
            "cors.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Cross-Origin Resource Sharing (CORS) Configuration\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure your settings for cross-origin resource sharing\n    | or \"CORS\". This determines what cross-origin operations may execute\n    | in web browsers. You are free to adjust these settings as needed.\n    |\n    | To learn more: https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTTP\/CORS\n    |\n    *\/\n\n    'paths' => ['api\/*', 'sanctum\/csrf-cookie'],\n\n    'allowed_methods' => ['*'],\n\n    'allowed_origins' => ['*'],\n\n    'allowed_origins_patterns' => [],\n\n    'allowed_headers' => ['*'],\n\n    'exposed_headers' => [],\n\n    'max_age' => 0,\n\n    'supports_credentials' => false,\n\n];\n",
                "uuid": "ed6fff07bece16d1"
            },
            "database.php": {
                "isDir": false,
                "content": "<?php\n\nuse Illuminate\\Support\\Str;\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Default Database Connection Name\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify which of the database connections below you wish\n    | to use as your default connection for all database work. Of course\n    | you may use many connections at once using the Database library.\n    |\n    *\/\n\n    'default' => env('DB_CONNECTION', 'mysql'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Database Connections\n    |--------------------------------------------------------------------------\n    |\n    | Here are each of the database connections setup for your application.\n    | Of course, examples of configuring each database platform that is\n    | supported by Laravel is shown below to make development simple.\n    |\n    |\n    | All database work in Laravel is done through the PHP PDO facilities\n    | so make sure you have the driver for your particular database of\n    | choice installed on your machine before you begin development.\n    |\n    *\/\n\n    'connections' => [\n\n        'sqlite' => [\n            'driver' => 'sqlite',\n            'url' => env('DATABASE_URL'),\n            'database' => env('DB_DATABASE', database_path('database.sqlite')),\n            'prefix' => '',\n            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),\n        ],\n\n        'mysql' => [\n            'driver' => 'mysql',\n            'url' => env('DATABASE_URL'),\n            'host' => env('DB_HOST', '127.0.0.1'),\n            'port' => env('DB_PORT', '3306'),\n            'database' => env('DB_DATABASE', 'forge'),\n            'username' => env('DB_USERNAME', 'forge'),\n            'password' => env('DB_PASSWORD', ''),\n            'unix_socket' => env('DB_SOCKET', ''),\n            'charset' => 'utf8mb4',\n            'collation' => 'utf8mb4_unicode_ci',\n            'prefix' => '',\n            'prefix_indexes' => true,\n            'strict' => true,\n            'engine' => null,\n            'options' => extension_loaded('pdo_mysql') ? array_filter([\n                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),\n            ]) : [],\n        ],\n\n        'pgsql' => [\n            'driver' => 'pgsql',\n            'url' => env('DATABASE_URL'),\n            'host' => env('DB_HOST', '127.0.0.1'),\n            'port' => env('DB_PORT', '5432'),\n            'database' => env('DB_DATABASE', 'forge'),\n            'username' => env('DB_USERNAME', 'forge'),\n            'password' => env('DB_PASSWORD', ''),\n            'charset' => 'utf8',\n            'prefix' => '',\n            'prefix_indexes' => true,\n            'search_path' => 'public',\n            'sslmode' => 'prefer',\n        ],\n\n        'sqlsrv' => [\n            'driver' => 'sqlsrv',\n            'url' => env('DATABASE_URL'),\n            'host' => env('DB_HOST', 'localhost'),\n            'port' => env('DB_PORT', '1433'),\n            'database' => env('DB_DATABASE', 'forge'),\n            'username' => env('DB_USERNAME', 'forge'),\n            'password' => env('DB_PASSWORD', ''),\n            'charset' => 'utf8',\n            'prefix' => '',\n            'prefix_indexes' => true,\n            \/\/ 'encrypt' => env('DB_ENCRYPT', 'yes'),\n            \/\/ 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),\n        ],\n\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Migration Repository Table\n    |--------------------------------------------------------------------------\n    |\n    | This table keeps track of all the migrations that have already run for\n    | your application. Using this information, we can determine which of\n    | the migrations on disk haven't actually been run in the database.\n    |\n    *\/\n\n    'migrations' => 'migrations',\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Redis Databases\n    |--------------------------------------------------------------------------\n    |\n    | Redis is an open source, fast, and advanced key-value store that also\n    | provides a richer body of commands than a typical key-value system\n    | such as APC or Memcached. Laravel makes it easy to dig right in.\n    |\n    *\/\n\n    'redis' => [\n\n        'client' => env('REDIS_CLIENT', 'phpredis'),\n\n        'options' => [\n            'cluster' => env('REDIS_CLUSTER', 'redis'),\n            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),\n        ],\n\n        'default' => [\n            'url' => env('REDIS_URL'),\n            'host' => env('REDIS_HOST', '127.0.0.1'),\n            'username' => env('REDIS_USERNAME'),\n            'password' => env('REDIS_PASSWORD'),\n            'port' => env('REDIS_PORT', '6379'),\n            'database' => env('REDIS_DB', '0'),\n        ],\n\n        'cache' => [\n            'url' => env('REDIS_URL'),\n            'host' => env('REDIS_HOST', '127.0.0.1'),\n            'username' => env('REDIS_USERNAME'),\n            'password' => env('REDIS_PASSWORD'),\n            'port' => env('REDIS_PORT', '6379'),\n            'database' => env('REDIS_CACHE_DB', '1'),\n        ],\n\n    ],\n\n];\n",
                "uuid": "b880bebfae5d5e19"
            },
            "filesystems.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Default Filesystem Disk\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the default filesystem disk that should be used\n    | by the framework. The \"local\" disk, as well as a variety of cloud\n    | based disks are available to your application. Just store away!\n    |\n    *\/\n\n    'default' => env('FILESYSTEM_DISK', 'local'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Filesystem Disks\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure as many filesystem \"disks\" as you wish, and you\n    | may even configure multiple disks of the same driver. Defaults have\n    | been set up for each driver as an example of the required values.\n    |\n    | Supported Drivers: \"local\", \"ftp\", \"sftp\", \"s3\"\n    |\n    *\/\n\n    'disks' => [\n\n        'local' => [\n            'driver' => 'local',\n            'root' => storage_path('app'),\n            'throw' => false,\n        ],\n\n        'public' => [\n            'driver' => 'local',\n            'root' => storage_path('app\/public'),\n            'url' => env('APP_URL').'\/storage',\n            'visibility' => 'public',\n            'throw' => false,\n        ],\n\n        's3' => [\n            'driver' => 's3',\n            'key' => env('AWS_ACCESS_KEY_ID'),\n            'secret' => env('AWS_SECRET_ACCESS_KEY'),\n            'region' => env('AWS_DEFAULT_REGION'),\n            'bucket' => env('AWS_BUCKET'),\n            'url' => env('AWS_URL'),\n            'endpoint' => env('AWS_ENDPOINT'),\n            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),\n            'throw' => false,\n        ],\n\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Symbolic Links\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure the symbolic links that will be created when the\n    | `storage:link` Artisan command is executed. The array keys should be\n    | the locations of the links and the values should be their targets.\n    |\n    *\/\n\n    'links' => [\n        public_path('storage') => storage_path('app\/public'),\n    ],\n\n];\n",
                "uuid": "b4912935e54ad09c"
            },
            "hashing.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Default Hash Driver\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default hash driver that will be used to hash\n    | passwords for your application. By default, the bcrypt algorithm is\n    | used; however, you remain free to modify this option if you wish.\n    |\n    | Supported: \"bcrypt\", \"argon\", \"argon2id\"\n    |\n    *\/\n\n    'driver' => 'bcrypt',\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Bcrypt Options\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the configuration options that should be used when\n    | passwords are hashed using the Bcrypt algorithm. This will allow you\n    | to control the amount of time it takes to hash the given password.\n    |\n    *\/\n\n    'bcrypt' => [\n        'rounds' => env('BCRYPT_ROUNDS', 10),\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Argon Options\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the configuration options that should be used when\n    | passwords are hashed using the Argon algorithm. These will allow you\n    | to control the amount of time it takes to hash the given password.\n    |\n    *\/\n\n    'argon' => [\n        'memory' => 65536,\n        'threads' => 1,\n        'time' => 4,\n    ],\n\n];\n",
                "uuid": "a30bb69a0d4f6410"
            },
            "logging.php": {
                "isDir": false,
                "content": "<?php\n\nuse Monolog\\Handler\\NullHandler;\nuse Monolog\\Handler\\StreamHandler;\nuse Monolog\\Handler\\SyslogUdpHandler;\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Default Log Channel\n    |--------------------------------------------------------------------------\n    |\n    | This option defines the default log channel that gets used when writing\n    | messages to the logs. The name specified in this option should match\n    | one of the channels defined in the \"channels\" configuration array.\n    |\n    *\/\n\n    'default' => env('LOG_CHANNEL', 'stack'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Deprecations Log Channel\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the log channel that should be used to log warnings\n    | regarding deprecated PHP and library features. This allows you to get\n    | your application ready for upcoming major versions of dependencies.\n    |\n    *\/\n\n    'deprecations' => [\n        'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),\n        'trace' => false,\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Log Channels\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure the log channels for your application. Out of\n    | the box, Laravel uses the Monolog PHP logging library. This gives\n    | you a variety of powerful log handlers \/ formatters to utilize.\n    |\n    | Available Drivers: \"single\", \"daily\", \"slack\", \"syslog\",\n    |                    \"errorlog\", \"monolog\",\n    |                    \"custom\", \"stack\"\n    |\n    *\/\n\n    'channels' => [\n        'stack' => [\n            'driver' => 'stack',\n            'channels' => ['single'],\n            'ignore_exceptions' => false,\n        ],\n\n        'single' => [\n            'driver' => 'single',\n            'path' => storage_path('logs\/laravel.log'),\n            'level' => env('LOG_LEVEL', 'debug'),\n        ],\n\n        'daily' => [\n            'driver' => 'daily',\n            'path' => storage_path('logs\/laravel.log'),\n            'level' => env('LOG_LEVEL', 'debug'),\n            'days' => 14,\n        ],\n\n        'slack' => [\n            'driver' => 'slack',\n            'url' => env('LOG_SLACK_WEBHOOK_URL'),\n            'username' => 'Laravel Log',\n            'emoji' => ':boom:',\n            'level' => env('LOG_LEVEL', 'critical'),\n        ],\n\n        'papertrail' => [\n            'driver' => 'monolog',\n            'level' => env('LOG_LEVEL', 'debug'),\n            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),\n            'handler_with' => [\n                'host' => env('PAPERTRAIL_URL'),\n                'port' => env('PAPERTRAIL_PORT'),\n                'connectionString' => 'tls:\/\/'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),\n            ],\n        ],\n\n        'stderr' => [\n            'driver' => 'monolog',\n            'level' => env('LOG_LEVEL', 'debug'),\n            'handler' => StreamHandler::class,\n            'formatter' => env('LOG_STDERR_FORMATTER'),\n            'with' => [\n                'stream' => 'php:\/\/stderr',\n            ],\n        ],\n\n        'syslog' => [\n            'driver' => 'syslog',\n            'level' => env('LOG_LEVEL', 'debug'),\n        ],\n\n        'errorlog' => [\n            'driver' => 'errorlog',\n            'level' => env('LOG_LEVEL', 'debug'),\n        ],\n\n        'null' => [\n            'driver' => 'monolog',\n            'handler' => NullHandler::class,\n        ],\n\n        'emergency' => [\n            'path' => storage_path('logs\/laravel.log'),\n        ],\n    ],\n\n];\n",
                "uuid": "e7ff908f2b1058ee"
            },
            "mail.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Default Mailer\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default mailer that is used to send any email\n    | messages sent by your application. Alternative mailers may be setup\n    | and used as needed; however, this mailer will be used by default.\n    |\n    *\/\n\n    'default' => env('MAIL_MAILER', 'smtp'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Mailer Configurations\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure all of the mailers used by your application plus\n    | their respective settings. Several examples have been configured for\n    | you and you are free to add your own as your application requires.\n    |\n    | Laravel supports a variety of mail \"transport\" drivers to be used while\n    | sending an e-mail. You will specify which one you are using for your\n    | mailers below. You are free to add additional mailers as required.\n    |\n    | Supported: \"smtp\", \"sendmail\", \"mailgun\", \"ses\",\n    |            \"postmark\", \"log\", \"array\", \"failover\"\n    |\n    *\/\n\n    'mailers' => [\n        'smtp' => [\n            'transport' => 'smtp',\n            'host' => env('MAIL_HOST', 'smtp.mailgun.org'),\n            'port' => env('MAIL_PORT', 587),\n            'encryption' => env('MAIL_ENCRYPTION', 'tls'),\n            'username' => env('MAIL_USERNAME'),\n            'password' => env('MAIL_PASSWORD'),\n            'timeout' => null,\n            'local_domain' => env('MAIL_EHLO_DOMAIN'),\n        ],\n\n        'ses' => [\n            'transport' => 'ses',\n        ],\n\n        'mailgun' => [\n            'transport' => 'mailgun',\n            \/\/ 'client' => [\n            \/\/     'timeout' => 5,\n            \/\/ ],\n        ],\n\n        'postmark' => [\n            'transport' => 'postmark',\n            \/\/ 'client' => [\n            \/\/     'timeout' => 5,\n            \/\/ ],\n        ],\n\n        'sendmail' => [\n            'transport' => 'sendmail',\n            'path' => env('MAIL_SENDMAIL_PATH', '\/usr\/sbin\/sendmail -bs -i'),\n        ],\n\n        'log' => [\n            'transport' => 'log',\n            'channel' => env('MAIL_LOG_CHANNEL'),\n        ],\n\n        'array' => [\n            'transport' => 'array',\n        ],\n\n        'failover' => [\n            'transport' => 'failover',\n            'mailers' => [\n                'smtp',\n                'log',\n            ],\n        ],\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Global \"From\" Address\n    |--------------------------------------------------------------------------\n    |\n    | You may wish for all e-mails sent by your application to be sent from\n    | the same address. Here, you may specify a name and address that is\n    | used globally for all e-mails that are sent by your application.\n    |\n    *\/\n\n    'from' => [\n        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),\n        'name' => env('MAIL_FROM_NAME', 'Example'),\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Markdown Mail Settings\n    |--------------------------------------------------------------------------\n    |\n    | If you are using Markdown based email rendering, you may configure your\n    | theme and component paths here, allowing you to customize the design\n    | of the emails. Or, you may simply stick with the Laravel defaults!\n    |\n    *\/\n\n    'markdown' => [\n        'theme' => 'default',\n\n        'paths' => [\n            resource_path('views\/vendor\/mail'),\n        ],\n    ],\n\n];\n",
                "uuid": "9bb6f1adbf04de67"
            },
            "panel.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n    'date_format'         => 'Y-m-d',\n    'time_format'         => 'H:i:s',\n    'primary_language'    => 'en',\n    'available_languages' => [\n        'en' => 'English',\n    ],\n\n];\n",
                "uuid": "908e7a0c6bf03078"
            },
            "queue.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Default Queue Connection Name\n    |--------------------------------------------------------------------------\n    |\n    | Laravel's queue API supports an assortment of back-ends via a single\n    | API, giving you convenient access to each back-end using the same\n    | syntax for every one. Here you may define a default connection.\n    |\n    *\/\n\n    'default' => env('QUEUE_CONNECTION', 'sync'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Queue Connections\n    |--------------------------------------------------------------------------\n    |\n    | Here you may configure the connection information for each server that\n    | is used by your application. A default configuration has been added\n    | for each back-end shipped with Laravel. You are free to add more.\n    |\n    | Drivers: \"sync\", \"database\", \"beanstalkd\", \"sqs\", \"redis\", \"null\"\n    |\n    *\/\n\n    'connections' => [\n\n        'sync' => [\n            'driver' => 'sync',\n        ],\n\n        'database' => [\n            'driver' => 'database',\n            'table' => 'jobs',\n            'queue' => 'default',\n            'retry_after' => 90,\n            'after_commit' => false,\n        ],\n\n        'beanstalkd' => [\n            'driver' => 'beanstalkd',\n            'host' => 'localhost',\n            'queue' => 'default',\n            'retry_after' => 90,\n            'block_for' => 0,\n            'after_commit' => false,\n        ],\n\n        'sqs' => [\n            'driver' => 'sqs',\n            'key' => env('AWS_ACCESS_KEY_ID'),\n            'secret' => env('AWS_SECRET_ACCESS_KEY'),\n            'prefix' => env('SQS_PREFIX', 'https:\/\/sqs.us-east-1.amazonaws.com\/your-account-id'),\n            'queue' => env('SQS_QUEUE', 'default'),\n            'suffix' => env('SQS_SUFFIX'),\n            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n            'after_commit' => false,\n        ],\n\n        'redis' => [\n            'driver' => 'redis',\n            'connection' => 'default',\n            'queue' => env('REDIS_QUEUE', 'default'),\n            'retry_after' => 90,\n            'block_for' => null,\n            'after_commit' => false,\n        ],\n\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Failed Queue Jobs\n    |--------------------------------------------------------------------------\n    |\n    | These options configure the behavior of failed queue job logging so you\n    | can control which database and table are used to store the jobs that\n    | have failed. You may change them to any database \/ table you wish.\n    |\n    *\/\n\n    'failed' => [\n        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),\n        'database' => env('DB_CONNECTION', 'mysql'),\n        'table' => 'failed_jobs',\n    ],\n\n];\n",
                "uuid": "b28c6391d014fa17"
            },
            "sanctum.php": {
                "isDir": false,
                "content": "<?php\n\nuse Laravel\\Sanctum\\Sanctum;\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Stateful Domains\n    |--------------------------------------------------------------------------\n    |\n    | Requests from the following domains \/ hosts will receive stateful API\n    | authentication cookies. Typically, these should include your local\n    | and production domains which access your API via a frontend SPA.\n    |\n    *\/\n\n    'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf(\n        '%s%s',\n        'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',\n        Sanctum::currentApplicationUrlWithPort()\n    ))),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Sanctum Guards\n    |--------------------------------------------------------------------------\n    |\n    | This array contains the authentication guards that will be checked when\n    | Sanctum is trying to authenticate a request. If none of these guards\n    | are able to authenticate the request, Sanctum will use the bearer\n    | token that's present on an incoming request for authentication.\n    |\n    *\/\n\n    'guard' => ['web'],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Expiration Minutes\n    |--------------------------------------------------------------------------\n    |\n    | This value controls the number of minutes until an issued token will be\n    | considered expired. If this value is null, personal access tokens do\n    | not expire. This won't tweak the lifetime of first-party sessions.\n    |\n    *\/\n\n    'expiration' => null,\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Sanctum Middleware\n    |--------------------------------------------------------------------------\n    |\n    | When authenticating your first-party SPA with Sanctum you may need to\n    | customize some of the middleware Sanctum uses while processing the\n    | request. You may change the middleware listed below as required.\n    |\n    *\/\n\n    'middleware' => [\n        'verify_csrf_token' => App\\Http\\Middleware\\VerifyCsrfToken::class,\n        'encrypt_cookies' => App\\Http\\Middleware\\EncryptCookies::class,\n    ],\n\n];\n",
                "uuid": "fee26f056e9b0911"
            },
            "services.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Third Party Services\n    |--------------------------------------------------------------------------\n    |\n    | This file is for storing the credentials for third party services such\n    | as Mailgun, Postmark, AWS and more. This file provides the de facto\n    | location for this type of information, allowing packages to have\n    | a conventional file to locate the various service credentials.\n    |\n    *\/\n\n    'mailgun' => [\n        'domain' => env('MAILGUN_DOMAIN'),\n        'secret' => env('MAILGUN_SECRET'),\n        'endpoint' => env('MAILGUN_ENDPOINT', 'api.mailgun.net'),\n        'scheme' => 'https',\n    ],\n\n    'postmark' => [\n        'token' => env('POSTMARK_TOKEN'),\n    ],\n\n    'ses' => [\n        'key' => env('AWS_ACCESS_KEY_ID'),\n        'secret' => env('AWS_SECRET_ACCESS_KEY'),\n        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),\n    ],\n\n];\n",
                "uuid": "483d7d227b1a9b72"
            },
            "session.php": {
                "isDir": false,
                "content": "<?php\n\nuse Illuminate\\Support\\Str;\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Default Session Driver\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default session \"driver\" that will be used on\n    | requests. By default, we will use the lightweight native driver but\n    | you may specify any of the other wonderful drivers provided here.\n    |\n    | Supported: \"file\", \"cookie\", \"database\", \"apc\",\n    |            \"memcached\", \"redis\", \"dynamodb\", \"array\"\n    |\n    *\/\n\n    'driver' => env('SESSION_DRIVER', 'file'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session Lifetime\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the number of minutes that you wish the session\n    | to be allowed to remain idle before it expires. If you want them\n    | to immediately expire on the browser closing, set that option.\n    |\n    *\/\n\n    'lifetime' => env('SESSION_LIFETIME', 120),\n\n    'expire_on_close' => false,\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session Encryption\n    |--------------------------------------------------------------------------\n    |\n    | This option allows you to easily specify that all of your session data\n    | should be encrypted before it is stored. All encryption will be run\n    | automatically by Laravel and you can use the Session like normal.\n    |\n    *\/\n\n    'encrypt' => false,\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session File Location\n    |--------------------------------------------------------------------------\n    |\n    | When using the native session driver, we need a location where session\n    | files may be stored. A default has been set for you but a different\n    | location may be specified. This is only needed for file sessions.\n    |\n    *\/\n\n    'files' => storage_path('framework\/sessions'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session Database Connection\n    |--------------------------------------------------------------------------\n    |\n    | When using the \"database\" or \"redis\" session drivers, you may specify a\n    | connection that should be used to manage these sessions. This should\n    | correspond to a connection in your database configuration options.\n    |\n    *\/\n\n    'connection' => env('SESSION_CONNECTION'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session Database Table\n    |--------------------------------------------------------------------------\n    |\n    | When using the \"database\" session driver, you may specify the table we\n    | should use to manage the sessions. Of course, a sensible default is\n    | provided for you; however, you are free to change this as needed.\n    |\n    *\/\n\n    'table' => 'sessions',\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session Cache Store\n    |--------------------------------------------------------------------------\n    |\n    | While using one of the framework's cache driven session backends you may\n    | list a cache store that should be used for these sessions. This value\n    | must match with one of the application's configured cache \"stores\".\n    |\n    | Affects: \"apc\", \"dynamodb\", \"memcached\", \"redis\"\n    |\n    *\/\n\n    'store' => env('SESSION_STORE'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session Sweeping Lottery\n    |--------------------------------------------------------------------------\n    |\n    | Some session drivers must manually sweep their storage location to get\n    | rid of old sessions from storage. Here are the chances that it will\n    | happen on a given request. By default, the odds are 2 out of 100.\n    |\n    *\/\n\n    'lottery' => [2, 100],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session Cookie Name\n    |--------------------------------------------------------------------------\n    |\n    | Here you may change the name of the cookie used to identify a session\n    | instance by ID. The name specified here will get used every time a\n    | new session cookie is created by the framework for every driver.\n    |\n    *\/\n\n    'cookie' => env(\n        'SESSION_COOKIE',\n        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'\n    ),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session Cookie Path\n    |--------------------------------------------------------------------------\n    |\n    | The session cookie path determines the path for which the cookie will\n    | be regarded as available. Typically, this will be the root path of\n    | your application but you are free to change this when necessary.\n    |\n    *\/\n\n    'path' => '\/',\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Session Cookie Domain\n    |--------------------------------------------------------------------------\n    |\n    | Here you may change the domain of the cookie used to identify a session\n    | in your application. This will determine which domains the cookie is\n    | available to in your application. A sensible default has been set.\n    |\n    *\/\n\n    'domain' => env('SESSION_DOMAIN'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | HTTPS Only Cookies\n    |--------------------------------------------------------------------------\n    |\n    | By setting this option to true, session cookies will only be sent back\n    | to the server if the browser has a HTTPS connection. This will keep\n    | the cookie from being sent to you when it can't be done securely.\n    |\n    *\/\n\n    'secure' => env('SESSION_SECURE_COOKIE'),\n\n    \/*\n    |--------------------------------------------------------------------------\n    | HTTP Access Only\n    |--------------------------------------------------------------------------\n    |\n    | Setting this value to true will prevent JavaScript from accessing the\n    | value of the cookie and the cookie will only be accessible through\n    | the HTTP protocol. You are free to modify this option if needed.\n    |\n    *\/\n\n    'http_only' => true,\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Same-Site Cookies\n    |--------------------------------------------------------------------------\n    |\n    | This option determines how your cookies behave when cross-site requests\n    | take place, and can be used to mitigate CSRF attacks. By default, we\n    | will set this value to \"lax\" since this is a secure default value.\n    |\n    | Supported: \"lax\", \"strict\", \"none\", null\n    |\n    *\/\n\n    'same_site' => 'lax',\n\n];\n",
                "uuid": "ca846acf08c69c63"
            },
            "view.php": {
                "isDir": false,
                "content": "<?php\n\nreturn [\n\n    \/*\n    |--------------------------------------------------------------------------\n    | View Storage Paths\n    |--------------------------------------------------------------------------\n    |\n    | Most templating systems load templates from disk. Here you may specify\n    | an array of paths that should be checked for your views. Of course\n    | the usual Laravel view path has already been registered for you.\n    |\n    *\/\n\n    'paths' => [\n        resource_path('views'),\n    ],\n\n    \/*\n    |--------------------------------------------------------------------------\n    | Compiled View Path\n    |--------------------------------------------------------------------------\n    |\n    | This option determines where all the compiled Blade templates will be\n    | stored for your application. Typically, this is within the storage\n    | directory. However, as usual, you are free to change this value.\n    |\n    *\/\n\n    'compiled' => env(\n        'VIEW_COMPILED_PATH',\n        realpath(storage_path('framework\/views'))\n    ),\n\n];\n",
                "uuid": "23ba63986fca8ce9"
            }
        },
        "uuid": "635ac06975468de0"
    },
    "database": {
        "isDir": true,
        "content": {
            "factories": {
                "isDir": true,
                "content": {
                    "UserFactory.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\nuse Illuminate\\Support\\Str;\n\n\/**\n * @extends \\Illuminate\\Database\\Eloquent\\Factories\\Factory<\\App\\Models\\User>\n *\/\nclass UserFactory extends Factory\n{\n    \/**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     *\/\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'email' => fake()->unique()->safeEmail(),\n            'email_verified_at' => now(),\n            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC\/.og\/at2.uheWG\/igi', \/\/ password\n            'remember_token' => Str::random(10),\n        ];\n    }\n\n    \/**\n     * Indicate that the model's email address should be unverified.\n     *\n     * @return $this\n     *\/\n    public function unverified(): static\n    {\n        return $this->state(fn (array $attributes) => [\n            'email_verified_at' => null,\n        ]);\n    }\n}\n",
                        "uuid": "bfcb23822bee6286"
                    }
                },
                "uuid": "f805d1956ef80bb8"
            },
            "migrations": {
                "isDir": true,
                "content": {
                    "2014_10_12_100000_create_password_resets_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePasswordResetsTable extends Migration\n{\n    \/**\n     * Run the migrations.\n     *\n     * @return void\n     *\/\n    public function up()\n    {\n        Schema::create('password_resets', function (Blueprint $table) {\n            $table->string('email')->index();\n            $table->string('token');\n            $table->timestamp('created_at')->nullable();\n        });\n    }\n\n    \/**\n     * Reverse the migrations.\n     *\n     * @return void\n     *\/\n    public function down()\n    {\n        Schema::dropIfExists('password_resets');\n    }\n}\n",
                        "uuid": "a730dc40994af354"
                    },
                    "2024_07_07_000001_create_audit_logs_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateAuditLogsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('audit_logs', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->text('description');\n            $table->unsignedBigInteger('subject_id')->nullable();\n            $table->string('subject_type')->nullable();\n            $table->unsignedBigInteger('user_id')->nullable();\n            $table->text('properties')->nullable();\n            $table->string('host', 46)->nullable();\n            $table->timestamps();\n        });\n    }\n}\n",
                        "uuid": "9e17e115cdd119c1"
                    },
                    "2024_07_07_000002_create_media_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateMediaTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('media', function (Blueprint $table) {\n            $table->bigIncrements('id');\n\n            $table->morphs('model');\n            $table->uuid('uuid')->nullable()->unique();\n            $table->string('collection_name');\n            $table->string('name');\n            $table->string('file_name');\n            $table->string('mime_type')->nullable();\n            $table->string('disk');\n            $table->string('conversions_disk')->nullable();\n            $table->unsignedBigInteger('size');\n            $table->json('manipulations');\n            $table->json('custom_properties');\n            $table->json('generated_conversions');\n            $table->json('responsive_images');\n            $table->unsignedInteger('order_column')->nullable()->index();\n\n            $table->nullableTimestamps();\n        });\n    }\n}\n",
                        "uuid": "5f3aaa5e472a5f82"
                    },
                    "2024_07_07_000003_create_permissions_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePermissionsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('permissions', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "4a65530bff9e9abc"
                    },
                    "2024_07_07_000004_create_roles_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateRolesTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('roles', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "a76d827e1fe195b1"
                    },
                    "2024_07_07_000005_create_users_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateUsersTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('users', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name')->nullable();\n            $table->string('email')->nullable()->unique();\n            $table->datetime('email_verified_at')->nullable();\n            $table->string('password')->nullable();\n            $table->string('remember_token')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "44273c3b22b6516b"
                    },
                    "2024_07_07_000006_create_asset_categories_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateAssetCategoriesTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('asset_categories', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "3fbfd9bd3776e43b"
                    },
                    "2024_07_07_000007_create_asset_locations_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateAssetLocationsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('asset_locations', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "a66b2df6912cfc06"
                    },
                    "2024_07_07_000008_create_asset_statuses_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateAssetStatusesTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('asset_statuses', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "a9e40993dbb75979"
                    },
                    "2024_07_07_000009_create_assets_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateAssetsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('assets', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('serial_number')->nullable();\n            $table->string('name')->nullable();\n            $table->longText('notes')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "5ea46d271427c782"
                    },
                    "2024_07_07_000010_create_assets_histories_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateAssetsHistoriesTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('assets_histories', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->timestamps();\n        });\n    }\n}\n",
                        "uuid": "7fe4686091403516"
                    },
                    "2024_07_07_000011_create_content_categories_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateContentCategoriesTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('content_categories', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name')->nullable();\n            $table->string('slug')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "62ade60b33d613bd"
                    },
                    "2024_07_07_000012_create_content_tags_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateContentTagsTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('content_tags', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('name')->nullable();\n            $table->string('slug')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "78faab8e005463ba"
                    },
                    "2024_07_07_000013_create_content_pages_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateContentPagesTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('content_pages', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('title')->nullable();\n            $table->longText('page_text')->nullable();\n            $table->longText('excerpt')->nullable();\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "d5ec179f8d2f3de4"
                    },
                    "2024_07_07_000014_create_provinsis_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateProvinsisTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('provinsis', function (Blueprint $table) {\n            $table->bigIncrements('id');\n            $table->string('kode');\n            $table->string('nama');\n            $table->timestamps();\n            $table->softDeletes();\n        });\n    }\n}\n",
                        "uuid": "b7b0d90ff9688244"
                    },
                    "2024_07_07_000015_create_permission_role_pivot_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreatePermissionRolePivotTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('permission_role', function (Blueprint $table) {\n            $table->unsignedBigInteger('role_id');\n            $table->foreign('role_id', 'role_id_fk_9928005')->references('id')->on('roles')->onDelete('cascade');\n            $table->unsignedBigInteger('permission_id');\n            $table->foreign('permission_id', 'permission_id_fk_9928005')->references('id')->on('permissions')->onDelete('cascade');\n        });\n    }\n}\n",
                        "uuid": "a92deaf2744f652b"
                    },
                    "2024_07_07_000016_create_role_user_pivot_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateRoleUserPivotTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('role_user', function (Blueprint $table) {\n            $table->unsignedBigInteger('user_id');\n            $table->foreign('user_id', 'user_id_fk_9928014')->references('id')->on('users')->onDelete('cascade');\n            $table->unsignedBigInteger('role_id');\n            $table->foreign('role_id', 'role_id_fk_9928014')->references('id')->on('roles')->onDelete('cascade');\n        });\n    }\n}\n",
                        "uuid": "996b9f55df3a4188"
                    },
                    "2024_07_07_000017_create_content_category_content_page_pivot_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateContentCategoryContentPagePivotTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('content_category_content_page', function (Blueprint $table) {\n            $table->unsignedBigInteger('content_page_id');\n            $table->foreign('content_page_id', 'content_page_id_fk_9928076')->references('id')->on('content_pages')->onDelete('cascade');\n            $table->unsignedBigInteger('content_category_id');\n            $table->foreign('content_category_id', 'content_category_id_fk_9928076')->references('id')->on('content_categories')->onDelete('cascade');\n        });\n    }\n}\n",
                        "uuid": "fd7aaee09747d4c0"
                    },
                    "2024_07_07_000018_create_content_page_content_tag_pivot_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass CreateContentPageContentTagPivotTable extends Migration\n{\n    public function up()\n    {\n        Schema::create('content_page_content_tag', function (Blueprint $table) {\n            $table->unsignedBigInteger('content_page_id');\n            $table->foreign('content_page_id', 'content_page_id_fk_9928077')->references('id')->on('content_pages')->onDelete('cascade');\n            $table->unsignedBigInteger('content_tag_id');\n            $table->foreign('content_tag_id', 'content_tag_id_fk_9928077')->references('id')->on('content_tags')->onDelete('cascade');\n        });\n    }\n}\n",
                        "uuid": "4a2c0db14094a719"
                    },
                    "2024_07_07_000019_add_relationship_fields_to_assets_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass AddRelationshipFieldsToAssetsTable extends Migration\n{\n    public function up()\n    {\n        Schema::table('assets', function (Blueprint $table) {\n            $table->unsignedBigInteger('category_id')->nullable();\n            $table->foreign('category_id', 'category_fk_9928035')->references('id')->on('asset_categories');\n            $table->unsignedBigInteger('status_id')->nullable();\n            $table->foreign('status_id', 'status_fk_9928039')->references('id')->on('asset_statuses');\n            $table->unsignedBigInteger('location_id')->nullable();\n            $table->foreign('location_id', 'location_fk_9928040')->references('id')->on('asset_locations');\n            $table->unsignedBigInteger('assigned_to_id')->nullable();\n            $table->foreign('assigned_to_id', 'assigned_to_fk_9928042')->references('id')->on('users');\n        });\n    }\n}\n",
                        "uuid": "3bcf821b096926d3"
                    },
                    "2024_07_07_000020_add_relationship_fields_to_assets_histories_table.php": {
                        "isDir": false,
                        "content": "<?php\n\nuse Illuminate\\Database\\Migrations\\Migration;\nuse Illuminate\\Database\\Schema\\Blueprint;\nuse Illuminate\\Support\\Facades\\Schema;\n\nclass AddRelationshipFieldsToAssetsHistoriesTable extends Migration\n{\n    public function up()\n    {\n        Schema::table('assets_histories', function (Blueprint $table) {\n            $table->unsignedBigInteger('asset_id')->nullable();\n            $table->foreign('asset_id', 'asset_fk_9928047')->references('id')->on('assets');\n            $table->unsignedBigInteger('status_id')->nullable();\n            $table->foreign('status_id', 'status_fk_9928048')->references('id')->on('asset_statuses');\n            $table->unsignedBigInteger('location_id')->nullable();\n            $table->foreign('location_id', 'location_fk_9928049')->references('id')->on('asset_locations');\n            $table->unsignedBigInteger('assigned_user_id')->nullable();\n            $table->foreign('assigned_user_id', 'assigned_user_fk_9928050')->references('id')->on('users');\n        });\n    }\n}\n",
                        "uuid": "f38c3cfbb9fdec8e"
                    }
                },
                "uuid": "a8c863499594deb3"
            },
            "seeders": {
                "isDir": true,
                "content": {
                    "AssetStatusTableSeeder.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\AssetStatus;\nuse Illuminate\\Database\\Seeder;\n\nclass AssetStatusTableSeeder extends Seeder\n{\n    public function run()\n    {\n        $assetStatuses = [\n            [\n                'id'         => 1,\n                'name'       => 'Available',\n                'created_at' => '2024-07-07 15:30:54',\n                'updated_at' => '2024-07-07 15:30:54',\n            ],\n            [\n                'id'         => 2,\n                'name'       => 'Not Available',\n                'created_at' => '2024-07-07 15:30:54',\n                'updated_at' => '2024-07-07 15:30:54',\n            ],\n            [\n                'id'         => 3,\n                'name'       => 'Broken',\n                'created_at' => '2024-07-07 15:30:54',\n                'updated_at' => '2024-07-07 15:30:54',\n            ],\n            [\n                'id'         => 4,\n                'name'       => 'Out for Repair',\n                'created_at' => '2024-07-07 15:30:54',\n                'updated_at' => '2024-07-07 15:30:54',\n            ],\n        ];\n\n        AssetStatus::insert($assetStatuses);\n    }\n}\n",
                        "uuid": "065ab2d688c0f860"
                    },
                    "DatabaseSeeder.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n\nclass DatabaseSeeder extends Seeder\n{\n    public function run()\n    {\n        $this->call([\n            PermissionsTableSeeder::class,\n            RolesTableSeeder::class,\n            PermissionRoleTableSeeder::class,\n            UsersTableSeeder::class,\n            RoleUserTableSeeder::class,\n            AssetStatusTableSeeder::class,\n        ]);\n    }\n}\n",
                        "uuid": "6e031fadbc2335a1"
                    },
                    "PermissionRoleTableSeeder.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Permission;\nuse App\\Models\\Role;\nuse Illuminate\\Database\\Seeder;\n\nclass PermissionRoleTableSeeder extends Seeder\n{\n    public function run()\n    {\n        $admin_permissions = Permission::all();\n        Role::findOrFail(1)->permissions()->sync($admin_permissions->pluck('id'));\n        $user_permissions = $admin_permissions->filter(function ($permission) {\n            return substr($permission->title, 0, 5) != 'user_' && substr($permission->title, 0, 5) != 'role_' && substr($permission->title, 0, 11) != 'permission_';\n        });\n        Role::findOrFail(2)->permissions()->sync($user_permissions);\n    }\n}\n",
                        "uuid": "13ad296c2d8bf07e"
                    },
                    "PermissionsTableSeeder.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Permission;\nuse Illuminate\\Database\\Seeder;\n\nclass PermissionsTableSeeder extends Seeder\n{\n    public function run()\n    {\n        $permissions = [\n            [\n                'id'    => 1,\n                'title' => 'user_management_access',\n            ],\n            [\n                'id'    => 2,\n                'title' => 'permission_create',\n            ],\n            [\n                'id'    => 3,\n                'title' => 'permission_edit',\n            ],\n            [\n                'id'    => 4,\n                'title' => 'permission_show',\n            ],\n            [\n                'id'    => 5,\n                'title' => 'permission_delete',\n            ],\n            [\n                'id'    => 6,\n                'title' => 'permission_access',\n            ],\n            [\n                'id'    => 7,\n                'title' => 'role_create',\n            ],\n            [\n                'id'    => 8,\n                'title' => 'role_edit',\n            ],\n            [\n                'id'    => 9,\n                'title' => 'role_show',\n            ],\n            [\n                'id'    => 10,\n                'title' => 'role_delete',\n            ],\n            [\n                'id'    => 11,\n                'title' => 'role_access',\n            ],\n            [\n                'id'    => 12,\n                'title' => 'user_create',\n            ],\n            [\n                'id'    => 13,\n                'title' => 'user_edit',\n            ],\n            [\n                'id'    => 14,\n                'title' => 'user_show',\n            ],\n            [\n                'id'    => 15,\n                'title' => 'user_delete',\n            ],\n            [\n                'id'    => 16,\n                'title' => 'user_access',\n            ],\n            [\n                'id'    => 17,\n                'title' => 'asset_management_access',\n            ],\n            [\n                'id'    => 18,\n                'title' => 'asset_category_create',\n            ],\n            [\n                'id'    => 19,\n                'title' => 'asset_category_edit',\n            ],\n            [\n                'id'    => 20,\n                'title' => 'asset_category_show',\n            ],\n            [\n                'id'    => 21,\n                'title' => 'asset_category_delete',\n            ],\n            [\n                'id'    => 22,\n                'title' => 'asset_category_access',\n            ],\n            [\n                'id'    => 23,\n                'title' => 'asset_location_create',\n            ],\n            [\n                'id'    => 24,\n                'title' => 'asset_location_edit',\n            ],\n            [\n                'id'    => 25,\n                'title' => 'asset_location_show',\n            ],\n            [\n                'id'    => 26,\n                'title' => 'asset_location_delete',\n            ],\n            [\n                'id'    => 27,\n                'title' => 'asset_location_access',\n            ],\n            [\n                'id'    => 28,\n                'title' => 'asset_status_create',\n            ],\n            [\n                'id'    => 29,\n                'title' => 'asset_status_edit',\n            ],\n            [\n                'id'    => 30,\n                'title' => 'asset_status_show',\n            ],\n            [\n                'id'    => 31,\n                'title' => 'asset_status_delete',\n            ],\n            [\n                'id'    => 32,\n                'title' => 'asset_status_access',\n            ],\n            [\n                'id'    => 33,\n                'title' => 'asset_create',\n            ],\n            [\n                'id'    => 34,\n                'title' => 'asset_edit',\n            ],\n            [\n                'id'    => 35,\n                'title' => 'asset_show',\n            ],\n            [\n                'id'    => 36,\n                'title' => 'asset_delete',\n            ],\n            [\n                'id'    => 37,\n                'title' => 'asset_access',\n            ],\n            [\n                'id'    => 38,\n                'title' => 'assets_history_access',\n            ],\n            [\n                'id'    => 39,\n                'title' => 'audit_log_show',\n            ],\n            [\n                'id'    => 40,\n                'title' => 'audit_log_access',\n            ],\n            [\n                'id'    => 41,\n                'title' => 'content_management_access',\n            ],\n            [\n                'id'    => 42,\n                'title' => 'content_category_create',\n            ],\n            [\n                'id'    => 43,\n                'title' => 'content_category_edit',\n            ],\n            [\n                'id'    => 44,\n                'title' => 'content_category_show',\n            ],\n            [\n                'id'    => 45,\n                'title' => 'content_category_delete',\n            ],\n            [\n                'id'    => 46,\n                'title' => 'content_category_access',\n            ],\n            [\n                'id'    => 47,\n                'title' => 'content_tag_create',\n            ],\n            [\n                'id'    => 48,\n                'title' => 'content_tag_edit',\n            ],\n            [\n                'id'    => 49,\n                'title' => 'content_tag_show',\n            ],\n            [\n                'id'    => 50,\n                'title' => 'content_tag_delete',\n            ],\n            [\n                'id'    => 51,\n                'title' => 'content_tag_access',\n            ],\n            [\n                'id'    => 52,\n                'title' => 'content_page_create',\n            ],\n            [\n                'id'    => 53,\n                'title' => 'content_page_edit',\n            ],\n            [\n                'id'    => 54,\n                'title' => 'content_page_show',\n            ],\n            [\n                'id'    => 55,\n                'title' => 'content_page_delete',\n            ],\n            [\n                'id'    => 56,\n                'title' => 'content_page_access',\n            ],\n            [\n                'id'    => 57,\n                'title' => 'provinsi_create',\n            ],\n            [\n                'id'    => 58,\n                'title' => 'provinsi_edit',\n            ],\n            [\n                'id'    => 59,\n                'title' => 'provinsi_show',\n            ],\n            [\n                'id'    => 60,\n                'title' => 'provinsi_delete',\n            ],\n            [\n                'id'    => 61,\n                'title' => 'provinsi_access',\n            ],\n            [\n                'id'    => 62,\n                'title' => 'profile_password_edit',\n            ],\n        ];\n\n        Permission::insert($permissions);\n    }\n}\n",
                        "uuid": "16930d68b30fe8f0"
                    },
                    "RoleUserTableSeeder.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass RoleUserTableSeeder extends Seeder\n{\n    public function run()\n    {\n        User::findOrFail(1)->roles()->sync(1);\n    }\n}\n",
                        "uuid": "cf0cafe18c5d1965"
                    },
                    "RolesTableSeeder.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Role;\nuse Illuminate\\Database\\Seeder;\n\nclass RolesTableSeeder extends Seeder\n{\n    public function run()\n    {\n        $roles = [\n            [\n                'id'    => 1,\n                'title' => 'Admin',\n            ],\n            [\n                'id'    => 2,\n                'title' => 'User',\n            ],\n        ];\n\n        Role::insert($roles);\n    }\n}\n",
                        "uuid": "098bda9c43e328a4"
                    },
                    "UsersTableSeeder.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UsersTableSeeder extends Seeder\n{\n    public function run()\n    {\n        $users = [\n            [\n                'id'             => 1,\n                'name'           => 'Admin',\n                'email'          => 'admin@admin.com',\n                'password'       => bcrypt('password'),\n                'remember_token' => null,\n            ],\n        ];\n\n        User::insert($users);\n    }\n}\n",
                        "uuid": "a221668b4a13d4ad"
                    }
                },
                "uuid": "34cf9a3aec3afc2a"
            }
        },
        "uuid": "d1dcb926525873ce"
    },
    "public": {
        "isDir": true,
        "content": {
            "css": {
                "isDir": true,
                "content": {
                    "adminltev3.css": {
                        "isDir": false,
                        "content": "\/*!\n *   AdminLTE v3.0.0-alpha\n *   Author: Abdullah Almsaeed\n *\t Website: AdminLTE.io <http:\/\/adminlte.io>\n *   License: Open source - MIT <http:\/\/opensource.org\/licenses\/MIT>\n *\/\/*!\n * Bootstrap v4.1.0 (https:\/\/getbootstrap.com\/)\n * Copyright 2011-2018 The Bootstrap Authors\n * Copyright 2011-2018 Twitter, Inc.\n * Licensed under MIT (https:\/\/github.com\/twbs\/bootstrap\/blob\/master\/LICENSE)\n *\/:root{--blue:#007bff;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--red:#dc3545;--orange:#fd7e14;--yellow:#ffc107;--green:#28a745;--teal:#20c997;--cyan:#17a2b8;--white:#ffffff;--gray:#6c757d;--gray-dark:#343a40;--primary:#007bff;--secondary:#6c757d;--success:#28a745;--info:#17a2b8;--warning:#ffc107;--danger:#dc3545;--light:#f8f9fa;--dark:#343a40;--breakpoint-xs:0;--breakpoint-sm:576px;--breakpoint-md:768px;--breakpoint-lg:992px;--breakpoint-xl:1200px;--font-family-sans-serif:\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";--font-family-monospace:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}*,::after,::before{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-ms-overflow-style:scrollbar;-webkit-tap-highlight-color:transparent}@-ms-viewport{width:device-width}article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex=\"-1\"]:focus{outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{text-decoration:underline;text-decoration:underline dotted;cursor:help;border-bottom:0}address{margin-bottom:1rem;font-style:normal;line-height:inherit}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}dfn{font-style:italic}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent;-webkit-text-decoration-skip:objects}a:hover{color:#0056b3;text-decoration:none}a:not([href]):not([tabindex]){color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus,a:not([href]):not([tabindex]):hover{color:inherit;text-decoration:none}a:not([href]):not([tabindex]):focus{outline:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto;-ms-overflow-style:scrollbar}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg:not(:root){overflow:hidden}table{border-collapse:collapse}caption{padding-top:.75rem;padding-bottom:.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=date],input[type=datetime-local],input[type=month],input[type=time]{-webkit-appearance:listbox}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-family:inherit;font-weight:500;line-height:1.2;color:inherit}.h1,h1{font-size:2.5rem}.h2,h2{font-size:2rem}.h3,h3{font-size:1.75rem}.h4,h4{font-size:1.5rem}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#fcf8e3}.chart-legend,.contacts-list,.list-unstyled,.mailbox-attachments,.users-list{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#6c757d}.blockquote-footer::before{content:\"\\2014 \\00A0\"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;box-shadow:0 1px 2px rgba(0,0,0,.075);max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:90%;color:#6c757d}code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}code{font-size:87.5%;color:#e83e8c;word-break:break-word}a>code{color:inherit}kbd{padding:.2rem .4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:.2rem;box-shadow:inset 0 -.1rem 0 rgba(0,0,0,.25)}kbd kbd{padding:0;font-size:100%;font-weight:700;box-shadow:none}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{width:100%;padding-right:7.5px;padding-left:7.5px;margin-right:auto;margin-left:auto}@media (min-width:576px){.container{max-width:540px}}@media (min-width:768px){.container{max-width:720px}}@media (min-width:992px){.container{max-width:960px}}@media (min-width:1200px){.container{max-width:1140px}}.container-fluid{width:100%;padding-right:7.5px;padding-left:7.5px;margin-right:auto;margin-left:auto}.row{display:flex;flex-wrap:wrap;margin-right:-7.5px;margin-left:-7.5px}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*=col-]{padding-right:0;padding-left:0}.col,.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-auto,.col-lg,.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-auto,.col-md,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-auto,.col-sm,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-auto{position:relative;width:100%;min-height:1px;padding-right:7.5px;padding-left:7.5px}.col{flex-basis:0;flex-grow:1;max-width:100%}.col-auto{flex:0 0 auto;width:auto;max-width:none}.col-1{flex:0 0 8.333333%;max-width:8.333333%}.col-2{flex:0 0 16.666667%;max-width:16.666667%}.col-3{flex:0 0 25%;max-width:25%}.col-4{flex:0 0 33.333333%;max-width:33.333333%}.col-5{flex:0 0 41.666667%;max-width:41.666667%}.col-6{flex:0 0 50%;max-width:50%}.col-7{flex:0 0 58.333333%;max-width:58.333333%}.col-8{flex:0 0 66.666667%;max-width:66.666667%}.col-9{flex:0 0 75%;max-width:75%}.col-10{flex:0 0 83.333333%;max-width:83.333333%}.col-11{flex:0 0 91.666667%;max-width:91.666667%}.col-12{flex:0 0 100%;max-width:100%}.order-first{order:-1}.order-last{order:13}.order-0{order:0}.order-1{order:1}.order-2{order:2}.order-3{order:3}.order-4{order:4}.order-5{order:5}.order-6{order:6}.order-7{order:7}.order-8{order:8}.order-9{order:9}.order-10{order:10}.order-11{order:11}.order-12{order:12}.offset-1{margin-left:8.333333%}.offset-2{margin-left:16.666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.333333%}.offset-5{margin-left:41.666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.333333%}.offset-8{margin-left:66.666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.333333%}.offset-11{margin-left:91.666667%}@media (min-width:576px){.col-sm{flex-basis:0;flex-grow:1;max-width:100%}.col-sm-auto{flex:0 0 auto;width:auto;max-width:none}.col-sm-1{flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{flex:0 0 25%;max-width:25%}.col-sm-4{flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{flex:0 0 50%;max-width:50%}.col-sm-7{flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{flex:0 0 75%;max-width:75%}.col-sm-10{flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{flex:0 0 100%;max-width:100%}.order-sm-first{order:-1}.order-sm-last{order:13}.order-sm-0{order:0}.order-sm-1{order:1}.order-sm-2{order:2}.order-sm-3{order:3}.order-sm-4{order:4}.order-sm-5{order:5}.order-sm-6{order:6}.order-sm-7{order:7}.order-sm-8{order:8}.order-sm-9{order:9}.order-sm-10{order:10}.order-sm-11{order:11}.order-sm-12{order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.333333%}.offset-sm-2{margin-left:16.666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.333333%}.offset-sm-5{margin-left:41.666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.333333%}.offset-sm-8{margin-left:66.666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.333333%}.offset-sm-11{margin-left:91.666667%}}@media (min-width:768px){.col-md{flex-basis:0;flex-grow:1;max-width:100%}.col-md-auto{flex:0 0 auto;width:auto;max-width:none}.col-md-1{flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{flex:0 0 25%;max-width:25%}.col-md-4{flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{flex:0 0 50%;max-width:50%}.col-md-7{flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{flex:0 0 75%;max-width:75%}.col-md-10{flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{flex:0 0 100%;max-width:100%}.order-md-first{order:-1}.order-md-last{order:13}.order-md-0{order:0}.order-md-1{order:1}.order-md-2{order:2}.order-md-3{order:3}.order-md-4{order:4}.order-md-5{order:5}.order-md-6{order:6}.order-md-7{order:7}.order-md-8{order:8}.order-md-9{order:9}.order-md-10{order:10}.order-md-11{order:11}.order-md-12{order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.333333%}.offset-md-2{margin-left:16.666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.333333%}.offset-md-5{margin-left:41.666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.333333%}.offset-md-8{margin-left:66.666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.333333%}.offset-md-11{margin-left:91.666667%}}@media (min-width:992px){.col-lg{flex-basis:0;flex-grow:1;max-width:100%}.col-lg-auto{flex:0 0 auto;width:auto;max-width:none}.col-lg-1{flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{flex:0 0 25%;max-width:25%}.col-lg-4{flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{flex:0 0 50%;max-width:50%}.col-lg-7{flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{flex:0 0 75%;max-width:75%}.col-lg-10{flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{flex:0 0 100%;max-width:100%}.order-lg-first{order:-1}.order-lg-last{order:13}.order-lg-0{order:0}.order-lg-1{order:1}.order-lg-2{order:2}.order-lg-3{order:3}.order-lg-4{order:4}.order-lg-5{order:5}.order-lg-6{order:6}.order-lg-7{order:7}.order-lg-8{order:8}.order-lg-9{order:9}.order-lg-10{order:10}.order-lg-11{order:11}.order-lg-12{order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.333333%}.offset-lg-2{margin-left:16.666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.333333%}.offset-lg-5{margin-left:41.666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.333333%}.offset-lg-8{margin-left:66.666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.333333%}.offset-lg-11{margin-left:91.666667%}}@media (min-width:1200px){.col-xl{flex-basis:0;flex-grow:1;max-width:100%}.col-xl-auto{flex:0 0 auto;width:auto;max-width:none}.col-xl-1{flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{flex:0 0 25%;max-width:25%}.col-xl-4{flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{flex:0 0 50%;max-width:50%}.col-xl-7{flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{flex:0 0 75%;max-width:75%}.col-xl-10{flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{flex:0 0 100%;max-width:100%}.order-xl-first{order:-1}.order-xl-last{order:13}.order-xl-0{order:0}.order-xl-1{order:1}.order-xl-2{order:2}.order-xl-3{order:3}.order-xl-4{order:4}.order-xl-5{order:5}.order-xl-6{order:6}.order-xl-7{order:7}.order-xl-8{order:8}.order-xl-9{order:9}.order-xl-10{order:10}.order-xl-11{order:11}.order-xl-12{order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.333333%}.offset-xl-2{margin-left:16.666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.333333%}.offset-xl-5{margin-left:41.666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.333333%}.offset-xl-8{margin-left:66.666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.333333%}.offset-xl-11{margin-left:91.666667%}}.table{width:100%;max-width:100%;margin-bottom:1rem;background-color:transparent}.table td,.table th{padding:.75rem;vertical-align:top;border-top:1px solid #dee2e6}.table thead th{vertical-align:bottom;border-bottom:2px solid #dee2e6}.table tbody+tbody{border-top:2px solid #dee2e6}.table .table{background-color:#fff}.table-sm td,.table-sm th{padding:.3rem}.table-bordered{border:1px solid #dee2e6}.table-bordered td,.table-bordered th{border:1px solid #dee2e6}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-borderless tbody+tbody,.table-borderless td,.table-borderless th,.table-borderless thead th{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.table-hover tbody tr:hover{background-color:rgba(0,0,0,.075)}.table-primary,.table-primary>td,.table-primary>th{background-color:#b8daff}.table-hover .table-primary:hover{background-color:#9fcdff}.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#9fcdff}.table-secondary,.table-secondary>td,.table-secondary>th{background-color:#d6d8db}.table-hover .table-secondary:hover{background-color:#c8cbcf}.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#c8cbcf}.table-success,.table-success>td,.table-success>th{background-color:#c3e6cb}.table-hover .table-success:hover{background-color:#b1dfbb}.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#b1dfbb}.table-info,.table-info>td,.table-info>th{background-color:#bee5eb}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#abdde5}.table-warning,.table-warning>td,.table-warning>th{background-color:#ffeeba}.table-hover .table-warning:hover{background-color:#ffe8a1}.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#ffe8a1}.table-danger,.table-danger>td,.table-danger>th{background-color:#f5c6cb}.table-hover .table-danger:hover{background-color:#f1b0b7}.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#f1b0b7}.table-light,.table-light>td,.table-light>th{background-color:#fdfdfe}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#ececf6}.table-dark,.table-dark>td,.table-dark>th{background-color:#c6c8ca}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#b9bbbe}.table-active,.table-active>td,.table-active>th{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:rgba(0,0,0,.075)}.table .thead-dark th{color:#fff;background-color:#212529;border-color:#32383e}.table .thead-light th{color:#495057;background-color:#e9ecef;border-color:#dee2e6}.table-dark{color:#fff;background-color:#212529}.table-dark td,.table-dark th,.table-dark thead th{border-color:#32383e}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,.05)}.table-dark.table-hover tbody tr:hover{background-color:rgba(255,255,255,.075)}@media (max-width:575.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-sm>.table-bordered{border:0}}@media (max-width:767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-md>.table-bordered{border:0}}@media (max-width:991.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-lg>.table-bordered{border:0}}@media (max-width:1199.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive-xl>.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;-ms-overflow-style:-ms-autohiding-scrollbar}.table-responsive>.table-bordered{border:0}.form-control{display:block;width:100%;padding:.375rem .75rem;font-size:1rem;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;box-shadow:inset 0 0 0 transparent;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;box-shadow:inset 0 0 0 transparent,0 0 0 .2rem rgba(0,123,255,.25)}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}select.form-control:not([size]):not([multiple]){height:calc(2.25rem + 2px)}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding-top:.375rem;padding-bottom:.375rem;margin-bottom:0;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm,.input-group-lg>.form-control-plaintext.form-control,.input-group-lg>.input-group-append>.form-control-plaintext.btn,.input-group-lg>.input-group-append>.form-control-plaintext.input-group-text,.input-group-lg>.input-group-prepend>.form-control-plaintext.btn,.input-group-lg>.input-group-prepend>.form-control-plaintext.input-group-text,.input-group-sm>.form-control-plaintext.form-control,.input-group-sm>.input-group-append>.form-control-plaintext.btn,.input-group-sm>.input-group-append>.form-control-plaintext.input-group-text,.input-group-sm>.input-group-prepend>.form-control-plaintext.btn,.input-group-sm>.input-group-prepend>.form-control-plaintext.input-group-text{padding-right:0;padding-left:0}.form-control-sm,.input-group-sm>.form-control,.input-group-sm>.input-group-append>.btn,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-prepend>.input-group-text{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.input-group-sm>.input-group-append>select.btn:not([size]):not([multiple]),.input-group-sm>.input-group-append>select.input-group-text:not([size]):not([multiple]),.input-group-sm>.input-group-prepend>select.btn:not([size]):not([multiple]),.input-group-sm>.input-group-prepend>select.input-group-text:not([size]):not([multiple]),.input-group-sm>select.form-control:not([size]):not([multiple]),select.form-control-sm:not([size]):not([multiple]){height:calc(1.8125rem + 2px)}.form-control-lg,.input-group-lg>.form-control,.input-group-lg>.input-group-append>.btn,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-prepend>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.input-group-lg>.input-group-append>select.btn:not([size]):not([multiple]),.input-group-lg>.input-group-append>select.input-group-text:not([size]):not([multiple]),.input-group-lg>.input-group-prepend>select.btn:not([size]):not([multiple]),.input-group-lg>.input-group-prepend>select.input-group-text:not([size]):not([multiple]),.input-group-lg>select.form-control:not([size]):not([multiple]),select.form-control-lg:not([size]):not([multiple]){height:calc(2.875rem + 2px)}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:.25rem}.form-row{display:flex;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:.3rem;margin-left:-1.25rem}.form-check-input:disabled~.form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:inline-flex;align-items:center;padding-left:0;margin-right:.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.5rem;margin-top:.1rem;font-size:.875rem;line-height:1;color:#fff;background-color:rgba(40,167,69,.8);border-radius:.2rem}.custom-select.is-valid,.form-control.is-valid,.was-validated .custom-select:valid,.was-validated .form-control:valid{border-color:#28a745}.custom-select.is-valid:focus,.form-control.is-valid:focus,.was-validated .custom-select:valid:focus,.was-validated .form-control:valid:focus{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.custom-select.is-valid~.valid-feedback,.custom-select.is-valid~.valid-tooltip,.form-control.is-valid~.valid-feedback,.form-control.is-valid~.valid-tooltip,.was-validated .custom-select:valid~.valid-feedback,.was-validated .custom-select:valid~.valid-tooltip,.was-validated .form-control:valid~.valid-feedback,.was-validated .form-control:valid~.valid-tooltip{display:block}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:#28a745}.form-check-input.is-valid~.valid-feedback,.form-check-input.is-valid~.valid-tooltip,.was-validated .form-check-input:valid~.valid-feedback,.was-validated .form-check-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid~.custom-control-label,.was-validated .custom-control-input:valid~.custom-control-label{color:#28a745}.custom-control-input.is-valid~.custom-control-label::before,.was-validated .custom-control-input:valid~.custom-control-label::before{background-color:#71dd8a}.custom-control-input.is-valid~.valid-feedback,.custom-control-input.is-valid~.valid-tooltip,.was-validated .custom-control-input:valid~.valid-feedback,.was-validated .custom-control-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid:checked~.custom-control-label::before,.was-validated .custom-control-input:valid:checked~.custom-control-label::before{background-color:#34ce57}.custom-control-input.is-valid:focus~.custom-control-label::before,.was-validated .custom-control-input:valid:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(40,167,69,.25)}.custom-file-input.is-valid~.custom-file-label,.was-validated .custom-file-input:valid~.custom-file-label{border-color:#28a745}.custom-file-input.is-valid~.custom-file-label::before,.was-validated .custom-file-input:valid~.custom-file-label::before{border-color:inherit}.custom-file-input.is-valid~.valid-feedback,.custom-file-input.is-valid~.valid-tooltip,.was-validated .custom-file-input:valid~.valid-feedback,.was-validated .custom-file-input:valid~.valid-tooltip{display:block}.custom-file-input.is-valid:focus~.custom-file-label,.was-validated .custom-file-input:valid:focus~.custom-file-label{box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.5rem;margin-top:.1rem;font-size:.875rem;line-height:1;color:#fff;background-color:rgba(220,53,69,.8);border-radius:.2rem}.custom-select.is-invalid,.form-control.is-invalid,.was-validated .custom-select:invalid,.was-validated .form-control:invalid{border-color:#dc3545}.custom-select.is-invalid:focus,.form-control.is-invalid:focus,.was-validated .custom-select:invalid:focus,.was-validated .form-control:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.custom-select.is-invalid~.invalid-feedback,.custom-select.is-invalid~.invalid-tooltip,.form-control.is-invalid~.invalid-feedback,.form-control.is-invalid~.invalid-tooltip,.was-validated .custom-select:invalid~.invalid-feedback,.was-validated .custom-select:invalid~.invalid-tooltip,.was-validated .form-control:invalid~.invalid-feedback,.was-validated .form-control:invalid~.invalid-tooltip{display:block}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:#dc3545}.form-check-input.is-invalid~.invalid-feedback,.form-check-input.is-invalid~.invalid-tooltip,.was-validated .form-check-input:invalid~.invalid-feedback,.was-validated .form-check-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid~.custom-control-label,.was-validated .custom-control-input:invalid~.custom-control-label{color:#dc3545}.custom-control-input.is-invalid~.custom-control-label::before,.was-validated .custom-control-input:invalid~.custom-control-label::before{background-color:#efa2a9}.custom-control-input.is-invalid~.invalid-feedback,.custom-control-input.is-invalid~.invalid-tooltip,.was-validated .custom-control-input:invalid~.invalid-feedback,.was-validated .custom-control-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid:checked~.custom-control-label::before,.was-validated .custom-control-input:invalid:checked~.custom-control-label::before{background-color:#e4606d}.custom-control-input.is-invalid:focus~.custom-control-label::before,.was-validated .custom-control-input:invalid:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(220,53,69,.25)}.custom-file-input.is-invalid~.custom-file-label,.was-validated .custom-file-input:invalid~.custom-file-label{border-color:#dc3545}.custom-file-input.is-invalid~.custom-file-label::before,.was-validated .custom-file-input:invalid~.custom-file-label::before{border-color:inherit}.custom-file-input.is-invalid~.invalid-feedback,.custom-file-input.is-invalid~.invalid-tooltip,.was-validated .custom-file-input:invalid~.invalid-feedback,.was-validated .custom-file-input:invalid~.invalid-tooltip{display:block}.custom-file-input.is-invalid:focus~.custom-file-label,.was-validated .custom-file-input:invalid:focus~.custom-file-label{box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.form-inline{display:flex;flex-flow:row wrap;align-items:center}.form-inline .form-check{width:100%}@media (min-width:576px){.form-inline label{display:flex;align-items:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:flex;flex:0 0 auto;flex-flow:row wrap;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .custom-select,.form-inline .input-group{width:auto}.form-inline .form-check{display:flex;align-items:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;margin-top:0;margin-right:.25rem;margin-left:0}.form-inline .custom-control{align-items:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;user-select:none;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:focus,.btn:hover{text-decoration:none}.btn.focus,.btn:focus{outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.btn.disabled,.btn:disabled{opacity:.65;box-shadow:none}.btn:not(:disabled):not(.disabled){cursor:pointer}.btn:not(:disabled):not(.disabled).active,.btn:not(:disabled):not(.disabled):active{background-image:none;box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn:not(:disabled):not(.disabled).active:focus,.btn:not(:disabled):not(.disabled):active:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.25),inset 0 3px 5px rgba(0,0,0,.125)}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary.focus,.btn-primary:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(0,123,255,.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled).active,.btn-primary:not(:disabled):not(.disabled):active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled).active:focus,.btn-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(0,123,255,.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary.focus,.btn-secondary:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(108,117,125,.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled).active,.btn-secondary:not(:disabled):not(.disabled):active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled).active:focus,.btn-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(108,117,125,.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success.focus,.btn-success:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(40,167,69,.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled).active,.btn-success:not(:disabled):not(.disabled):active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled).active:focus,.btn-success:not(:disabled):not(.disabled):active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(40,167,69,.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info.focus,.btn-info:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(23,162,184,.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled).active,.btn-info:not(:disabled):not(.disabled):active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled).active:focus,.btn-info:not(:disabled):not(.disabled):active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(23,162,184,.5)}.btn-warning{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-warning:hover{color:#1f2d3d;background-color:#e0a800;border-color:#d39e00}.btn-warning.focus,.btn-warning:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(255,193,7,.5)}.btn-warning.disabled,.btn-warning:disabled{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled).active,.btn-warning:not(:disabled):not(.disabled):active,.show>.btn-warning.dropdown-toggle{color:#1f2d3d;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled).active:focus,.btn-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(255,193,7,.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger.focus,.btn-danger:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(220,53,69,.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled).active,.btn-danger:not(:disabled):not(.disabled):active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled).active:focus,.btn-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(220,53,69,.5)}.btn-light{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-light:hover{color:#1f2d3d;background-color:#e2e6ea;border-color:#dae0e5}.btn-light.focus,.btn-light:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(248,249,250,.5)}.btn-light.disabled,.btn-light:disabled{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled).active,.btn-light:not(:disabled):not(.disabled):active,.show>.btn-light.dropdown-toggle{color:#1f2d3d;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled).active:focus,.btn-light:not(:disabled):not(.disabled):active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(248,249,250,.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40;box-shadow:0 1px 1px rgba(0,0,0,.075)}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark.focus,.btn-dark:focus{box-shadow:0 1px 1px rgba(0,0,0,.075),0 0 0 .2rem rgba(52,58,64,.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled).active,.btn-dark:not(:disabled):not(.disabled):active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled).active:focus,.btn-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(52,58,64,.5)}.btn-outline-primary{color:#007bff;background-color:transparent;background-image:none;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary.focus,.btn-outline-primary:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled).active,.btn-outline-primary:not(:disabled):not(.disabled):active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-secondary{color:#6c757d;background-color:transparent;background-image:none;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary.focus,.btn-outline-secondary:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled).active,.btn-outline-secondary:not(:disabled):not(.disabled):active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-success{color:#28a745;background-color:transparent;background-image:none;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success.focus,.btn-outline-success:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled).active,.btn-outline-success:not(:disabled):not(.disabled):active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled).active:focus,.btn-outline-success:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-success.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-info{color:#17a2b8;background-color:transparent;background-image:none;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info.focus,.btn-outline-info:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled).active,.btn-outline-info:not(:disabled):not(.disabled):active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled).active:focus,.btn-outline-info:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-info.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-warning{color:#ffc107;background-color:transparent;background-image:none;border-color:#ffc107}.btn-outline-warning:hover{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning.focus,.btn-outline-warning:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled).active,.btn-outline-warning:not(:disabled):not(.disabled):active,.show>.btn-outline-warning.dropdown-toggle{color:#1f2d3d;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-danger{color:#dc3545;background-color:transparent;background-image:none;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger.focus,.btn-outline-danger:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled).active,.btn-outline-danger:not(:disabled):not(.disabled):active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-light{color:#f8f9fa;background-color:transparent;background-image:none;border-color:#f8f9fa}.btn-outline-light:hover{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light.focus,.btn-outline-light:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled).active,.btn-outline-light:not(:disabled):not(.disabled):active,.show>.btn-outline-light.dropdown-toggle{color:#1f2d3d;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled).active:focus,.btn-outline-light:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-light.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-dark{color:#343a40;background-color:transparent;background-image:none;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark.focus,.btn-outline-dark:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled).active,.btn-outline-dark:not(:disabled):not(.disabled):active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125),0 0 0 .2rem rgba(52,58,64,.5)}.btn-link{font-weight:400;color:#007bff;background-color:transparent}.btn-link:hover{color:#0056b3;text-decoration:none;background-color:transparent;border-color:transparent}.btn-link.focus,.btn-link:focus{text-decoration:none;border-color:transparent;box-shadow:none}.btn-link.disabled,.btn-link:disabled{color:#6c757d;pointer-events:none}.btn-group-lg>.btn,.btn-lg{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{transition:opacity .15s linear}@media screen and (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;transition:height .35s ease}@media screen and (prefers-reduced-motion:reduce){.collapsing{transition:none}}.dropdown,.dropleft,.dropright,.dropup{position:relative}.dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem;box-shadow:0 .5rem 1rem rgba(0,0,0,.175)}.dropdown-menu-right{right:0;left:auto}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropright .dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropleft .dropdown-toggle::after{display:inline-block;width:0;height:0;margin-left:.255em;vertical-align:.255em;content:\"\"}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;width:0;height:0;margin-right:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=top]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:.25rem 1rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:.25rem 1rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;flex:0 1 auto}.btn-group-vertical>.btn:hover,.btn-group>.btn:hover{z-index:1}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus{z-index:1}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group,.btn-group-vertical .btn+.btn,.btn-group-vertical .btn+.btn-group,.btn-group-vertical .btn-group+.btn,.btn-group-vertical .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{display:flex;flex-wrap:wrap;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn-group:not(:last-child)>.btn,.btn-group>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:not(:first-child)>.btn,.btn-group>.btn:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group.show .dropdown-toggle{box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-group.show .dropdown-toggle.btn-link{box-shadow:none}.btn-group-vertical{flex-direction:column;align-items:flex-start;justify-content:center}.btn-group-vertical .btn,.btn-group-vertical .btn-group{width:100%}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn-group:not(:last-child)>.btn,.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child)>.btn,.btn-group-vertical>.btn:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn input[type=checkbox],.btn-group-toggle>.btn input[type=radio],.btn-group-toggle>.btn-group>.btn input[type=checkbox],.btn-group-toggle>.btn-group>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.input-group>.custom-file,.input-group>.custom-select,.input-group>.form-control{position:relative;flex:1 1 auto;width:1%;margin-bottom:0}.input-group>.custom-file:focus,.input-group>.custom-select:focus,.input-group>.form-control:focus{z-index:3}.input-group>.custom-file+.custom-file,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.form-control,.input-group>.custom-select+.custom-file,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.form-control,.input-group>.form-control+.custom-file,.input-group>.form-control+.custom-select,.input-group>.form-control+.form-control{margin-left:-1px}.input-group>.custom-select:not(:last-child),.input-group>.form-control:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-select:not(:first-child),.input-group>.form-control:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:flex;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label,.input-group>.custom-file:not(:first-child) .custom-file-label::after{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-append,.input-group-prepend{display:flex}.input-group-append .btn,.input-group-prepend .btn{position:relative;z-index:2}.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.btn,.input-group-append .input-group-text+.input-group-text,.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-prepend .input-group-text+.input-group-text{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:flex;align-items:center;padding:.375rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.input-group-text input[type=checkbox],.input-group-text input[type=radio]{margin-top:0}.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child),.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child),.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text{border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;display:block;min-height:1.5rem;padding-left:1.5rem}.custom-control-inline{display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;z-index:-1;opacity:0}.custom-control-input:checked~.custom-control-label::before{color:#fff;background-color:#007bff;box-shadow:none}.custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-control-input:active~.custom-control-label::before{color:#fff;background-color:#b3d7ff;box-shadow:none}.custom-control-input:disabled~.custom-control-label{color:#6c757d}.custom-control-input:disabled~.custom-control-label::before{background-color:#e9ecef}.custom-control-label{margin-bottom:0}.custom-control-label::before{position:absolute;top:.25rem;left:0;display:block;width:1rem;height:1rem;pointer-events:none;content:\"\";user-select:none;background-color:#dee2e6;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-control-label::after{position:absolute;top:.25rem;left:0;display:block;width:1rem;height:1rem;content:\"\";background-repeat:no-repeat;background-position:center center;background-size:50% 50%}.custom-checkbox .custom-control-label::before{border-radius:.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-label::before{background-color:#007bff}.custom-checkbox .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image\/svg+xml;charset=utf8,%3Csvg xmlns='http:\/\/www.w3.org\/2000\/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23ffffff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'\/%3E%3C\/svg%3E\")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::before{background-color:#007bff;box-shadow:none}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::after{background-image:url(\"data:image\/svg+xml;charset=utf8,%3Csvg xmlns='http:\/\/www.w3.org\/2000\/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='%23ffffff' d='M0 2h4'\/%3E%3C\/svg%3E\")}.custom-checkbox .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-checkbox .custom-control-input:disabled:indeterminate~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-label::before{background-color:#007bff}.custom-radio .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image\/svg+xml;charset=utf8,%3Csvg xmlns='http:\/\/www.w3.org\/2000\/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill='%23ffffff'\/%3E%3C\/svg%3E\")}.custom-radio .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-select{display:inline-block;width:100%;height:calc(2.25rem + 2px);padding:.375rem 1.75rem .375rem .75rem;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url(\"data:image\/svg+xml;charset=utf8,%3Csvg xmlns='http:\/\/www.w3.org\/2000\/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'\/%3E%3C\/svg%3E\") no-repeat right .75rem center;background-size:8px 10px;border:1px solid #ced4da;border-radius:.25rem;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;box-shadow:inset 0 1px 2px rgba(0,0,0,.075),0 0 5px rgba(128,189,255,.5)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size=\"1\"]){height:auto;padding-right:.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{opacity:0}.custom-select-sm{height:calc(1.8125rem + 2px);padding-top:.375rem;padding-bottom:.375rem;font-size:75%}.custom-select-lg{height:calc(2.875rem + 2px);padding-top:.375rem;padding-bottom:.375rem;font-size:125%}.custom-file{position:relative;display:inline-block;width:100%;height:calc(2.25rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(2.25rem + 2px);margin:0;opacity:0}.custom-file-input:focus~.custom-file-label{border-color:#80bdff;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.custom-file-input:focus~.custom-file-label::after{border-color:#80bdff}.custom-file-input:lang(en)~.custom-file-label::after{content:\"Browse\"}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(2.25rem + 2px);padding:.375rem .75rem;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:.25rem;box-shadow:inset 0 0 0 transparent}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(calc(2.25rem + 2px) - 1px * 2);padding:.375rem .75rem;line-height:1.5;color:#495057;content:\"Browse\";background-color:#e9ecef;border-left:1px solid #ced4da;border-radius:0 .25rem .25rem 0}.custom-range{width:100%;padding-left:0;background-color:transparent;appearance:none}.custom-range:focus{outline:0}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#007bff;border:0;border-radius:1rem;box-shadow:0 .1rem .25rem rgba(0,0,0,.1);appearance:none}.custom-range::-webkit-slider-thumb:focus{outline:0;box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;box-shadow:0 .1rem .25rem rgba(0,0,0,.1);appearance:none}.custom-range::-moz-range-thumb:focus{outline:0;box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-range::-ms-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;box-shadow:0 .1rem .25rem rgba(0,0,0,.1);appearance:none}.custom-range::-ms-thumb:focus{outline:0;box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:.5rem;box-shadow:inset 0 .25rem .25rem rgba(0,0,0,.1)}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.nav{display:flex;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#6c757d}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item{flex:1 1 auto;text-align:center}.nav-justified .nav-item{flex-basis:0;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;padding:.5rem .5rem}.navbar>.container,.navbar>.container-fluid{display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:.3125rem;padding-bottom:.3125rem;margin-right:.5rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-nav{display:flex;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:.5rem;padding-bottom:.5rem}.navbar-collapse{flex-basis:100%;flex-grow:1;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none}.navbar-toggler:not(:disabled):not(.disabled){cursor:pointer}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\"\";background:no-repeat center center;background-size:100% 100%}@media (max-width:575.98px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:576px){.navbar-expand-sm{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand-sm .navbar-nav{flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid{flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width:767.98px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:768px){.navbar-expand-md{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand-md .navbar-nav{flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid{flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width:991.98px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:992px){.navbar-expand-lg{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand-lg .navbar-nav{flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid{flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width:1199.98px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{padding-right:0;padding-left:0}}@media (min-width:1200px){.navbar-expand-xl{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand-xl .navbar-nav{flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid{flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{flex-flow:row nowrap;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:1rem;padding-left:1rem}.navbar-expand>.container,.navbar-expand>.container-fluid{flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0,0,0,.9)}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.5)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .show>.nav-link{color:rgba(0,0,0,.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,.5);border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url(\"data:image\/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath stroke='rgba(0, 0, 0, 0.5)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'\/%3E%3C\/svg%3E\")}.navbar-light .navbar-text{color:rgba(0,0,0,.5)}.navbar-light .navbar-text a{color:rgba(0,0,0,.9)}.navbar-light .navbar-text a:focus,.navbar-light .navbar-text a:hover{color:rgba(0,0,0,.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,.75)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:#fff}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,.25)}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .show>.nav-link{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,.75);border-color:rgba(255,255,255,.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\"data:image\/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath stroke='rgba(255, 255, 255, 0.75)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'\/%3E%3C\/svg%3E\")}.navbar-dark .navbar-text{color:rgba(255,255,255,.75)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:focus,.navbar-dark .navbar-text a:hover{color:#fff}.card{position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:0 solid rgba(0,0,0,.125);border-radius:.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group:first-child .list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.card>.list-group:last-child .list-group-item:last-child{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-body{flex:1 1 auto;padding:1.25rem}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,.03);border-bottom:0 solid rgba(0,0,0,.125)}.card-header:first-child{border-radius:calc(.25rem - 0) calc(.25rem - 0) 0 0}.card-header+.list-group .list-group-item:first-child{border-top:0}.card-footer{padding:.75rem 1.25rem;background-color:rgba(0,0,0,.03);border-top:0 solid rgba(0,0,0,.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 0) calc(.25rem - 0)}.card-header-tabs{margin-right:-.625rem;margin-bottom:-.75rem;margin-left:-.625rem;border-bottom:0}.card-header-pills{margin-right:-.625rem;margin-left:-.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem}.card-img{width:100%;border-radius:calc(.25rem - 0)}.card-img-top{width:100%;border-top-left-radius:calc(.25rem - 0);border-top-right-radius:calc(.25rem - 0)}.card-img-bottom{width:100%;border-bottom-right-radius:calc(.25rem - 0);border-bottom-left-radius:calc(.25rem - 0)}.card-deck{display:flex;flex-direction:column}.card-deck .card{margin-bottom:7.5px}@media (min-width:576px){.card-deck{flex-flow:row wrap;margin-right:-7.5px;margin-left:-7.5px}.card-deck .card{display:flex;flex:1 0 0%;flex-direction:column;margin-right:7.5px;margin-bottom:0;margin-left:7.5px}}.card-group{display:flex;flex-direction:column}.card-group>.card{margin-bottom:7.5px}@media (min-width:576px){.card-group{flex-flow:row wrap}.card-group>.card{flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:first-child{border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:first-child .card-header,.card-group>.card:first-child .card-img-top{border-top-right-radius:0}.card-group>.card:first-child .card-footer,.card-group>.card:first-child .card-img-bottom{border-bottom-right-radius:0}.card-group>.card:last-child{border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:last-child .card-header,.card-group>.card:last-child .card-img-top{border-top-left-radius:0}.card-group>.card:last-child .card-footer,.card-group>.card:last-child .card-img-bottom{border-bottom-left-radius:0}.card-group>.card:only-child{border-radius:.25rem}.card-group>.card:only-child .card-header,.card-group>.card:only-child .card-img-top{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.card-group>.card:only-child .card-footer,.card-group>.card:only-child .card-img-bottom{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.card-group>.card:not(:first-child):not(:last-child):not(:only-child){border-radius:0}.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-footer,.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-header,.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-img-bottom,.card-group>.card:not(:first-child):not(:last-child):not(:only-child) .card-img-top{border-radius:0}}.card-columns .card{margin-bottom:.75rem}@media (min-width:576px){.card-columns{column-count:3;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion .card:not(:first-of-type):not(:last-of-type){border-bottom:0;border-radius:0}.accordion .card:not(:first-of-type) .card-header:first-child{border-radius:0}.accordion .card:first-of-type{border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion .card:last-of-type{border-top-left-radius:0;border-top-right-radius:0}.breadcrumb{display:flex;flex-wrap:wrap;padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:.25rem}.breadcrumb-item+.breadcrumb-item{padding-left:.5rem}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:.5rem;color:#6c757d;content:\"\/\"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#6c757d}.pagination{display:flex;padding-left:0;list-style:none;border-radius:.25rem}.page-link{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#007bff;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#0056b3;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:2;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.page-link:not(:disabled):not(.disabled){cursor:pointer}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.page-item.active .page-link{z-index:1;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.badge{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:.6em;padding-left:.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}.badge-primary[href]:focus,.badge-primary[href]:hover{color:#fff;text-decoration:none;background-color:#0062cc}.badge-secondary{color:#fff;background-color:#6c757d}.badge-secondary[href]:focus,.badge-secondary[href]:hover{color:#fff;text-decoration:none;background-color:#545b62}.badge-success{color:#fff;background-color:#28a745}.badge-success[href]:focus,.badge-success[href]:hover{color:#fff;text-decoration:none;background-color:#1e7e34}.badge-info{color:#fff;background-color:#17a2b8}.badge-info[href]:focus,.badge-info[href]:hover{color:#fff;text-decoration:none;background-color:#117a8b}.badge-warning{color:#1f2d3d;background-color:#ffc107}.badge-warning[href]:focus,.badge-warning[href]:hover{color:#1f2d3d;text-decoration:none;background-color:#d39e00}.badge-danger{color:#fff;background-color:#dc3545}.badge-danger[href]:focus,.badge-danger[href]:hover{color:#fff;text-decoration:none;background-color:#bd2130}.badge-light{color:#1f2d3d;background-color:#f8f9fa}.badge-light[href]:focus,.badge-light[href]:hover{color:#1f2d3d;text-decoration:none;background-color:#dae0e5}.badge-dark{color:#fff;background-color:#343a40}.badge-dark[href]:focus,.badge-dark[href]:hover{color:#fff;text-decoration:none;background-color:#1d2124}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:.3rem}@media (min-width:576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close,.alert-dismissible .mailbox-attachment-close{position:absolute;top:0;right:0;padding:.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:flex;height:1rem;overflow:hidden;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem;box-shadow:inset 0 .1rem .1rem rgba(0,0,0,.1)}.progress-bar{display:flex;flex-direction:column;justify-content:center;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;transition:width .6s ease}@media screen and (prefers-reduced-motion:reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.progress-bar-animated{animation:progress-bar-stripes 1s linear infinite}.media{display:flex;align-items:flex-start}.media-body{flex:1}.list-group{display:flex;flex-direction:column;padding-left:0;margin-bottom:0}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;margin-bottom:-1px;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.list-group-item:first-child{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.list-group-item:focus,.list-group-item:hover{z-index:1;text-decoration:none}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-flush .list-group-item{border-right:0;border-left:0;border-radius:0}.list-group-flush:first-child .list-group-item:first-child{border-top:0}.list-group-flush:last-child .list-group-item:last-child{border-bottom:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:focus,.list-group-item-primary.list-group-item-action:hover{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:focus,.list-group-item-secondary.list-group-item-action:hover{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:focus,.list-group-item-success.list-group-item-action:hover{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:focus,.list-group-item-info.list-group-item-action:hover{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:focus,.list-group-item-warning.list-group-item-action:hover{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:focus,.list-group-item-danger.list-group-item-action:hover{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:focus,.list-group-item-light.list-group-item-action:hover{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:focus,.list-group-item-dark.list-group-item-action:hover{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close,.mailbox-attachment-close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:focus,.close:hover,.mailbox-attachment-close:focus,.mailbox-attachment-close:hover{color:#000;text-decoration:none;opacity:.75}.close:not(:disabled):not(.disabled),.mailbox-attachment-close:not(:disabled):not(.disabled){cursor:pointer}button.close,button.mailbox-attachment-close{padding:0;background-color:transparent;border:0;-webkit-appearance:none}.modal-open{overflow:hidden}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;overflow:hidden;outline:0}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:transform .3s ease-out;transform:translate(0,-25%)}@media screen and (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{transform:translate(0,0)}.modal-dialog-centered{display:flex;align-items:center;min-height:calc(100% - (.5rem * 2))}.modal-content{position:relative;display:flex;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;box-shadow:0 .25rem .5rem rgba(0,0,0,.5);outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:flex;align-items:flex-start;justify-content:space-between;padding:1rem;border-bottom:1px solid #e9ecef;border-top-left-radius:.3rem;border-top-right-radius:.3rem}.modal-header .close,.modal-header .mailbox-attachment-close{padding:1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;flex:1 1 auto;padding:1rem}.modal-footer{display:flex;align-items:center;justify-content:flex-end;padding:1rem;border-top:1px solid #e9ecef}.modal-footer>:not(:first-child){margin-left:.25rem}.modal-footer>:not(:last-child){margin-right:.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-centered{min-height:calc(100% - (1.75rem * 2))}.modal-content{box-shadow:0 .5rem 1rem rgba(0,0,0,.5)}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg{max-width:800px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .arrow{position:absolute;display:block;width:.8rem;height:.4rem}.tooltip .arrow::before{position:absolute;content:\"\";border-color:transparent;border-style:solid}.bs-tooltip-auto[x-placement^=top],.bs-tooltip-top{padding:.4rem 0}.bs-tooltip-auto[x-placement^=top] .arrow,.bs-tooltip-top .arrow{bottom:0}.bs-tooltip-auto[x-placement^=top] .arrow::before,.bs-tooltip-top .arrow::before{top:0;border-width:.4rem .4rem 0;border-top-color:#000}.bs-tooltip-auto[x-placement^=right],.bs-tooltip-right{padding:0 .4rem}.bs-tooltip-auto[x-placement^=right] .arrow,.bs-tooltip-right .arrow{left:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=right] .arrow::before,.bs-tooltip-right .arrow::before{right:0;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.bs-tooltip-auto[x-placement^=bottom],.bs-tooltip-bottom{padding:.4rem 0}.bs-tooltip-auto[x-placement^=bottom] .arrow,.bs-tooltip-bottom .arrow{top:0}.bs-tooltip-auto[x-placement^=bottom] .arrow::before,.bs-tooltip-bottom .arrow::before{bottom:0;border-width:0 .4rem .4rem;border-bottom-color:#000}.bs-tooltip-auto[x-placement^=left],.bs-tooltip-left{padding:0 .4rem}.bs-tooltip-auto[x-placement^=left] .arrow,.bs-tooltip-left .arrow{right:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=left] .arrow::before,.bs-tooltip-left .arrow::before{left:0;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:\"Source Sans Pro\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;box-shadow:0 .25rem .5rem rgba(0,0,0,.2)}.popover .arrow{position:absolute;display:block;width:1rem;height:.5rem;margin:0 .3rem}.popover .arrow::after,.popover .arrow::before{position:absolute;display:block;content:\"\";border-color:transparent;border-style:solid}.bs-popover-auto[x-placement^=top],.bs-popover-top{margin-bottom:.5rem}.bs-popover-auto[x-placement^=top] .arrow,.bs-popover-top .arrow{bottom:calc((.5rem + 1px) * -1)}.bs-popover-auto[x-placement^=top] .arrow::after,.bs-popover-auto[x-placement^=top] .arrow::before,.bs-popover-top .arrow::after,.bs-popover-top .arrow::before{border-width:.5rem .5rem 0}.bs-popover-auto[x-placement^=top] .arrow::before,.bs-popover-top .arrow::before{bottom:0;border-top-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=top] .arrow::after,.bs-popover-top .arrow::after{bottom:1px;border-top-color:#fff}.bs-popover-auto[x-placement^=right],.bs-popover-right{margin-left:.5rem}.bs-popover-auto[x-placement^=right] .arrow,.bs-popover-right .arrow{left:calc((.5rem + 1px) * -1);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=right] .arrow::after,.bs-popover-auto[x-placement^=right] .arrow::before,.bs-popover-right .arrow::after,.bs-popover-right .arrow::before{border-width:.5rem .5rem .5rem 0}.bs-popover-auto[x-placement^=right] .arrow::before,.bs-popover-right .arrow::before{left:0;border-right-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=right] .arrow::after,.bs-popover-right .arrow::after{left:1px;border-right-color:#fff}.bs-popover-auto[x-placement^=bottom],.bs-popover-bottom{margin-top:.5rem}.bs-popover-auto[x-placement^=bottom] .arrow,.bs-popover-bottom .arrow{top:calc((.5rem + 1px) * -1)}.bs-popover-auto[x-placement^=bottom] .arrow::after,.bs-popover-auto[x-placement^=bottom] .arrow::before,.bs-popover-bottom .arrow::after,.bs-popover-bottom .arrow::before{border-width:0 .5rem .5rem .5rem}.bs-popover-auto[x-placement^=bottom] .arrow::before,.bs-popover-bottom .arrow::before{top:0;border-bottom-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=bottom] .arrow::after,.bs-popover-bottom .arrow::after{top:1px;border-bottom-color:#fff}.bs-popover-auto[x-placement^=bottom] .popover-header::before,.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:\"\";border-bottom:1px solid #f7f7f7}.bs-popover-auto[x-placement^=left],.bs-popover-left{margin-right:.5rem}.bs-popover-auto[x-placement^=left] .arrow,.bs-popover-left .arrow{right:calc((.5rem + 1px) * -1);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=left] .arrow::after,.bs-popover-auto[x-placement^=left] .arrow::before,.bs-popover-left .arrow::after,.bs-popover-left .arrow::before{border-width:.5rem 0 .5rem .5rem}.bs-popover-auto[x-placement^=left] .arrow::before,.bs-popover-left .arrow::before{right:0;border-left-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=left] .arrow::after,.bs-popover-left .arrow::after{right:1px;border-left-color:#fff}.popover-header{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;color:inherit;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:.5rem .75rem;color:#212529}.carousel{position:relative}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-item{position:relative;display:none;align-items:center;width:100%;transition:transform .6s ease;backface-visibility:hidden;perspective:1000px}@media screen and (prefers-reduced-motion:reduce){.carousel-item{transition:none}}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block}.carousel-item-next,.carousel-item-prev{position:absolute;top:0}.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{transform:translateX(0)}@supports (transform-style:preserve-3d){.carousel-item-next.carousel-item-left,.carousel-item-prev.carousel-item-right{transform:translate3d(0,0,0)}}.active.carousel-item-right,.carousel-item-next{transform:translateX(100%)}@supports (transform-style:preserve-3d){.active.carousel-item-right,.carousel-item-next{transform:translate3d(100%,0,0)}}.active.carousel-item-left,.carousel-item-prev{transform:translateX(-100%)}@supports (transform-style:preserve-3d){.active.carousel-item-left,.carousel-item-prev{transform:translate3d(-100%,0,0)}}.carousel-fade .carousel-item{opacity:0;transition-duration:.6s;transition-property:opacity}.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right,.carousel-fade .carousel-item.active{opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{opacity:0}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-prev,.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active{transform:translateX(0)}@supports (transform-style:preserve-3d){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-prev,.carousel-fade .carousel-item-next,.carousel-fade .carousel-item-prev,.carousel-fade .carousel-item.active{transform:translate3d(0,0,0)}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;display:flex;align-items:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:20px;height:20px;background:transparent no-repeat center center;background-size:100% 100%}.carousel-control-prev-icon{background-image:url(\"data:image\/svg+xml;charset=utf8,%3Csvg xmlns='http:\/\/www.w3.org\/2000\/svg' fill='%23ffffff' viewBox='0 0 8 8'%3E%3Cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'\/%3E%3C\/svg%3E\")}.carousel-control-next-icon{background-image:url(\"data:image\/svg+xml;charset=utf8,%3Csvg xmlns='http:\/\/www.w3.org\/2000\/svg' fill='%23ffffff' viewBox='0 0 8 8'%3E%3Cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'\/%3E%3C\/svg%3E\")}.carousel-indicators{position:absolute;right:0;bottom:10px;left:0;z-index:15;display:flex;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{position:relative;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;background-color:rgba(255,255,255,.5)}.carousel-indicators li::before{position:absolute;top:-10px;left:0;display:inline-block;width:100%;height:10px;content:\"\"}.carousel-indicators li::after{position:absolute;bottom:-10px;left:0;display:inline-block;width:100%;height:10px;content:\"\"}.carousel-indicators .active{background-color:#fff}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.bg-primary,.label-primary{background-color:#007bff!important}a.bg-primary:focus,a.bg-primary:hover,a.label-primary:focus,a.label-primary:hover,button.bg-primary:focus,button.bg-primary:hover,button.label-primary:focus,button.label-primary:hover{background-color:#0062cc!important}.bg-secondary{background-color:#6c757d!important}a.bg-secondary:focus,a.bg-secondary:hover,button.bg-secondary:focus,button.bg-secondary:hover{background-color:#545b62!important}.alert-success,.bg-success,.label-success{background-color:#28a745!important}a.alert-success:focus,a.alert-success:hover,a.bg-success:focus,a.bg-success:hover,a.label-success:focus,a.label-success:hover,button.alert-success:focus,button.alert-success:hover,button.bg-success:focus,button.bg-success:hover,button.label-success:focus,button.label-success:hover{background-color:#1e7e34!important}.alert-info,.bg-info,.label-info{background-color:#17a2b8!important}a.alert-info:focus,a.alert-info:hover,a.bg-info:focus,a.bg-info:hover,a.label-info:focus,a.label-info:hover,button.alert-info:focus,button.alert-info:hover,button.bg-info:focus,button.bg-info:hover,button.label-info:focus,button.label-info:hover{background-color:#117a8b!important}.alert-warning,.bg-warning,.label-warning{background-color:#ffc107!important}a.alert-warning:focus,a.alert-warning:hover,a.bg-warning:focus,a.bg-warning:hover,a.label-warning:focus,a.label-warning:hover,button.alert-warning:focus,button.alert-warning:hover,button.bg-warning:focus,button.bg-warning:hover,button.label-warning:focus,button.label-warning:hover{background-color:#d39e00!important}.alert-danger,.alert-error,.bg-danger,.label-danger{background-color:#dc3545!important}a.alert-danger:focus,a.alert-danger:hover,a.alert-error:focus,a.alert-error:hover,a.bg-danger:focus,a.bg-danger:hover,a.label-danger:focus,a.label-danger:hover,button.alert-danger:focus,button.alert-danger:hover,button.alert-error:focus,button.alert-error:hover,button.bg-danger:focus,button.bg-danger:hover,button.label-danger:focus,button.label-danger:hover{background-color:#bd2130!important}.bg-light{background-color:#f8f9fa!important}a.bg-light:focus,a.bg-light:hover,button.bg-light:focus,button.bg-light:hover{background-color:#dae0e5!important}.bg-dark{background-color:#343a40!important}a.bg-dark:focus,a.bg-dark:hover,button.bg-dark:focus,button.bg-dark:hover{background-color:#1d2124!important}.bg-white{background-color:#fff!important}.bg-transparent{background-color:transparent!important}.border{border:1px solid #dee2e6!important}.border-top{border-top:1px solid #dee2e6!important}.border-right{border-right:1px solid #dee2e6!important}.border-bottom{border-bottom:1px solid #dee2e6!important}.border-left{border-left:1px solid #dee2e6!important}.border-0{border:0!important}.border-top-0{border-top:0!important}.border-right-0{border-right:0!important}.border-bottom-0{border-bottom:0!important}.border-left-0{border-left:0!important}.border-primary{border-color:#007bff!important}.border-secondary{border-color:#6c757d!important}.border-success{border-color:#28a745!important}.border-info{border-color:#17a2b8!important}.border-warning{border-color:#ffc107!important}.border-danger{border-color:#dc3545!important}.border-light{border-color:#f8f9fa!important}.border-dark{border-color:#343a40!important}.border-white{border-color:#fff!important}.rounded{border-radius:.25rem!important}.rounded-top{border-top-left-radius:.25rem!important;border-top-right-radius:.25rem!important}.rounded-right{border-top-right-radius:.25rem!important;border-bottom-right-radius:.25rem!important}.rounded-bottom{border-bottom-right-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-left{border-top-left-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-circle{border-radius:50%!important}.rounded-0{border-radius:0!important}.clearfix::after{display:block;clear:both;content:\"\"}.d-none{display:none!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex,.info-box,.info-box-icon{display:flex!important}.d-inline-flex{display:inline-flex!important}@media (min-width:576px){.d-sm-none{display:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:flex!important}.d-sm-inline-flex{display:inline-flex!important}}@media (min-width:768px){.d-md-none{display:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:flex!important}.d-md-inline-flex{display:inline-flex!important}}@media (min-width:992px){.d-lg-none{display:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:flex!important}.d-lg-inline-flex{display:inline-flex!important}}@media (min-width:1200px){.d-xl-none{display:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:flex!important}.d-xl-inline-flex{display:inline-flex!important}}@media print{.d-print-none{display:none!important}.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:flex!important}.d-print-inline-flex{display:inline-flex!important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:\"\"}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.857143%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-fill{flex:1 1 auto!important}.flex-grow-0{flex-grow:0!important}.flex-grow-1{flex-grow:1!important}.flex-shrink-0{flex-shrink:0!important}.flex-shrink-1{flex-shrink:1!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.info-box-icon,.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center,.info-box-icon{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{align-self:stretch!important}@media (min-width:576px){.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-sm-fill{flex:1 1 auto!important}.flex-sm-grow-0{flex-grow:0!important}.flex-sm-grow-1{flex-grow:1!important}.flex-sm-shrink-0{flex-shrink:0!important}.flex-sm-shrink-1{flex-shrink:1!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{align-self:stretch!important}}@media (min-width:768px){.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-md-fill{flex:1 1 auto!important}.flex-md-grow-0{flex-grow:0!important}.flex-md-grow-1{flex-grow:1!important}.flex-md-shrink-0{flex-shrink:0!important}.flex-md-shrink-1{flex-shrink:1!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{align-self:stretch!important}}@media (min-width:992px){.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-lg-fill{flex:1 1 auto!important}.flex-lg-grow-0{flex-grow:0!important}.flex-lg-grow-1{flex-grow:1!important}.flex-lg-shrink-0{flex-shrink:0!important}.flex-lg-shrink-1{flex-shrink:1!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{align-self:stretch!important}}@media (min-width:1200px){.flex-xl-row{flex-direction:row!important}.flex-xl-column{flex-direction:column!important}.flex-xl-row-reverse{flex-direction:row-reverse!important}.flex-xl-column-reverse{flex-direction:column-reverse!important}.flex-xl-wrap{flex-wrap:wrap!important}.flex-xl-nowrap{flex-wrap:nowrap!important}.flex-xl-wrap-reverse{flex-wrap:wrap-reverse!important}.flex-xl-fill{flex:1 1 auto!important}.flex-xl-grow-0{flex-grow:0!important}.flex-xl-grow-1{flex-grow:1!important}.flex-xl-shrink-0{flex-shrink:0!important}.flex-xl-shrink-1{flex-shrink:1!important}.justify-content-xl-start{justify-content:flex-start!important}.justify-content-xl-end{justify-content:flex-end!important}.justify-content-xl-center{justify-content:center!important}.justify-content-xl-between{justify-content:space-between!important}.justify-content-xl-around{justify-content:space-around!important}.align-items-xl-start{align-items:flex-start!important}.align-items-xl-end{align-items:flex-end!important}.align-items-xl-center{align-items:center!important}.align-items-xl-baseline{align-items:baseline!important}.align-items-xl-stretch{align-items:stretch!important}.align-content-xl-start{align-content:flex-start!important}.align-content-xl-end{align-content:flex-end!important}.align-content-xl-center{align-content:center!important}.align-content-xl-between{align-content:space-between!important}.align-content-xl-around{align-content:space-around!important}.align-content-xl-stretch{align-content:stretch!important}.align-self-xl-auto{align-self:auto!important}.align-self-xl-start{align-self:flex-start!important}.align-self-xl-end{align-self:flex-end!important}.align-self-xl-center{align-self:center!important}.align-self-xl-baseline{align-self:baseline!important}.align-self-xl-stretch{align-self:stretch!important}}.float-left{float:left!important}.float-right{float:right!important}.float-none{float:none!important}@media (min-width:576px){.float-sm-left{float:left!important}.float-sm-right{float:right!important}.float-sm-none{float:none!important}}@media (min-width:768px){.float-md-left{float:left!important}.float-md-right{float:right!important}.float-md-none{float:none!important}}@media (min-width:992px){.float-lg-left{float:left!important}.float-lg-right{float:right!important}.float-lg-none{float:none!important}}@media (min-width:1200px){.float-xl-left{float:left!important}.float-xl-right{float:right!important}.float-xl-none{float:none!important}}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:sticky!important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports (position:sticky){.sticky-top{position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{box-shadow:0 .125rem .25rem rgba(0,0,0,.075)!important}.shadow{box-shadow:0 .5rem 1rem rgba(0,0,0,.15)!important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,.175)!important}.shadow-none{box-shadow:none!important}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mw-100{max-width:100%!important}.mh-100{max-height:100%!important}.m-0{margin:0!important}.mt-0,.my-0{margin-top:0!important}.mr-0,.mx-0{margin-right:0!important}.mb-0,.my-0{margin-bottom:0!important}.ml-0,.mx-0{margin-left:0!important}.m-1{margin:.25rem!important}.mt-1,.my-1{margin-top:.25rem!important}.mr-1,.mx-1{margin-right:.25rem!important}.mb-1,.my-1{margin-bottom:.25rem!important}.ml-1,.mx-1{margin-left:.25rem!important}.m-2{margin:.5rem!important}.mt-2,.my-2{margin-top:.5rem!important}.mr-2,.mx-2{margin-right:.5rem!important}.mb-2,.my-2,.progress-group{margin-bottom:.5rem!important}.ml-2,.mx-2{margin-left:.5rem!important}.m-3{margin:1rem!important}.mt-3,.my-3{margin-top:1rem!important}.mr-3,.mx-3{margin-right:1rem!important}.callout,.card,.info-box,.mb-3,.my-3,.small-box{margin-bottom:1rem!important}.ml-3,.mx-3{margin-left:1rem!important}.m-4{margin:1.5rem!important}.mt-4,.my-4{margin-top:1.5rem!important}.mr-4,.mx-4{margin-right:1.5rem!important}.mb-4,.my-4{margin-bottom:1.5rem!important}.ml-4,.mx-4{margin-left:1.5rem!important}.m-5{margin:3rem!important}.mt-5,.my-5{margin-top:3rem!important}.mr-5,.mx-5{margin-right:3rem!important}.mb-5,.my-5{margin-bottom:3rem!important}.ml-5,.mx-5{margin-left:3rem!important}.p-0{padding:0!important}.pt-0,.py-0{padding-top:0!important}.pr-0,.px-0{padding-right:0!important}.pb-0,.py-0{padding-bottom:0!important}.pl-0,.px-0{padding-left:0!important}.p-1{padding:.25rem!important}.pt-1,.py-1{padding-top:.25rem!important}.pr-1,.px-1{padding-right:.25rem!important}.pb-1,.py-1{padding-bottom:.25rem!important}.pl-1,.px-1{padding-left:.25rem!important}.p-2{padding:.5rem!important}.pt-2,.py-2{padding-top:.5rem!important}.pr-2,.px-2{padding-right:.5rem!important}.pb-2,.py-2{padding-bottom:.5rem!important}.pl-2,.px-2{padding-left:.5rem!important}.p-3{padding:1rem!important}.pt-3,.py-3{padding-top:1rem!important}.pr-3,.px-3{padding-right:1rem!important}.pb-3,.py-3{padding-bottom:1rem!important}.pl-3,.px-3{padding-left:1rem!important}.p-4{padding:1.5rem!important}.pt-4,.py-4{padding-top:1.5rem!important}.card-body.p-0 .table tbody>tr>td:last-of-type,.card-body.p-0 .table tbody>tr>th:last-of-type,.card-body.p-0 .table thead>tr>td:last-of-type,.card-body.p-0 .table thead>tr>th:last-of-type,.pr-4,.px-4{padding-right:1.5rem!important}.pb-4,.py-4{padding-bottom:1.5rem!important}.card-body.p-0 .table tbody>tr>td:first-of-type,.card-body.p-0 .table tbody>tr>th:first-of-type,.card-body.p-0 .table thead>tr>td:first-of-type,.card-body.p-0 .table thead>tr>th:first-of-type,.pl-4,.px-4{padding-left:1.5rem!important}.p-5{padding:3rem!important}.pt-5,.py-5{padding-top:3rem!important}.pr-5,.px-5{padding-right:3rem!important}.pb-5,.py-5{padding-bottom:3rem!important}.pl-5,.px-5{padding-left:3rem!important}.m-auto{margin:auto!important}.mt-auto,.my-auto{margin-top:auto!important}.mr-auto,.mx-auto{margin-right:auto!important}.mb-auto,.my-auto{margin-bottom:auto!important}.ml-auto,.mx-auto{margin-left:auto!important}@media (min-width:576px){.m-sm-0{margin:0!important}.mt-sm-0,.my-sm-0{margin-top:0!important}.mr-sm-0,.mx-sm-0{margin-right:0!important}.mb-sm-0,.my-sm-0{margin-bottom:0!important}.ml-sm-0,.mx-sm-0{margin-left:0!important}.m-sm-1{margin:.25rem!important}.mt-sm-1,.my-sm-1{margin-top:.25rem!important}.mr-sm-1,.mx-sm-1{margin-right:.25rem!important}.mb-sm-1,.my-sm-1{margin-bottom:.25rem!important}.ml-sm-1,.mx-sm-1{margin-left:.25rem!important}.m-sm-2{margin:.5rem!important}.mt-sm-2,.my-sm-2{margin-top:.5rem!important}.mr-sm-2,.mx-sm-2{margin-right:.5rem!important}.mb-sm-2,.my-sm-2{margin-bottom:.5rem!important}.ml-sm-2,.mx-sm-2{margin-left:.5rem!important}.m-sm-3{margin:1rem!important}.mt-sm-3,.my-sm-3{margin-top:1rem!important}.mr-sm-3,.mx-sm-3{margin-right:1rem!important}.mb-sm-3,.my-sm-3{margin-bottom:1rem!important}.ml-sm-3,.mx-sm-3{margin-left:1rem!important}.m-sm-4{margin:1.5rem!important}.mt-sm-4,.my-sm-4{margin-top:1.5rem!important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem!important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem!important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem!important}.m-sm-5{margin:3rem!important}.mt-sm-5,.my-sm-5{margin-top:3rem!important}.mr-sm-5,.mx-sm-5{margin-right:3rem!important}.mb-sm-5,.my-sm-5{margin-bottom:3rem!important}.ml-sm-5,.mx-sm-5{margin-left:3rem!important}.p-sm-0{padding:0!important}.pt-sm-0,.py-sm-0{padding-top:0!important}.pr-sm-0,.px-sm-0{padding-right:0!important}.pb-sm-0,.py-sm-0{padding-bottom:0!important}.pl-sm-0,.px-sm-0{padding-left:0!important}.p-sm-1{padding:.25rem!important}.pt-sm-1,.py-sm-1{padding-top:.25rem!important}.pr-sm-1,.px-sm-1{padding-right:.25rem!important}.pb-sm-1,.py-sm-1{padding-bottom:.25rem!important}.pl-sm-1,.px-sm-1{padding-left:.25rem!important}.p-sm-2{padding:.5rem!important}.pt-sm-2,.py-sm-2{padding-top:.5rem!important}.pr-sm-2,.px-sm-2{padding-right:.5rem!important}.pb-sm-2,.py-sm-2{padding-bottom:.5rem!important}.pl-sm-2,.px-sm-2{padding-left:.5rem!important}.p-sm-3{padding:1rem!important}.pt-sm-3,.py-sm-3{padding-top:1rem!important}.pr-sm-3,.px-sm-3{padding-right:1rem!important}.pb-sm-3,.py-sm-3{padding-bottom:1rem!important}.pl-sm-3,.px-sm-3{padding-left:1rem!important}.p-sm-4{padding:1.5rem!important}.pt-sm-4,.py-sm-4{padding-top:1.5rem!important}.pr-sm-4,.px-sm-4{padding-right:1.5rem!important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem!important}.pl-sm-4,.px-sm-4{padding-left:1.5rem!important}.p-sm-5{padding:3rem!important}.pt-sm-5,.py-sm-5{padding-top:3rem!important}.pr-sm-5,.px-sm-5{padding-right:3rem!important}.pb-sm-5,.py-sm-5{padding-bottom:3rem!important}.pl-sm-5,.px-sm-5{padding-left:3rem!important}.m-sm-auto{margin:auto!important}.mt-sm-auto,.my-sm-auto{margin-top:auto!important}.mr-sm-auto,.mx-sm-auto{margin-right:auto!important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto!important}.ml-sm-auto,.mx-sm-auto{margin-left:auto!important}}@media (min-width:768px){.m-md-0{margin:0!important}.mt-md-0,.my-md-0{margin-top:0!important}.mr-md-0,.mx-md-0{margin-right:0!important}.mb-md-0,.my-md-0{margin-bottom:0!important}.ml-md-0,.mx-md-0{margin-left:0!important}.m-md-1{margin:.25rem!important}.mt-md-1,.my-md-1{margin-top:.25rem!important}.mr-md-1,.mx-md-1{margin-right:.25rem!important}.mb-md-1,.my-md-1{margin-bottom:.25rem!important}.ml-md-1,.mx-md-1{margin-left:.25rem!important}.m-md-2{margin:.5rem!important}.mt-md-2,.my-md-2{margin-top:.5rem!important}.mr-md-2,.mx-md-2{margin-right:.5rem!important}.mb-md-2,.my-md-2{margin-bottom:.5rem!important}.ml-md-2,.mx-md-2{margin-left:.5rem!important}.m-md-3{margin:1rem!important}.mt-md-3,.my-md-3{margin-top:1rem!important}.mr-md-3,.mx-md-3{margin-right:1rem!important}.mb-md-3,.my-md-3{margin-bottom:1rem!important}.ml-md-3,.mx-md-3{margin-left:1rem!important}.m-md-4{margin:1.5rem!important}.mt-md-4,.my-md-4{margin-top:1.5rem!important}.mr-md-4,.mx-md-4{margin-right:1.5rem!important}.mb-md-4,.my-md-4{margin-bottom:1.5rem!important}.ml-md-4,.mx-md-4{margin-left:1.5rem!important}.m-md-5{margin:3rem!important}.mt-md-5,.my-md-5{margin-top:3rem!important}.mr-md-5,.mx-md-5{margin-right:3rem!important}.mb-md-5,.my-md-5{margin-bottom:3rem!important}.ml-md-5,.mx-md-5{margin-left:3rem!important}.p-md-0{padding:0!important}.pt-md-0,.py-md-0{padding-top:0!important}.pr-md-0,.px-md-0{padding-right:0!important}.pb-md-0,.py-md-0{padding-bottom:0!important}.pl-md-0,.px-md-0{padding-left:0!important}.p-md-1{padding:.25rem!important}.pt-md-1,.py-md-1{padding-top:.25rem!important}.pr-md-1,.px-md-1{padding-right:.25rem!important}.pb-md-1,.py-md-1{padding-bottom:.25rem!important}.pl-md-1,.px-md-1{padding-left:.25rem!important}.p-md-2{padding:.5rem!important}.pt-md-2,.py-md-2{padding-top:.5rem!important}.pr-md-2,.px-md-2{padding-right:.5rem!important}.pb-md-2,.py-md-2{padding-bottom:.5rem!important}.pl-md-2,.px-md-2{padding-left:.5rem!important}.p-md-3{padding:1rem!important}.pt-md-3,.py-md-3{padding-top:1rem!important}.pr-md-3,.px-md-3{padding-right:1rem!important}.pb-md-3,.py-md-3{padding-bottom:1rem!important}.pl-md-3,.px-md-3{padding-left:1rem!important}.p-md-4{padding:1.5rem!important}.pt-md-4,.py-md-4{padding-top:1.5rem!important}.pr-md-4,.px-md-4{padding-right:1.5rem!important}.pb-md-4,.py-md-4{padding-bottom:1.5rem!important}.pl-md-4,.px-md-4{padding-left:1.5rem!important}.p-md-5{padding:3rem!important}.pt-md-5,.py-md-5{padding-top:3rem!important}.pr-md-5,.px-md-5{padding-right:3rem!important}.pb-md-5,.py-md-5{padding-bottom:3rem!important}.pl-md-5,.px-md-5{padding-left:3rem!important}.m-md-auto{margin:auto!important}.mt-md-auto,.my-md-auto{margin-top:auto!important}.mr-md-auto,.mx-md-auto{margin-right:auto!important}.mb-md-auto,.my-md-auto{margin-bottom:auto!important}.ml-md-auto,.mx-md-auto{margin-left:auto!important}}@media (min-width:992px){.m-lg-0{margin:0!important}.mt-lg-0,.my-lg-0{margin-top:0!important}.mr-lg-0,.mx-lg-0{margin-right:0!important}.mb-lg-0,.my-lg-0{margin-bottom:0!important}.ml-lg-0,.mx-lg-0{margin-left:0!important}.m-lg-1{margin:.25rem!important}.mt-lg-1,.my-lg-1{margin-top:.25rem!important}.mr-lg-1,.mx-lg-1{margin-right:.25rem!important}.mb-lg-1,.my-lg-1{margin-bottom:.25rem!important}.ml-lg-1,.mx-lg-1{margin-left:.25rem!important}.m-lg-2{margin:.5rem!important}.mt-lg-2,.my-lg-2{margin-top:.5rem!important}.mr-lg-2,.mx-lg-2{margin-right:.5rem!important}.mb-lg-2,.my-lg-2{margin-bottom:.5rem!important}.ml-lg-2,.mx-lg-2{margin-left:.5rem!important}.m-lg-3{margin:1rem!important}.mt-lg-3,.my-lg-3{margin-top:1rem!important}.mr-lg-3,.mx-lg-3{margin-right:1rem!important}.mb-lg-3,.my-lg-3{margin-bottom:1rem!important}.ml-lg-3,.mx-lg-3{margin-left:1rem!important}.m-lg-4{margin:1.5rem!important}.mt-lg-4,.my-lg-4{margin-top:1.5rem!important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem!important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem!important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem!important}.m-lg-5{margin:3rem!important}.mt-lg-5,.my-lg-5{margin-top:3rem!important}.mr-lg-5,.mx-lg-5{margin-right:3rem!important}.mb-lg-5,.my-lg-5{margin-bottom:3rem!important}.ml-lg-5,.mx-lg-5{margin-left:3rem!important}.p-lg-0{padding:0!important}.pt-lg-0,.py-lg-0{padding-top:0!important}.pr-lg-0,.px-lg-0{padding-right:0!important}.pb-lg-0,.py-lg-0{padding-bottom:0!important}.pl-lg-0,.px-lg-0{padding-left:0!important}.p-lg-1{padding:.25rem!important}.pt-lg-1,.py-lg-1{padding-top:.25rem!important}.pr-lg-1,.px-lg-1{padding-right:.25rem!important}.pb-lg-1,.py-lg-1{padding-bottom:.25rem!important}.pl-lg-1,.px-lg-1{padding-left:.25rem!important}.p-lg-2{padding:.5rem!important}.pt-lg-2,.py-lg-2{padding-top:.5rem!important}.pr-lg-2,.px-lg-2{padding-right:.5rem!important}.pb-lg-2,.py-lg-2{padding-bottom:.5rem!important}.pl-lg-2,.px-lg-2{padding-left:.5rem!important}.p-lg-3{padding:1rem!important}.pt-lg-3,.py-lg-3{padding-top:1rem!important}.pr-lg-3,.px-lg-3{padding-right:1rem!important}.pb-lg-3,.py-lg-3{padding-bottom:1rem!important}.pl-lg-3,.px-lg-3{padding-left:1rem!important}.p-lg-4{padding:1.5rem!important}.pt-lg-4,.py-lg-4{padding-top:1.5rem!important}.pr-lg-4,.px-lg-4{padding-right:1.5rem!important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem!important}.pl-lg-4,.px-lg-4{padding-left:1.5rem!important}.p-lg-5{padding:3rem!important}.pt-lg-5,.py-lg-5{padding-top:3rem!important}.pr-lg-5,.px-lg-5{padding-right:3rem!important}.pb-lg-5,.py-lg-5{padding-bottom:3rem!important}.pl-lg-5,.px-lg-5{padding-left:3rem!important}.m-lg-auto{margin:auto!important}.mt-lg-auto,.my-lg-auto{margin-top:auto!important}.mr-lg-auto,.mx-lg-auto{margin-right:auto!important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto!important}.ml-lg-auto,.mx-lg-auto{margin-left:auto!important}}@media (min-width:1200px){.m-xl-0{margin:0!important}.mt-xl-0,.my-xl-0{margin-top:0!important}.mr-xl-0,.mx-xl-0{margin-right:0!important}.mb-xl-0,.my-xl-0{margin-bottom:0!important}.ml-xl-0,.mx-xl-0{margin-left:0!important}.m-xl-1{margin:.25rem!important}.mt-xl-1,.my-xl-1{margin-top:.25rem!important}.mr-xl-1,.mx-xl-1{margin-right:.25rem!important}.mb-xl-1,.my-xl-1{margin-bottom:.25rem!important}.ml-xl-1,.mx-xl-1{margin-left:.25rem!important}.m-xl-2{margin:.5rem!important}.mt-xl-2,.my-xl-2{margin-top:.5rem!important}.mr-xl-2,.mx-xl-2{margin-right:.5rem!important}.mb-xl-2,.my-xl-2{margin-bottom:.5rem!important}.ml-xl-2,.mx-xl-2{margin-left:.5rem!important}.m-xl-3{margin:1rem!important}.mt-xl-3,.my-xl-3{margin-top:1rem!important}.mr-xl-3,.mx-xl-3{margin-right:1rem!important}.mb-xl-3,.my-xl-3{margin-bottom:1rem!important}.ml-xl-3,.mx-xl-3{margin-left:1rem!important}.m-xl-4{margin:1.5rem!important}.mt-xl-4,.my-xl-4{margin-top:1.5rem!important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem!important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem!important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem!important}.m-xl-5{margin:3rem!important}.mt-xl-5,.my-xl-5{margin-top:3rem!important}.mr-xl-5,.mx-xl-5{margin-right:3rem!important}.mb-xl-5,.my-xl-5{margin-bottom:3rem!important}.ml-xl-5,.mx-xl-5{margin-left:3rem!important}.p-xl-0{padding:0!important}.pt-xl-0,.py-xl-0{padding-top:0!important}.pr-xl-0,.px-xl-0{padding-right:0!important}.pb-xl-0,.py-xl-0{padding-bottom:0!important}.pl-xl-0,.px-xl-0{padding-left:0!important}.p-xl-1{padding:.25rem!important}.pt-xl-1,.py-xl-1{padding-top:.25rem!important}.pr-xl-1,.px-xl-1{padding-right:.25rem!important}.pb-xl-1,.py-xl-1{padding-bottom:.25rem!important}.pl-xl-1,.px-xl-1{padding-left:.25rem!important}.p-xl-2{padding:.5rem!important}.pt-xl-2,.py-xl-2{padding-top:.5rem!important}.pr-xl-2,.px-xl-2{padding-right:.5rem!important}.pb-xl-2,.py-xl-2{padding-bottom:.5rem!important}.pl-xl-2,.px-xl-2{padding-left:.5rem!important}.p-xl-3{padding:1rem!important}.pt-xl-3,.py-xl-3{padding-top:1rem!important}.pr-xl-3,.px-xl-3{padding-right:1rem!important}.pb-xl-3,.py-xl-3{padding-bottom:1rem!important}.pl-xl-3,.px-xl-3{padding-left:1rem!important}.p-xl-4{padding:1.5rem!important}.pt-xl-4,.py-xl-4{padding-top:1.5rem!important}.pr-xl-4,.px-xl-4{padding-right:1.5rem!important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem!important}.pl-xl-4,.px-xl-4{padding-left:1.5rem!important}.p-xl-5{padding:3rem!important}.pt-xl-5,.py-xl-5{padding-top:3rem!important}.pr-xl-5,.px-xl-5{padding-right:3rem!important}.pb-xl-5,.py-xl-5{padding-bottom:3rem!important}.pl-xl-5,.px-xl-5{padding-left:3rem!important}.m-xl-auto{margin:auto!important}.mt-xl-auto,.my-xl-auto{margin-top:auto!important}.mr-xl-auto,.mx-xl-auto{margin-right:auto!important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto!important}.ml-xl-auto,.mx-xl-auto{margin-left:auto!important}}.text-monospace{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}.text-justify{text-align:justify!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}@media (min-width:576px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-light{font-weight:300!important}.font-weight-normal{font-weight:400!important}.font-weight-bold{font-weight:700!important}.font-italic{font-style:italic!important}.text-white{color:#fff!important}.text-primary{color:#007bff!important}a.text-primary:focus,a.text-primary:hover{color:#0062cc!important}.text-secondary{color:#6c757d!important}a.text-secondary:focus,a.text-secondary:hover{color:#545b62!important}.text-success{color:#28a745!important}a.text-success:focus,a.text-success:hover{color:#1e7e34!important}.text-info{color:#17a2b8!important}a.text-info:focus,a.text-info:hover{color:#117a8b!important}.text-warning{color:#ffc107!important}a.text-warning:focus,a.text-warning:hover{color:#d39e00!important}.text-danger{color:#dc3545!important}a.text-danger:focus,a.text-danger:hover{color:#bd2130!important}.text-light{color:#f8f9fa!important}a.text-light:focus,a.text-light:hover{color:#dae0e5!important}.text-dark{color:#343a40!important}a.text-dark:focus,a.text-dark:hover{color:#1d2124!important}.text-body{color:#212529!important}.text-muted{color:#6c757d!important}.text-black-50{color:rgba(0,0,0,.5)!important}.text-white-50{color:rgba(255,255,255,.5)!important}.text-hide{font:0\/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.visible{visibility:visible!important}.invisible{visibility:hidden!important}@media print{*,::after,::before{text-shadow:none!important;box-shadow:none!important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px!important}.container{min-width:992px!important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #dee2e6!important}}.wrapper,body,html{min-height:100%;overflow-x:hidden}.wrapper{position:relative}.layout-boxed .wrapper{box-shadow:0 0 10px rgba(0,0,0,.3)}.layout-boxed .wrapper,.layout-boxed .wrapper:before{margin:0 auto;max-width:1250px}@media (min-width:768px){.content-wrapper,.main-footer,.main-header{transition:margin-left .3s ease-in-out;margin-left:250px;z-index:3000}}@media screen and (min-width:768px) and (prefers-reduced-motion:reduce){.content-wrapper,.main-footer,.main-header{transition:none}}@media (min-width:768px){.sidebar-collapse .content-wrapper,.sidebar-collapse .main-footer,.sidebar-collapse .main-header{margin-left:0}}@media (max-width:991.98px){.content-wrapper,.content-wrapper:before,.main-footer,.main-footer:before,.main-header,.main-header:before{margin-left:0}}.content-wrapper{background:#f4f6f9}.content-wrapper>.content{padding:0 .5rem}.main-sidebar{position:fixed;top:0;left:0;bottom:0}.main-sidebar,.main-sidebar:before{transition:margin-left .3s ease-in-out,width .3s ease-in-out;width:250px}@media screen and (prefers-reduced-motion:reduce){.main-sidebar,.main-sidebar:before{transition:none}}.sidebar-collapse .main-sidebar,.sidebar-collapse .main-sidebar:before{margin-left:-250px}@media (max-width:991.98px){.main-sidebar,.main-sidebar:before{box-shadow:none!important;margin-left:-250px}.sidebar-open .main-sidebar,.sidebar-open .main-sidebar:before{margin-left:0}}.main-footer{padding:15px;color:#555;border-top:1px solid #dee2e6;background:#fff}.content-header{padding:15px .5rem}.content-header h1{font-size:1.8rem;margin:0}.content-header .breadcrumb{margin-bottom:0;padding:0;background:0 0;line-height:1.8rem}.hold-transition .content-wrapper,.hold-transition .main-footer,.hold-transition .main-header{transition:none!important}.main-header{z-index:1000}.main-header .navbar-nav .nav-item{margin:0}.main-header .nav-link{position:relative;height:2.5rem}.main-header .navbar-nav[class*=\"-right\"] .dropdown-menu{margin-top:-3px;right:0;left:auto}@media (max-width:575.98px){.main-header .navbar-nav[class*=\"-right\"] .dropdown-menu{left:0;right:auto}}.navbar-img{height:1.25rem;width:auto}.navbar-badge{position:absolute;top:9px;right:5px;font-size:.6rem;font-weight:300;padding:2px 4px}.btn-navbar{border-left-width:0;background-color:transparent}.form-control-navbar{border-right-width:0}.form-control-navbar+.input-group-append{margin-left:0}.btn-navbar,.form-control-navbar{transition:none}.navbar-dark .btn-navbar,.navbar-dark .form-control-navbar{background-color:rgba(255,255,255,.2);border:0}.navbar-dark .form-control-navbar+.input-group-append>.btn-navbar,.navbar-dark .form-control-navbar::placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar :-moz-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar ::-moz-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar :-ms-input-placeholder{color:rgba(255,255,255,.6)}.navbar-dark .form-control-navbar:focus,.navbar-dark .form-control-navbar:focus+.input-group-append .btn-navbar{border:0!important;background-color:rgba(255,255,255,.6);color:#343a40}.navbar-light .btn-navbar,.navbar-light .form-control-navbar{background-color:#f2f4f6;border:0}.navbar-light .form-control-navbar+.input-group-append>.btn-navbar,.navbar-light .form-control-navbar::placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar :-moz-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar ::-moz-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar :-ms-input-placeholder{color:rgba(0,0,0,.6)}.navbar-light .form-control-navbar:focus,.navbar-light .form-control-navbar:focus+.input-group-append .btn-navbar{border:0!important;background-color:#e9ecef;color:#343a40}.brand-link{padding:.8125rem .5rem;font-size:1.25rem;display:block;line-height:1.5;white-space:nowrap}.brand-link:hover{color:#fff;text-decoration:none}[class*=sidebar-dark] .brand-link{color:rgba(255,255,255,.8);border-bottom:1px solid #4b545c}[class*=sidebar-light] .brand-link{color:rgba(0,0,0,.8);border-bottom:1px solid #dee2e6}.brand-image{float:left;line-height:.8;max-height:34px;width:auto;margin-left:.8rem;margin-right:.5rem;margin-top:-3px}.main-sidebar{z-index:1100;height:100vh;overflow-y:hidden}.sidebar{padding-bottom:0;padding-top:0;padding-left:.5rem;padding-right:.5rem;overflow-y:auto;height:calc(100% - 4rem)}.user-panel{position:relative}[class*=sidebar-dark] .user-panel{border-bottom:1px solid #4f5962}[class*=sidebar-light] .user-panel{border-bottom:1px solid #dee2e6}.user-panel,.user-panel .info{overflow:hidden;white-space:nowrap}.user-panel .image{padding-left:.8rem;display:inline-block}.user-panel img{width:2.1rem;height:auto}.user-panel .info{display:inline-block;padding:5px 5px 5px 10px}.user-panel .dropdown-menu,.user-panel .status{font-size:.875rem}.nav-sidebar .nav-item>.nav-link{margin-bottom:.2rem}.nav-sidebar .nav-item>.nav-link .right{transition:transform ease-in-out .3s}@media screen and (prefers-reduced-motion:reduce){.nav-sidebar .nav-item>.nav-link .right{transition:none}}.nav-sidebar .nav-link>p>.right{position:absolute;right:1rem;top:12px}.nav-sidebar .menu-open>.nav-treeview{display:block}.nav-sidebar .menu-open>.nav-link .right{-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.nav-sidebar>.nav-item{margin-bottom:0}.nav-sidebar>.nav-item .nav-icon{text-align:center;width:1.6rem;font-size:1.2rem;margin-right:.2rem}.nav-sidebar>.nav-item .float-right{margin-top:3px}.nav-sidebar .nav-treeview{display:none;list-style:none;padding:0}.nav-sidebar .nav-treeview>.nav-item>.nav-link>.nav-icon{width:1.6rem}.nav-sidebar .nav-header{font-size:.9rem;padding:.5rem}.nav-sidebar .nav-header:not(:first-of-type){padding:1.7rem 1rem .5rem 1rem}.nav-sidebar .nav-link p{display:inline-block;margin:0}#sidebar-overlay{position:fixed;top:0;left:0;right:0;bottom:0;display:none;background-color:rgba(0,0,0,.1);z-index:1099}@media (max-width:991.98px){.sidebar-open #sidebar-overlay{display:block}}.sidebar-dark-primary{background-color:#343a40}.sidebar-dark-primary .user-panel a:hover{color:#fff}.sidebar-dark-primary .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-primary .user-panel .status:active,.sidebar-dark-primary .user-panel .status:focus,.sidebar-dark-primary .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-primary .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-primary .user-panel .dropdown-item{color:#212529}.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-primary .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-primary .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#007bff}.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-primary .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-primary .sidebar a{color:#c2c7d0}.sidebar-dark-primary .sidebar a:hover{text-decoration:none}.sidebar-dark-primary .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-primary .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-primary .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-primary .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-primary{background-color:#fff}.sidebar-light-primary .user-panel a:hover{color:#212529}.sidebar-light-primary .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-primary .user-panel .status:active,.sidebar-light-primary .user-panel .status:focus,.sidebar-light-primary .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-primary .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-primary .user-panel .dropdown-item{color:#212529}.sidebar-light-primary .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-primary .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-primary .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-primary .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-primary .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#007bff}.sidebar-light-primary .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-primary .nav-header{color:#292d32;background:inherit}.sidebar-light-primary .sidebar a{color:#343a40}.sidebar-light-primary .sidebar a:hover{text-decoration:none}.sidebar-light-primary .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-primary .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-primary .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-primary .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-secondary{background-color:#343a40}.sidebar-dark-secondary .user-panel a:hover{color:#fff}.sidebar-dark-secondary .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-secondary .user-panel .status:active,.sidebar-dark-secondary .user-panel .status:focus,.sidebar-dark-secondary .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-secondary .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-secondary .user-panel .dropdown-item{color:#212529}.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-secondary .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-secondary .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#6c757d}.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-secondary .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-secondary .sidebar a{color:#c2c7d0}.sidebar-dark-secondary .sidebar a:hover{text-decoration:none}.sidebar-dark-secondary .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-secondary .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-secondary .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-secondary .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-secondary{background-color:#fff}.sidebar-light-secondary .user-panel a:hover{color:#212529}.sidebar-light-secondary .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-secondary .user-panel .status:active,.sidebar-light-secondary .user-panel .status:focus,.sidebar-light-secondary .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-secondary .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-secondary .user-panel .dropdown-item{color:#212529}.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-secondary .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-secondary .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#6c757d}.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-secondary .nav-header{color:#292d32;background:inherit}.sidebar-light-secondary .sidebar a{color:#343a40}.sidebar-light-secondary .sidebar a:hover{text-decoration:none}.sidebar-light-secondary .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-secondary .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-secondary .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-secondary .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-success{background-color:#343a40}.sidebar-dark-success .user-panel a:hover{color:#fff}.sidebar-dark-success .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-success .user-panel .status:active,.sidebar-dark-success .user-panel .status:focus,.sidebar-dark-success .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-success .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-success .user-panel .dropdown-item{color:#212529}.sidebar-dark-success .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-success .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-success .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-success .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-success .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#28a745}.sidebar-dark-success .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-success .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-success .sidebar a{color:#c2c7d0}.sidebar-dark-success .sidebar a:hover{text-decoration:none}.sidebar-dark-success .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-success .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-success .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-success .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-success{background-color:#fff}.sidebar-light-success .user-panel a:hover{color:#212529}.sidebar-light-success .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-success .user-panel .status:active,.sidebar-light-success .user-panel .status:focus,.sidebar-light-success .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-success .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-success .user-panel .dropdown-item{color:#212529}.sidebar-light-success .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-success .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-success .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-success .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-success .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#28a745}.sidebar-light-success .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-success .nav-header{color:#292d32;background:inherit}.sidebar-light-success .sidebar a{color:#343a40}.sidebar-light-success .sidebar a:hover{text-decoration:none}.sidebar-light-success .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-success .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-success .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-success .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-info{background-color:#343a40}.sidebar-dark-info .user-panel a:hover{color:#fff}.sidebar-dark-info .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-info .user-panel .status:active,.sidebar-dark-info .user-panel .status:focus,.sidebar-dark-info .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-info .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-info .user-panel .dropdown-item{color:#212529}.sidebar-dark-info .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-info .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-info .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-info .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-info .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#17a2b8}.sidebar-dark-info .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-info .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-info .sidebar a{color:#c2c7d0}.sidebar-dark-info .sidebar a:hover{text-decoration:none}.sidebar-dark-info .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-info .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-info .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-info .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-info{background-color:#fff}.sidebar-light-info .user-panel a:hover{color:#212529}.sidebar-light-info .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-info .user-panel .status:active,.sidebar-light-info .user-panel .status:focus,.sidebar-light-info .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-info .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-info .user-panel .dropdown-item{color:#212529}.sidebar-light-info .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-info .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-info .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-info .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-info .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#17a2b8}.sidebar-light-info .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-info .nav-header{color:#292d32;background:inherit}.sidebar-light-info .sidebar a{color:#343a40}.sidebar-light-info .sidebar a:hover{text-decoration:none}.sidebar-light-info .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-info .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-info .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-info .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-warning{background-color:#343a40}.sidebar-dark-warning .user-panel a:hover{color:#fff}.sidebar-dark-warning .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-warning .user-panel .status:active,.sidebar-dark-warning .user-panel .status:focus,.sidebar-dark-warning .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-warning .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-warning .user-panel .dropdown-item{color:#212529}.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-warning .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-warning .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#ffc107}.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-warning .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-warning .sidebar a{color:#c2c7d0}.sidebar-dark-warning .sidebar a:hover{text-decoration:none}.sidebar-dark-warning .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-warning .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-warning .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-warning .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-warning{background-color:#fff}.sidebar-light-warning .user-panel a:hover{color:#212529}.sidebar-light-warning .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-warning .user-panel .status:active,.sidebar-light-warning .user-panel .status:focus,.sidebar-light-warning .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-warning .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-warning .user-panel .dropdown-item{color:#212529}.sidebar-light-warning .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-warning .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-warning .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-warning .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-warning .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#ffc107}.sidebar-light-warning .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-warning .nav-header{color:#292d32;background:inherit}.sidebar-light-warning .sidebar a{color:#343a40}.sidebar-light-warning .sidebar a:hover{text-decoration:none}.sidebar-light-warning .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-warning .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-warning .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-warning .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-danger{background-color:#343a40}.sidebar-dark-danger .user-panel a:hover{color:#fff}.sidebar-dark-danger .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-danger .user-panel .status:active,.sidebar-dark-danger .user-panel .status:focus,.sidebar-dark-danger .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-danger .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-danger .user-panel .dropdown-item{color:#212529}.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-danger .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-danger .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#dc3545}.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-danger .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-danger .sidebar a{color:#c2c7d0}.sidebar-dark-danger .sidebar a:hover{text-decoration:none}.sidebar-dark-danger .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-danger .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-danger .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-danger .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-danger{background-color:#fff}.sidebar-light-danger .user-panel a:hover{color:#212529}.sidebar-light-danger .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-danger .user-panel .status:active,.sidebar-light-danger .user-panel .status:focus,.sidebar-light-danger .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-danger .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-danger .user-panel .dropdown-item{color:#212529}.sidebar-light-danger .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-danger .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-danger .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-danger .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-danger .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#dc3545}.sidebar-light-danger .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-danger .nav-header{color:#292d32;background:inherit}.sidebar-light-danger .sidebar a{color:#343a40}.sidebar-light-danger .sidebar a:hover{text-decoration:none}.sidebar-light-danger .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-danger .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-danger .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-danger .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-light{background-color:#343a40}.sidebar-dark-light .user-panel a:hover{color:#fff}.sidebar-dark-light .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-light .user-panel .status:active,.sidebar-dark-light .user-panel .status:focus,.sidebar-dark-light .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-light .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-light .user-panel .dropdown-item{color:#212529}.sidebar-dark-light .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-light .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-light .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-light .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-light .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#f8f9fa}.sidebar-dark-light .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-light .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-light .sidebar a{color:#c2c7d0}.sidebar-dark-light .sidebar a:hover{text-decoration:none}.sidebar-dark-light .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-light .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-light .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-light .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-light{background-color:#fff}.sidebar-light-light .user-panel a:hover{color:#212529}.sidebar-light-light .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-light .user-panel .status:active,.sidebar-light-light .user-panel .status:focus,.sidebar-light-light .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-light .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-light .user-panel .dropdown-item{color:#212529}.sidebar-light-light .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-light .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-light .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-light .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-light .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#f8f9fa}.sidebar-light-light .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-light .nav-header{color:#292d32;background:inherit}.sidebar-light-light .sidebar a{color:#343a40}.sidebar-light-light .sidebar a:hover{text-decoration:none}.sidebar-light-light .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-light .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-light .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-light .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}.sidebar-dark-dark{background-color:#343a40}.sidebar-dark-dark .user-panel a:hover{color:#fff}.sidebar-dark-dark .user-panel .status{color:#c2c7d0;background:rgba(255,255,255,.1)}.sidebar-dark-dark .user-panel .status:active,.sidebar-dark-dark .user-panel .status:focus,.sidebar-dark-dark .user-panel .status:hover{color:#fff;background:rgba(247,247,247,.1)}.sidebar-dark-dark .user-panel .dropdown-menu{border-color:rgba(242,242,242,.1);box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-dark-dark .user-panel .dropdown-item{color:#212529}.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link:active,.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link:focus{color:#c2c7d0}.sidebar-dark-dark .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-dark-dark .nav-sidebar>.nav-item:hover>.nav-link{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#343a40}.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-dark-dark .nav-header{color:#d0d4db;background:inherit}.sidebar-dark-dark .sidebar a{color:#c2c7d0}.sidebar-dark-dark .sidebar a:hover{text-decoration:none}.sidebar-dark-dark .nav-treeview>.nav-item>.nav-link{color:#c2c7d0}.sidebar-dark-dark .nav-treeview>.nav-item>.nav-link:hover{color:#fff;background-color:rgba(255,255,255,.1)}.sidebar-dark-dark .nav-treeview>.nav-item>.nav-link.active,.sidebar-dark-dark .nav-treeview>.nav-item>.nav-link.active:hover{color:#343a40;background-color:rgba(255,255,255,.9)}.sidebar-light-dark{background-color:#fff}.sidebar-light-dark .user-panel a:hover{color:#212529}.sidebar-light-dark .user-panel .status{color:#343a40;background:#f4f4f5}.sidebar-light-dark .user-panel .status:active,.sidebar-light-dark .user-panel .status:focus,.sidebar-light-dark .user-panel .status:hover{color:#212529;background:#ececed}.sidebar-light-dark .user-panel .dropdown-menu{border-color:#e7e7e8;box-shadow:0 2px 4px rgba(0,0,0,.4)}.sidebar-light-dark .user-panel .dropdown-item{color:#212529}.sidebar-light-dark .nav-sidebar>.nav-item>.nav-link:active,.sidebar-light-dark .nav-sidebar>.nav-item>.nav-link:focus{color:#343a40}.sidebar-light-dark .nav-sidebar>.nav-item.menu-open>.nav-link,.sidebar-light-dark .nav-sidebar>.nav-item:hover>.nav-link{color:#212529;background-color:#f4f4f5}.sidebar-light-dark .nav-sidebar>.nav-item>.nav-link.active{color:#fff;background-color:#343a40}.sidebar-light-dark .nav-sidebar>.nav-item>.nav-treeview{background:0 0}.sidebar-light-dark .nav-header{color:#292d32;background:inherit}.sidebar-light-dark .sidebar a{color:#343a40}.sidebar-light-dark .sidebar a:hover{text-decoration:none}.sidebar-light-dark .nav-treeview>.nav-item>.nav-link{color:#777}.sidebar-light-dark .nav-treeview>.nav-item>.nav-link.active,.sidebar-light-dark .nav-treeview>.nav-item>.nav-link.active:hover{color:#212529;background-color:#f4f4f5}.sidebar-light-dark .nav-treeview>.nav-item>.nav-link:hover{background-color:#f4f4f5}@media (min-width:992px){.sidebar-mini .nav-sidebar,.sidebar-mini .nav-sidebar .nav-link,.sidebar-mini .nav-sidebar>.nav-header{white-space:nowrap;overflow:hidden}.sidebar-mini.sidebar-collapse .d-hidden-mini{display:none}.sidebar-mini.sidebar-collapse .content-wrapper,.sidebar-mini.sidebar-collapse .main-footer,.sidebar-mini.sidebar-collapse .main-header{margin-left:4.6rem!important}.sidebar-mini.sidebar-collapse .nav-sidebar .nav-header{display:none}.sidebar-mini.sidebar-collapse .brand-text,.sidebar-mini.sidebar-collapse .nav-sidebar .nav-link p,.sidebar-mini.sidebar-collapse .sidebar .user-panel>.info{opacity:0;margin-left:-10px}.sidebar-mini.sidebar-collapse .main-sidebar,.sidebar-mini.sidebar-collapse .main-sidebar:before{margin-left:0;width:4.6rem}.sidebar-mini.sidebar-collapse .main-sidebar .user-panel .image{float:none}.sidebar-mini.sidebar-collapse .main-sidebar:hover{width:250px}.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel{text-align:left}.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel .image{float:left}.sidebar-mini.sidebar-collapse .main-sidebar:hover .brand-text,.sidebar-mini.sidebar-collapse .main-sidebar:hover .nav-sidebar .nav-link p,.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel>.info{opacity:1;margin-left:0;display:inline-block}.sidebar-mini.sidebar-collapse .main-sidebar:hover .brand-image{margin-right:.5rem}.sidebar-mini.sidebar-collapse .main-sidebar:hover .sidebar-form,.sidebar-mini.sidebar-collapse .main-sidebar:hover .user-panel>.info{display:block!important;-webkit-transform:translateZ(0)}.sidebar-mini.sidebar-collapse .main-sidebar:hover .nav-sidebar>.nav-item>.nav-link>span{display:inline-block!important}.sidebar-mini.sidebar-collapse .visible-sidebar-mini{display:block!important}}.nav-sidebar{position:relative}.nav-sidebar:hover{overflow:visible}.nav-sidebar>.nav-header,.sidebar-form{overflow:hidden;text-overflow:clip}.nav-sidebar .nav-item>.nav-link{position:relative}.nav-sidebar .nav-item>.nav-link>.float-right{position:absolute;right:10px;top:50%;margin-top:-7px}.main-sidebar .brand-text,.sidebar .nav-link p,.sidebar .user-panel .info{transition:margin-left .3s linear,opacity .5s ease}@media screen and (prefers-reduced-motion:reduce){.main-sidebar .brand-text,.sidebar .nav-link p,.sidebar .user-panel .info{transition:none}}.control-sidebar{position:absolute;top:2.5rem;z-index:830}.control-sidebar,.control-sidebar:before{width:250px;right:-250px;bottom:0;transition:right .3s ease-in-out}@media screen and (prefers-reduced-motion:reduce){.control-sidebar,.control-sidebar:before{transition:none}}.control-sidebar:before{top:0;display:block;position:fixed;content:\" \";z-index:-1}@media (min-width:768px){.control-sidebar-open .control-sidebar,.control-sidebar-open .control-sidebar:before{right:0}.control-sidebar-open .content-wrapper,.control-sidebar-open .main-footer{margin-right:250px}}@media (max-width:991.98px){.control-sidebar-open .control-sidebar,.control-sidebar-open .control-sidebar:before{right:0}}.control-sidebar-slide-open .control-sidebar,.control-sidebar-slide-open .control-sidebar:before{right:0}.control-sidebar-dark,.control-sidebar-dark .nav-link,.control-sidebar-dark a{color:#c2c7d0}.control-sidebar-dark,.control-sidebar-dark:before{background:#343a40}.control-sidebar-dark a:hover{color:#fff}.control-sidebar-dark h1,.control-sidebar-dark h2,.control-sidebar-dark h3,.control-sidebar-dark h4,.control-sidebar-dark h5,.control-sidebar-dark h6,.control-sidebar-dark label{color:#fff}.control-sidebar-dark .nav-tabs{border-bottom:0;background-color:rgba(255,255,255,.1);margin-bottom:5px}.control-sidebar-dark .nav-tabs .nav-item{margin:0}.control-sidebar-dark .nav-tabs .nav-link{position:relative;border-radius:0;text-align:center;padding:10px 20px}.control-sidebar-dark .nav-tabs .nav-link,.control-sidebar-dark .nav-tabs .nav-link.active,.control-sidebar-dark .nav-tabs .nav-link:active,.control-sidebar-dark .nav-tabs .nav-link:focus,.control-sidebar-dark .nav-tabs .nav-link:hover{border:0}.control-sidebar-dark .nav-tabs .nav-link.active,.control-sidebar-dark .nav-tabs .nav-link:active,.control-sidebar-dark .nav-tabs .nav-link:focus,.control-sidebar-dark .nav-tabs .nav-link:hover{border-left-color:transparent;border-bottom-color:transparent;border-top-color:transparent;color:#fff}.control-sidebar-dark .nav-tabs .nav-link.active{background-color:#343a40}.control-sidebar-dark .tab-pane{padding:10px 15px}.control-sidebar-light{color:#4b545c}.control-sidebar-light,.control-sidebar-light:before{background:#fff;border-left:1px solid #adb5bd}.dropdown-item-title{font-size:1rem;margin:0}.dropdown-menu-lg{min-width:280px;max-width:300px;padding:0}.dropdown-menu-lg .dropdown-divider{margin:0}.dropdown-menu-lg .dropdown-item{padding:.5rem 1rem}.dropdown-menu-lg p{white-space:normal;margin:0}.dropdown-footer,.dropdown-header{text-align:center;display:block;padding:.5rem 1rem;font-size:.875rem}.open:not(.dropup)>.animated-dropdown-menu{backface-visibility:visible!important;animation:flipInX .7s both}@keyframes flipInX{0%{transform:perspective(400px) rotate3d(1,0,0,90deg);transition-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotate3d(1,0,0,-20deg);transition-timing-function:ease-in}60%{transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{transform:perspective(400px)}}@-webkit-keyframes flipInX{0%{-webkit-transform:perspective(400px) rotate3d(1,0,0,90deg);-webkit-transition-timing-function:ease-in;opacity:0}40%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-20deg);-webkit-transition-timing-function:ease-in}60%{-webkit-transform:perspective(400px) rotate3d(1,0,0,10deg);opacity:1}80%{-webkit-transform:perspective(400px) rotate3d(1,0,0,-5deg)}100%{-webkit-transform:perspective(400px)}}.navbar-custom-menu>.navbar-nav>li{position:relative}.navbar-custom-menu>.navbar-nav>li>.dropdown-menu{position:absolute;right:0;left:auto}@media (max-width:767.98px){.navbar-custom-menu>.navbar-nav{float:right}.navbar-custom-menu>.navbar-nav>li{position:static}.navbar-custom-menu>.navbar-nav>li>.dropdown-menu{position:absolute;right:5%;left:auto;border:1px solid #ddd;background:#fff}}.form-group.has-icon{position:relative}.form-group.has-icon .form-control{padding-right:35px}.form-group.has-icon .form-icon{cursor:pointer;position:absolute;right:3px;top:0;padding:.375rem .75rem;border:0;background-color:transparent;font-size:1rem}.btn-group-vertical .btn.btn-flat:first-of-type,.btn-group-vertical .btn.btn-flat:last-of-type{border-radius:0}.form-control-feedback.fa{line-height:calc(2.25rem + 2px)}.form-group-lg .form-control+.form-control-feedback.fa,.input-group-lg+.form-control-feedback.fa,.input-lg+.form-control-feedback.fa{line-height:calc(2.875rem + 2px)}.form-group-sm .form-control+.form-control-feedback.fa,.input-group-sm+.form-control-feedback.fa,.input-sm+.form-control-feedback.fa{line-height:calc(1.8125rem + 2px)}label:not(.form-check-label):not(.custom-file-label){font-weight:700}.progress{box-shadow:none;border-radius:1px}.progress-sm{height:10px}.progress-xs{height:7px}.progress-xxs{height:3px}.progress.vertical{position:relative;width:30px;height:200px;display:inline-block;margin-right:10px}.progress.vertical>.progress-bar{width:100%;position:absolute;bottom:0}.progress.vertical.progress-sm,.progress.vertical.sm{width:20px}.progress.vertical.progress-xs,.progress.vertical.xs{width:10px}.progress.vertical.progress-xxs,.progress.vertical.xxs{width:3px}.table tr>td .progress{margin:0}.small-box{border-radius:.25rem;box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);position:relative;display:block;margin-bottom:20px}.small-box>.inner{padding:10px}.small-box>.small-box-footer{position:relative;text-align:center;padding:3px 0;color:#fff;color:rgba(255,255,255,.8);display:block;z-index:10;background:rgba(0,0,0,.1);text-decoration:none}.small-box>.small-box-footer:hover{color:#fff;background:rgba(0,0,0,.15)}.small-box h3{font-size:38px;font-weight:700;margin:0 0 10px 0;white-space:nowrap;padding:0}.small-box p{font-size:15px}.small-box p>small{display:block;color:#f9f9f9;font-size:13px;margin-top:5px}.small-box h3,.small-box p{z-index:5}.small-box .icon{transition:all .3s linear;position:absolute;top:-10px;right:10px;z-index:0;font-size:90px;color:rgba(0,0,0,.15)}.small-box:hover{text-decoration:none}.small-box:hover .icon{font-size:95px}@media (max-width:767.98px){.small-box{text-align:center}.small-box .icon{display:none}.small-box p{font-size:12px}}.card{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2)}.card.bg-dark,.card.bg-dark .card-body{color:#fff}.card.collapsed-card .card-body,.card.collapsed-card .card-footer{display:none}.card .nav.flex-column>li{border-bottom:1px solid rgba(0,0,0,.125);margin:0}.card .nav.flex-column>li:last-of-type{border-bottom:none}.card.height-control .card-body{max-height:300px;overflow:auto}.card .border-right{border-right:1px solid rgba(0,0,0,.125)}.card .border-left{border-left:1px solid rgba(0,0,0,.125)}.card>.loading-img,.card>.overlay,.overlay-wrapper>.loading-img,.overlay-wrapper>.overlay{position:absolute;top:0;left:0;width:100%;height:100%}.card .overlay,.overlay-wrapper .overlay{z-index:50;background:rgba(255,255,255,.7);border-radius:.25rem}.card .overlay>.fa,.overlay-wrapper .overlay>.fa{position:absolute;top:50%;left:50%;margin-left:-15px;margin-top:-15px;color:#000;font-size:30px}.card .overlay.dark,.overlay-wrapper .overlay.dark{background:rgba(0,0,0,.5)}.card-body::after,.card-footer::after,.card-header::after{display:block;clear:both;content:\"\"}.card-header{position:relative;background-color:transparent;border-bottom:1px solid rgba(0,0,0,.125);border-top-left-radius:.25rem;border-top-right-radius:.25rem}.collapsed-card .card-header{border-bottom:none}.card-header>.card-tools{position:absolute;right:1rem;top:.5rem}.card-header>.card-tools [data-toggle=tooltip]{position:relative}.card-title{font-size:1.25rem;font-weight:400;margin:0}.btn-tool{padding:.25rem .5rem;font-size:.875rem;background:0 0;color:#adb5bd}.btn-group.show .btn-tool,.btn-tool:hover{color:#495057}.btn-tool:focus,.show .btn-tool{box-shadow:none!important}.card-body>.table{margin-bottom:0}.card-body>.table>thead>tr>td,.card-body>.table>thead>tr>th{border-top-width:0}.card-body .fc{margin-top:5px}.card-body .full-width-chart{margin:-19px}.card-body.p-0 .full-width-chart{margin:-9px}.chart-legend{margin:10px 0}@media (max-width:576px){.chart-legend>li{float:left;margin-right:10px}}.card-comments{background:#f7f7f7}.card-comments .card-comment{padding:8px 0;border-bottom:1px solid #eee}.card-comments .card-comment::after{display:block;clear:both;content:\"\"}.card-comments .card-comment:last-of-type{border-bottom:0}.card-comments .card-comment:first-of-type{padding-top:0}.card-comments .card-comment img{float:left}.card-comments .comment-text{margin-left:40px;color:#555}.card-comments .username{color:#444;display:block;font-weight:600}.card-comments .text-muted{font-weight:400;font-size:12px}.todo-list{margin:0;padding:0;list-style:none;overflow:auto}.todo-list>li{border-radius:2px;padding:10px;background:#f4f4f4;margin-bottom:2px;border-left:2px solid #e6e7e8;color:#444}.todo-list>li:last-of-type{margin-bottom:0}.todo-list>li>input[type=checkbox]{margin:0 10px 0 5px}.todo-list>li .text{display:inline-block;margin-left:5px;font-weight:600}.todo-list>li .label{margin-left:10px;font-size:9px}.todo-list>li .tools{display:none;float:right;color:#dc3545}.todo-list>li .tools>.fa,.todo-list>li .tools>.glyphicon,.todo-list>li .tools>.ion{margin-right:5px;cursor:pointer}.todo-list>li:hover .tools{display:inline-block}.todo-list>li.done{color:#999}.todo-list>li.done .text{text-decoration:line-through;font-weight:500}.todo-list>li.done .label{background:#adb5bd!important}.todo-list .danger{border-left-color:#dc3545}.todo-list .warning{border-left-color:#ffc107}.todo-list .info{border-left-color:#17a2b8}.todo-list .success{border-left-color:#28a745}.todo-list .primary{border-left-color:#007bff}.todo-list .handle{display:inline-block;cursor:move;margin:0 5px}.card-input{max-width:200px}.card-primary:not(.card-outline) .card-header{background-color:#007bff;border-bottom:0}.card-primary:not(.card-outline) .card-header,.card-primary:not(.card-outline) .card-header a{color:#fff}.card-primary.card-outline{border-top:3px solid #007bff}.bg-primary .btn-tool,.bg-primary-gradient .btn-tool,.card-primary:not(.card-outline) .btn-tool,.label-primary .btn-tool{color:rgba(255,255,255,.8)}.bg-primary .btn-tool:hover,.bg-primary-gradient .btn-tool:hover,.card-primary:not(.card-outline) .btn-tool:hover,.label-primary .btn-tool:hover{color:#fff}.card-secondary:not(.card-outline) .card-header{background-color:#6c757d;border-bottom:0}.card-secondary:not(.card-outline) .card-header,.card-secondary:not(.card-outline) .card-header a{color:#fff}.card-secondary.card-outline{border-top:3px solid #6c757d}.bg-secondary .btn-tool,.bg-secondary-gradient .btn-tool,.card-secondary:not(.card-outline) .btn-tool{color:rgba(255,255,255,.8)}.bg-secondary .btn-tool:hover,.bg-secondary-gradient .btn-tool:hover,.card-secondary:not(.card-outline) .btn-tool:hover{color:#fff}.card-success:not(.card-outline) .card-header{background-color:#28a745;border-bottom:0}.card-success:not(.card-outline) .card-header,.card-success:not(.card-outline) .card-header a{color:#fff}.card-success.card-outline{border-top:3px solid #28a745}.alert-success .btn-tool,.bg-success .btn-tool,.bg-success-gradient .btn-tool,.card-success:not(.card-outline) .btn-tool,.label-success .btn-tool{color:rgba(255,255,255,.8)}.alert-success .btn-tool:hover,.bg-success .btn-tool:hover,.bg-success-gradient .btn-tool:hover,.card-success:not(.card-outline) .btn-tool:hover,.label-success .btn-tool:hover{color:#fff}.card-info:not(.card-outline) .card-header{background-color:#17a2b8;border-bottom:0}.card-info:not(.card-outline) .card-header,.card-info:not(.card-outline) .card-header a{color:#fff}.card-info.card-outline{border-top:3px solid #17a2b8}.alert-info .btn-tool,.bg-info .btn-tool,.bg-info-gradient .btn-tool,.card-info:not(.card-outline) .btn-tool,.label-info .btn-tool{color:rgba(255,255,255,.8)}.alert-info .btn-tool:hover,.bg-info .btn-tool:hover,.bg-info-gradient .btn-tool:hover,.card-info:not(.card-outline) .btn-tool:hover,.label-info .btn-tool:hover{color:#fff}.card-warning:not(.card-outline) .card-header{background-color:#ffc107;border-bottom:0}.card-warning:not(.card-outline) .card-header,.card-warning:not(.card-outline) .card-header a{color:#1f2d3d}.card-warning.card-outline{border-top:3px solid #ffc107}.alert-warning .btn-tool,.bg-warning .btn-tool,.bg-warning-gradient .btn-tool,.card-warning:not(.card-outline) .btn-tool,.label-warning .btn-tool{color:rgba(31,45,61,.8)}.alert-warning .btn-tool:hover,.bg-warning .btn-tool:hover,.bg-warning-gradient .btn-tool:hover,.card-warning:not(.card-outline) .btn-tool:hover,.label-warning .btn-tool:hover{color:#1f2d3d}.card-danger:not(.card-outline) .card-header{background-color:#dc3545;border-bottom:0}.card-danger:not(.card-outline) .card-header,.card-danger:not(.card-outline) .card-header a{color:#fff}.card-danger.card-outline{border-top:3px solid #dc3545}.alert-danger .btn-tool,.alert-error .btn-tool,.bg-danger .btn-tool,.bg-danger-gradient .btn-tool,.card-danger:not(.card-outline) .btn-tool,.label-danger .btn-tool{color:rgba(255,255,255,.8)}.alert-danger .btn-tool:hover,.alert-error .btn-tool:hover,.bg-danger .btn-tool:hover,.bg-danger-gradient .btn-tool:hover,.card-danger:not(.card-outline) .btn-tool:hover,.label-danger .btn-tool:hover{color:#fff}.card-light:not(.card-outline) .card-header{background-color:#f8f9fa;border-bottom:0}.card-light:not(.card-outline) .card-header,.card-light:not(.card-outline) .card-header a{color:#1f2d3d}.card-light.card-outline{border-top:3px solid #f8f9fa}.bg-light .btn-tool,.bg-light-gradient .btn-tool,.card-light:not(.card-outline) .btn-tool{color:rgba(31,45,61,.8)}.bg-light .btn-tool:hover,.bg-light-gradient .btn-tool:hover,.card-light:not(.card-outline) .btn-tool:hover{color:#1f2d3d}.card-dark:not(.card-outline) .card-header{background-color:#343a40;border-bottom:0}.card-dark:not(.card-outline) .card-header,.card-dark:not(.card-outline) .card-header a{color:#fff}.card-dark.card-outline{border-top:3px solid #343a40}.bg-dark .btn-tool,.bg-dark-gradient .btn-tool,.card-dark:not(.card-outline) .btn-tool{color:rgba(255,255,255,.8)}.bg-dark .btn-tool:hover,.bg-dark-gradient .btn-tool:hover,.card-dark:not(.card-outline) .btn-tool:hover{color:#fff}.info-box{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);border-radius:.25rem;padding:.5rem;min-height:80px;background:#fff}.info-box .progress{background-color:rgba(0,0,0,.125);margin:5px 0;height:2px}.info-box .progress .progress-bar{background-color:#fff}.info-box-icon{border-radius:.25rem;display:block;width:70px;text-align:center;font-size:30px}.info-box-icon>img{max-width:100%}.info-box-content{padding:5px 10px;flex:1}.info-box-number{display:block;font-weight:700}.info-box-text,.progress-description{display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.info-box.bg-primary,.info-box.bg-primary-gradient,.info-box.label-primary{color:#fff}.info-box.bg-primary .progress-bar,.info-box.bg-primary-gradient .progress-bar,.info-box.label-primary .progress-bar{background-color:#fff}.info-box.bg-secondary,.info-box.bg-secondary-gradient{color:#fff}.info-box.bg-secondary .progress-bar,.info-box.bg-secondary-gradient .progress-bar{background-color:#fff}.info-box.alert-success,.info-box.bg-success,.info-box.bg-success-gradient,.info-box.label-success{color:#fff}.info-box.alert-success .progress-bar,.info-box.bg-success .progress-bar,.info-box.bg-success-gradient .progress-bar,.info-box.label-success .progress-bar{background-color:#fff}.info-box.alert-info,.info-box.bg-info,.info-box.bg-info-gradient,.info-box.label-info{color:#fff}.info-box.alert-info .progress-bar,.info-box.bg-info .progress-bar,.info-box.bg-info-gradient .progress-bar,.info-box.label-info .progress-bar{background-color:#fff}.info-box.alert-warning,.info-box.bg-warning,.info-box.bg-warning-gradient,.info-box.label-warning{color:#1f2d3d}.info-box.alert-warning .progress-bar,.info-box.bg-warning .progress-bar,.info-box.bg-warning-gradient .progress-bar,.info-box.label-warning .progress-bar{background-color:#1f2d3d}.info-box.alert-danger,.info-box.alert-error,.info-box.bg-danger,.info-box.bg-danger-gradient,.info-box.label-danger{color:#fff}.info-box.alert-danger .progress-bar,.info-box.alert-error .progress-bar,.info-box.bg-danger .progress-bar,.info-box.bg-danger-gradient .progress-bar,.info-box.label-danger .progress-bar{background-color:#fff}.info-box.bg-light,.info-box.bg-light-gradient{color:#1f2d3d}.info-box.bg-light .progress-bar,.info-box.bg-light-gradient .progress-bar{background-color:#1f2d3d}.info-box.bg-dark,.info-box.bg-dark-gradient{color:#fff}.info-box.bg-dark .progress-bar,.info-box.bg-dark-gradient .progress-bar{background-color:#fff}.info-box-more{display:block}.progress-description{margin:0}.timeline{position:relative;margin:0 0 30px 0;padding:0;list-style:none}.timeline:before{content:'';position:absolute;top:0;bottom:0;width:4px;background:#ddd;left:31px;margin:0;border-radius:.25rem}.timeline>li{position:relative;margin-right:10px;margin-bottom:15px}.timeline>li::after{display:block;clear:both;content:\"\"}.timeline>li>.timeline-item{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);border-radius:.25rem;margin-top:0;background:#fff;color:#444;margin-left:60px;margin-right:15px;padding:0;position:relative}.timeline>li>.timeline-item>.time{color:#999;float:right;padding:10px;font-size:12px}.timeline>li>.timeline-item>.timeline-header{margin:0;color:#555;border-bottom:1px solid rgba(0,0,0,.125);padding:10px;font-size:16px;line-height:1.1}.timeline>li>.timeline-item>.timeline-header>a{font-weight:600}.timeline>li>.timeline-item>.timeline-body,.timeline>li>.timeline-item>.timeline-footer{padding:10px}.timeline>li>.fa,.timeline>li>.glyphicon,.timeline>li>.ion{width:30px;height:30px;font-size:15px;line-height:30px;position:absolute;background:#adb5bd;border-radius:50%;text-align:center;left:18px;top:0}.timeline>.time-label>span{font-weight:600;padding:5px;display:inline-block;background-color:#fff;border-radius:4px}.timeline-inverse>li>.timeline-item{background:#f8f9fa;border:1px solid #ddd;box-shadow:none}.timeline-inverse>li>.timeline-item>.timeline-header{border-bottom-color:#ddd}.btn.btn-flat{border-radius:0;box-shadow:none;border-width:1px}.btn.btn-file{position:relative;overflow:hidden}.btn.btn-file>input[type=file]{position:absolute;top:0;right:0;min-width:100%;min-height:100%;font-size:100px;text-align:right;opacity:0;outline:0;background:#fff;cursor:inherit;display:block}.btn-default{background-color:#f4f4f4;color:#444;border-color:#ddd}.btn-default.hover,.btn-default:active,.btn-default:hover{background-color:#e7e7e7}.btn-app{border-radius:3px;position:relative;padding:15px 5px;margin:0 0 10px 10px;min-width:80px;height:60px;text-align:center;color:#666;border:1px solid #ddd;background-color:#f4f4f4;font-size:12px}.btn-app>.fa,.btn-app>.glyphicon,.btn-app>.ion{font-size:20px;display:block}.btn-app:hover{background:#f4f4f4;color:#444;border-color:#aaa}.btn-app:active,.btn-app:focus{box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-app>.badge{position:absolute;top:-3px;right:-10px;font-size:10px;font-weight:400}.callout{border-radius:.25rem;background-color:#fff;padding:.5rem 1rem .5rem .5rem;border-left:5px solid #eee}.callout a{color:#fff;text-decoration:underline}.callout a:hover{color:#eee}.callout p:last-child{margin-bottom:0}.callout.callout-danger{border-left-color:#bd2130}.callout.callout-warning{border-left-color:#d39e00}.callout.callout-info{border-left-color:#117a8b}.callout.callout-success{border-left-color:#1e7e34}.alert .icon{margin-right:10px}.alert .close,.alert .mailbox-attachment-close{color:#000;opacity:.2}.alert .close:hover,.alert .mailbox-attachment-close:hover{opacity:.5}.alert a{color:#fff;text-decoration:underline}.alert-success{border-color:#23923d}.alert-danger,.alert-error{border-color:#d32535}.alert-warning{border-color:#edb100}.alert-info{border-color:#148ea1}.nav-pills .nav-link{color:#6c757d}.nav-pills .nav-link:not(.active):hover{color:#007bff}.products-list{list-style:none;margin:0;padding:0}.products-list>.item{border-radius:.25rem;padding:10px 0;background:#fff}.products-list>.item::after{display:block;clear:both;content:\"\"}.products-list .product-img{float:left}.products-list .product-img img{width:50px;height:50px}.products-list .product-info{margin-left:60px}.products-list .product-title{font-weight:600}.products-list .product-description{display:block;color:#6c757d;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.product-list-in-card>.item{border-radius:0;border-bottom:1px solid rgba(0,0,0,.125)}.product-list-in-card>.item:last-of-type{border-bottom-width:0}.table.no-border,.table.no-border td,.table.no-border th{border:0}.table.text-center,.table.text-center td,.table.text-center th{text-align:center}.table-valign-middle tbody>tr>td,.table-valign-middle tbody>tr>th,.table-valign-middle thead>tr>td,.table-valign-middle thead>tr>th{vertical-align:middle}.label-default{background-color:#adb5bd;color:#444}.direct-chat .card-body{position:relative;overflow-x:hidden;padding:0}.direct-chat.chat-pane-open .direct-chat-contacts{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)}.direct-chat-messages{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0);padding:10px;height:250px;overflow:auto}.direct-chat-msg,.direct-chat-text{display:block}.direct-chat-msg{margin-bottom:10px}.direct-chat-msg::after{display:block;clear:both;content:\"\"}.direct-chat-contacts,.direct-chat-messages{transition:transform .5s ease-in-out}.direct-chat-text{border-radius:.3rem;position:relative;padding:5px 10px;background:#d2d6de;border:1px solid #d2d6de;margin:5px 0 0 50px;color:#444}.direct-chat-text:after,.direct-chat-text:before{position:absolute;right:100%;top:15px;border:solid transparent;border-right-color:#d2d6de;content:' ';height:0;width:0;pointer-events:none}.direct-chat-text:after{border-width:5px;margin-top:-5px}.direct-chat-text:before{border-width:6px;margin-top:-6px}.right .direct-chat-text{margin-right:50px;margin-left:0}.right .direct-chat-text:after,.right .direct-chat-text:before{right:auto;left:100%;border-right-color:transparent;border-left-color:#d2d6de}.direct-chat-img{border-radius:50%;float:left;width:40px;height:40px}.right .direct-chat-img{float:right}.direct-chat-info{display:block;margin-bottom:2px;font-size:.875rem}.direct-chat-name{font-weight:600}.direct-chat-timestamp{color:#999}.direct-chat-contacts-open .direct-chat-contacts{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)}.direct-chat-contacts{-webkit-transform:translate(101%,0);-ms-transform:translate(101%,0);transform:translate(101%,0);position:absolute;top:0;bottom:0;height:250px;width:100%;background:#222d32;color:#fff;overflow:auto}.contacts-list>li{border-bottom:1px solid rgba(0,0,0,.2);padding:10px;margin:0}.contacts-list>li::after{display:block;clear:both;content:\"\"}.contacts-list>li:last-of-type{border-bottom:none}.contacts-list-img{border-radius:50%;width:40px;float:left}.contacts-list-info{margin-left:45px;color:#fff}.contacts-list-name,.contacts-list-status{display:block}.contacts-list-name{font-weight:600}.contacts-list-status{font-size:.875rem}.contacts-list-date{color:#aaa;font-weight:400}.contacts-list-msg{color:#999}.direct-chat-danger .right>.direct-chat-text{background:#dc3545;border-color:#dc3545;color:#fff}.direct-chat-danger .right>.direct-chat-text:after,.direct-chat-danger .right>.direct-chat-text:before{border-left-color:#dc3545}.direct-chat-primary .right>.direct-chat-text{background:#007bff;border-color:#007bff;color:#fff}.direct-chat-primary .right>.direct-chat-text:after,.direct-chat-primary .right>.direct-chat-text:before{border-left-color:#007bff}.direct-chat-warning .right>.direct-chat-text{background:#ffc107;border-color:#ffc107;color:#1f2d3d}.direct-chat-warning .right>.direct-chat-text:after,.direct-chat-warning .right>.direct-chat-text:before{border-left-color:#ffc107}.direct-chat-info .right>.direct-chat-text{background:#17a2b8;border-color:#17a2b8;color:#fff}.direct-chat-info .right>.direct-chat-text:after,.direct-chat-info .right>.direct-chat-text:before{border-left-color:#17a2b8}.direct-chat-success .right>.direct-chat-text{background:#28a745;border-color:#28a745;color:#fff}.direct-chat-success .right>.direct-chat-text:after,.direct-chat-success .right>.direct-chat-text:before{border-left-color:#28a745}.users-list>li{width:25%;float:left;padding:10px;text-align:center}.users-list>li img{border-radius:50%;max-width:100%;height:auto}.users-list>li>a:hover,.users-list>li>a:hover .users-list-name{color:#999}.users-list-date,.users-list-name{display:block}.users-list-name{font-size:.875rem;color:#444;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.users-list-date{color:#999;font-size:12px}.carousel-control.left,.carousel-control.right{background-image:none}.carousel-control>.fa{font-size:40px;position:absolute;top:50%;z-index:5;display:inline-block;margin-top:-20px}.card-widget{border:none;position:relative}.widget-user .widget-user-header{padding:1rem;height:120px;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.widget-user .widget-user-username{margin-top:0;margin-bottom:5px;font-size:25px;font-weight:300;text-shadow:0 1px 1px rgba(0,0,0,.2)}.widget-user .widget-user-desc{margin-top:0}.widget-user .widget-user-image{position:absolute;top:65px;left:50%;margin-left:-45px}.widget-user .widget-user-image>img{width:90px;height:auto;border:3px solid #fff}.widget-user .card-footer{padding-top:40px}.widget-user-2 .widget-user-header{padding:1rem;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.widget-user-2 .widget-user-username{margin-top:5px;margin-bottom:5px;font-size:25px;font-weight:300}.widget-user-2 .widget-user-desc{margin-top:0}.widget-user-2 .widget-user-desc,.widget-user-2 .widget-user-username{margin-left:75px}.widget-user-2 .widget-user-image>img{width:65px;height:auto;float:left}.mailbox-messages>.table{margin:0}.mailbox-controls{padding:5px}.mailbox-controls.with-border{border-bottom:1px solid rgba(0,0,0,.125)}.mailbox-read-info{border-bottom:1px solid rgba(0,0,0,.125);padding:10px}.mailbox-read-info h3{font-size:20px;margin:0}.mailbox-read-info h5{margin:0;padding:5px 0 0 0}.mailbox-read-time{color:#999;font-size:13px}.mailbox-read-message{padding:10px}.mailbox-attachments li{float:left;width:200px;border:1px solid #eee;margin-bottom:10px;margin-right:10px}.mailbox-attachment-name{font-weight:700;color:#666}.mailbox-attachment-icon,.mailbox-attachment-info,.mailbox-attachment-size{display:block}.mailbox-attachment-info{padding:10px;background:#f4f4f4}.mailbox-attachment-size{color:#999;font-size:12px}.mailbox-attachment-icon{text-align:center;font-size:65px;color:#666;padding:20px 10px}.mailbox-attachment-icon.has-img{padding:0}.mailbox-attachment-icon.has-img>img{max-width:100%;height:auto}.lockscreen{background:#e9ecef}.lockscreen-logo{font-size:35px;text-align:center;margin-bottom:25px;font-weight:300}.lockscreen-logo a{color:#444}.lockscreen-wrapper{max-width:400px;margin:0 auto;margin-top:10%}.lockscreen .lockscreen-name{text-align:center;font-weight:600}.lockscreen-item{border-radius:4px;padding:0;background:#fff;position:relative;margin:10px auto 30px auto;width:290px}.lockscreen-image{border-radius:50%;position:absolute;left:-10px;top:-25px;background:#fff;padding:5px;z-index:10}.lockscreen-image>img{border-radius:50%;width:70px;height:70px}.lockscreen-credentials{margin-left:70px}.lockscreen-credentials .form-control{border:0}.lockscreen-credentials .btn{background-color:#fff;border:0;padding:0 10px}.lockscreen-footer{margin-top:10px}.login-logo,.register-logo{font-size:35px;text-align:center;margin-bottom:25px;font-weight:300}.login-logo a,.register-logo a{color:#444}.login-page,.register-page{background:#e9ecef}.login-box,.register-box{width:360px;margin:7% auto}@media (max-width:576px){.login-box,.register-box{width:90%;margin-top:20px}}.login-box-body,.register-box-body{background:#fff;padding:20px;border-top:0;color:#666}.login-box-body .form-control-feedback,.register-box-body .form-control-feedback{color:#777}.login-box-msg,.register-box-msg{margin:0;text-align:center;padding:0 20px 20px 20px}.social-auth-links{margin:10px 0}.error-page{width:600px;margin:20px auto 0 auto}@media (max-width:767.98px){.error-page{width:100%}}.error-page>.headline{float:left;font-size:100px;font-weight:300}@media (max-width:767.98px){.error-page>.headline{float:none;text-align:center}}.error-page>.error-content{margin-left:190px;display:block}@media (max-width:767.98px){.error-page>.error-content{margin-left:0}}.error-page>.error-content>h3{font-weight:300;font-size:25px}@media (max-width:767.98px){.error-page>.error-content>h3{text-align:center}}.invoice{position:relative;background:#fff;border:1px solid rgba(0,0,0,.125)}.invoice-title{margin-top:0}.profile-user-img{margin:0 auto;width:100px;padding:3px;border:3px solid #adb5bd}.profile-username{font-size:21px;margin-top:5px}.post{border-bottom:1px solid #adb5bd;margin-bottom:15px;padding-bottom:15px;color:#666}.post:last-of-type{border-bottom:0;margin-bottom:0;padding-bottom:0}.post .user-block{margin-bottom:15px}.fc-button{background:#f4f4f4;background-image:none;color:#444;border-color:#ddd;border-bottom-color:#ddd}.fc-button.hover,.fc-button:active,.fc-button:hover{background-color:#e9e9e9}.fc-header-title h2{font-size:15px;line-height:1.6em;color:#666;margin-left:10px}.fc-header-right{padding-right:10px}.fc-header-left{padding-left:10px}.fc-widget-header{background:#fafafa}.fc-grid{width:100%;border:0}.fc-widget-content:first-of-type,.fc-widget-header:first-of-type{border-left:0;border-right:0}.fc-widget-content:last-of-type,.fc-widget-header:last-of-type{border-right:0}.fc-toolbar{padding:1rem;margin:0}.fc-day-number{font-size:20px;font-weight:300;padding-right:10px}.fc-color-picker{list-style:none;margin:0;padding:0}.fc-color-picker>li{float:left;font-size:30px;margin-right:5px;line-height:30px}.fc-color-picker>li .fa{transition:transform linear .3s}.fc-color-picker>li .fa:hover{-ms-transform:rotate(30deg);transform:rotate(30deg)}#add-new-event{transition:all linear .3s}.external-event{box-shadow:0 0 1px rgba(0,0,0,.125),0 1px 3px rgba(0,0,0,.2);padding:5px 10px;font-weight:700;margin-bottom:4px;border-radius:.25rem;cursor:move}.external-event:hover{box-shadow:inset 0 0 90px rgba(0,0,0,.2)}.select2-container--default.select2-container--focus,.select2-container--default:active,.select2-container--default:focus,.select2-selection.select2-container--focus,.select2-selection:active,.select2-selection:focus{outline:0}.select2-container--default .select2-selection--single,.select2-selection .select2-selection--single{border:1px solid #d2d6de;padding:6px 12px;height:34px}.select2-container--default.select2-container--open{border-color:#007bff}.select2-dropdown{border:1px solid #d2d6de}.select2-container--default .select2-results__option--highlighted[aria-selected]{background-color:#007bff;color:#fff}.select2-results__option{padding:6px 12px;user-select:none;-webkit-user-select:none}.select2-container .select2-selection--single .select2-selection__rendered{padding-left:0;padding-right:0;height:auto;margin-top:-4px}.select2-container[dir=rtl] .select2-selection--single .select2-selection__rendered{padding-right:6px;padding-left:20px}.select2-container--default .select2-selection--single .select2-selection__arrow{height:28px;right:3px}.select2-container--default .select2-selection--single .select2-selection__arrow b{margin-top:0}.select2-dropdown .select2-search__field,.select2-search--inline .select2-search__field{border:1px solid #d2d6de}.select2-dropdown .select2-search__field:focus,.select2-search--inline .select2-search__field:focus{outline:0;border:1px solid #007bff}.select2-container--default .select2-results__option[aria-disabled=true]{color:#999}.select2-container--default .select2-results__option[aria-selected=true]{background-color:#ddd}.select2-container--default .select2-results__option[aria-selected=true],.select2-container--default .select2-results__option[aria-selected=true]:hover{color:#444}.select2-container--default .select2-selection--multiple{border:1px solid #d2d6de}.select2-container--default .select2-selection--multiple:focus{border-color:#007bff}.select2-container--default.select2-container--focus .select2-selection--multiple{border-color:#d2d6de}.select2-container--default .select2-selection--multiple .select2-selection__choice{background-color:#007bff;border-color:#006fe6;padding:1px 10px;color:#fff}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove{margin-right:5px;color:rgba(255,255,255,.7)}.select2-container--default .select2-selection--multiple .select2-selection__choice__remove:hover{color:#fff}.select2-container .select2-selection--single .select2-selection__rendered{padding-right:10px}a.text-muted:hover{color:#007bff!important}.border-transparent{border-color:transparent!important}.description-block{display:block;margin:10px 0;text-align:center}.description-block.margin-bottom{margin-bottom:25px}.description-block>.description-header{margin:0;padding:0;font-weight:600;font-size:16px}.description-block>.description-text{text-transform:uppercase}.bg-primary,.bg-primary a,.label-primary,.label-primary a{color:#fff!important}.bg-secondary,.bg-secondary a{color:#fff!important}.alert-success,.alert-success a,.bg-success,.bg-success a,.label-success,.label-success a{color:#fff!important}.alert-info,.alert-info a,.bg-info,.bg-info a,.label-info,.label-info a{color:#fff!important}.alert-warning,.alert-warning a,.bg-warning,.bg-warning a,.label-warning,.label-warning a{color:#1f2d3d!important}.alert-danger,.alert-danger a,.alert-error,.alert-error a,.bg-danger,.bg-danger a,.label-danger,.label-danger a{color:#fff!important}.bg-light,.bg-light a{color:#1f2d3d!important}.bg-dark,.bg-dark a{color:#fff!important}.bg-gray{color:#000;background-color:#adb5bd}.bg-gray-light{background-color:#f2f4f5;color:#1f2d3d!important}.bg-black{background-color:#000;color:#fff!important}.bg-white{background-color:#fff;color:#1f2d3d!important}[class^=bg-].disabled{opacity:.65}.link-muted{color:#5d6974}.link-muted:focus,.link-muted:hover{color:#464f58}.link-black{color:#666}.link-black:focus,.link-black:hover{color:#999}.hide{display:none!important}.no-border{border:0!important}.no-shadow{box-shadow:none!important}.chart-legend,.contacts-list,.list-unstyled,.mailbox-attachments,.users-list{list-style:none;margin:0;padding:0}.list-group-unbordered>.list-group-item{border-left:0;border-right:0;border-radius:0;padding-left:0;padding-right:0}.flat{border-radius:0!important}.jqstooltip{padding:5px!important;width:auto!important;height:auto!important}.bg-primary-gradient{background:#007bff;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#007bff),color-stop(1,#3395ff));background:-ms-linear-gradient(bottom,#007bff,#3395ff);background:-moz-linear-gradient(center bottom,#007bff 0,#3395ff 100%);background:-o-linear-gradient(#3395ff,#007bff);color:#fff}.bg-secondary-gradient{background:#6c757d;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#6c757d),color-stop(1,#868e96));background:-ms-linear-gradient(bottom,#6c757d,#868e96);background:-moz-linear-gradient(center bottom,#6c757d 0,#868e96 100%);background:-o-linear-gradient(#868e96,#6c757d);color:#fff}.bg-success-gradient{background:#28a745;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#28a745),color-stop(1,#34ce57));background:-ms-linear-gradient(bottom,#28a745,#34ce57);background:-moz-linear-gradient(center bottom,#28a745 0,#34ce57 100%);background:-o-linear-gradient(#34ce57,#28a745);color:#fff}.bg-info-gradient{background:#17a2b8;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#17a2b8),color-stop(1,#1fc8e3));background:-ms-linear-gradient(bottom,#17a2b8,#1fc8e3);background:-moz-linear-gradient(center bottom,#17a2b8 0,#1fc8e3 100%);background:-o-linear-gradient(#1fc8e3,#17a2b8);color:#fff}.bg-warning-gradient{background:#ffc107;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#ffc107),color-stop(1,#ffce3a));background:-ms-linear-gradient(bottom,#ffc107,#ffce3a);background:-moz-linear-gradient(center bottom,#ffc107 0,#ffce3a 100%);background:-o-linear-gradient(#ffce3a,#ffc107);color:#1f2d3d}.bg-danger-gradient{background:#dc3545;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#dc3545),color-stop(1,#e4606d));background:-ms-linear-gradient(bottom,#dc3545,#e4606d);background:-moz-linear-gradient(center bottom,#dc3545 0,#e4606d 100%);background:-o-linear-gradient(#e4606d,#dc3545);color:#fff}.bg-light-gradient{background:#f8f9fa;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#f8f9fa),color-stop(1,#fff));background:-ms-linear-gradient(bottom,#f8f9fa,#fff);background:-moz-linear-gradient(center bottom,#f8f9fa 0,#fff 100%);background:-o-linear-gradient(white,#f8f9fa);color:#1f2d3d}.bg-dark-gradient{background:#343a40;background:-webkit-gradient(linear,left bottom,left top,color-stop(0,#343a40),color-stop(1,#4b545c));background:-ms-linear-gradient(bottom,#343a40,#4b545c);background:-moz-linear-gradient(center bottom,#343a40 0,#4b545c 100%);background:-o-linear-gradient(#4b545c,#343a40);color:#fff}.description-block .description-icon{font-size:16px}.list-header{font-size:15px;padding:10px 4px;font-weight:700;color:#666}.list-seperator{height:1px;background:rgba(0,0,0,.125);margin:15px 0 9px 0}.list-link>a{padding:4px;color:#777}.list-link>a:hover{color:#222}.user-block::after{display:block;clear:both;content:\"\"}.user-block img{width:40px;height:40px;float:left}.user-block .comment,.user-block .description,.user-block .username{display:block;margin-left:50px}.user-block .username{font-size:16px;font-weight:600}.user-block .description{color:#999;font-size:13px}.user-block.user-block-sm .comment,.user-block.user-block-sm .description,.user-block.user-block-sm .username{margin-left:40px}.user-block.user-block-sm .username{font-size:14px}.card-comments .card-comment img,.img-lg,.img-md,.img-sm,.user-block.user-block-sm img{float:left}.card-comments .card-comment img,.img-sm,.user-block.user-block-sm img{width:30px!important;height:30px!important}.card-comments .card-comment img+.img-push,.img-sm+.img-push,.user-block.user-block-sm img+.img-push{margin-left:40px}.img-md{width:60px;height:60px}.img-md+.img-push{margin-left:70px}.img-lg{width:100px;height:100px}.img-lg+.img-push{margin-left:110px}.img-bordered{border:3px solid #adb5bd;padding:3px}.img-bordered-sm{border:2px solid #adb5bd;padding:2px}.img-rounded{border-radius:.25rem}.img-circle{border-radius:50%}.img-size-32,.img-size-50,.img-size-64{height:auto}.img-size-64{width:64px}.img-size-50{width:50px}.img-size-32{width:32px}.size-32,.size-40,.size-50{display:block;text-align:center}.size-32{width:32px;height:32px;line-height:32px}.size-40{width:40px;height:40px;line-height:40px}.size-50{width:50px;height:50px;line-height:50px}.attachment-block{border:1px solid rgba(0,0,0,.125);padding:5px;margin-bottom:10px;background:#f7f7f7}.attachment-block .attachment-img{max-width:100px;max-height:100px;height:auto;float:left}.attachment-block .attachment-pushed{margin-left:110px}.attachment-block .attachment-heading{margin:0}.attachment-block .attachment-text{color:#555}.connectedSortable{min-height:100px}.ui-helper-hidden-accessible{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sort-highlight{background:#f4f4f4;border:1px dashed #ddd;margin-bottom:10px}.chart{position:relative;overflow:hidden}.flex-1{flex:1}@media print{.content-header,.main-header,.main-sidebar,.no-print{display:none!important}.content-wrapper,.main-footer{margin-left:0!important;min-height:0!important;-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0)}.layout-fixed .content-wrapper{padding-top:0!important}.invoice{width:100%;border:0;margin:0;padding:0}.invoice-col{float:left;width:33.3333333%}.table-responsive{overflow:auto}.table-responsive>.table tr td,.table-responsive>.table tr th{white-space:normal!important}}.text-bold,.text-bold.table td,.text-bold.table th{font-weight:700}.text-sm{font-size:.875rem}.text-xs{font-size:1rem}.text-lg{font-size:1.25rem}.text-xl{font-size:2rem}.elevation-0{box-shadow:none}.callout,.elevation-1,.sidebar-dark-danger .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-dark .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-info .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-light .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-primary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-secondary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-success .nav-sidebar>.nav-item>.nav-link.active,.sidebar-dark-warning .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-danger .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-dark .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-info .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-light .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-primary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-secondary .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-success .nav-sidebar>.nav-item>.nav-link.active,.sidebar-light-warning .nav-sidebar>.nav-item>.nav-link.active{box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24)}.elevation-2{box-shadow:0 3px 6px rgba(0,0,0,.16),0 3px 6px rgba(0,0,0,.23)}.elevation-3{box-shadow:0 10px 20px rgba(0,0,0,.19),0 6px 6px rgba(0,0,0,.23)}.elevation-4{box-shadow:0 14px 28px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.22)}.elevation-5{box-shadow:0 19px 38px rgba(0,0,0,.3),0 15px 12px rgba(0,0,0,.22)}.login-card-body,.register-card-body{color:#666}\n\n.skin-blue .main-header .navbar{background-color:#3c8dbc}.skin-blue .main-header .navbar .nav>li>a{color:#fff}.skin-blue .main-header .navbar .nav>li>a:hover,.skin-blue .main-header .navbar .nav>li>a:active,.skin-blue .main-header .navbar .nav>li>a:focus,.skin-blue .main-header .navbar .nav .open>a,.skin-blue .main-header .navbar .nav .open>a:hover,.skin-blue .main-header .navbar .nav .open>a:focus,.skin-blue .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-blue .main-header .navbar .sidebar-toggle{color:#fff}.skin-blue .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-blue .main-header .navbar .sidebar-toggle{color:#fff}.skin-blue .main-header .navbar .sidebar-toggle:hover{background-color:#367fa9}@media (max-width:767px){.skin-blue .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-blue .main-header .navbar .dropdown-menu li a{color:#fff}.skin-blue .main-header .navbar .dropdown-menu li a:hover{background:#367fa9}}.skin-blue .main-header .logo{background-color:#367fa9;color:#fff;border-bottom:0 solid transparent}.skin-blue .main-header .logo:hover{background-color:#357ca5}.skin-blue .main-header li.user-header{background-color:#3c8dbc}.skin-blue .content-header{background:transparent}.skin-blue .wrapper,.skin-blue .main-sidebar,.skin-blue .left-side{background-color:#222d32}.skin-blue .user-panel>.info,.skin-blue .user-panel>.info>a{color:#fff}.skin-blue .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-blue .sidebar-menu>li>a{border-left:3px solid transparent}.skin-blue .sidebar-menu>li:hover>a,.skin-blue .sidebar-menu>li.active>a,.skin-blue .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-blue .sidebar-menu>li.active>a{border-left-color:#3c8dbc}.skin-blue .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-blue .sidebar a{color:#b8c7ce}.skin-blue .sidebar a:hover{text-decoration:none}.skin-blue .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-blue .sidebar-menu .treeview-menu>li.active>a,.skin-blue .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-blue .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-blue .sidebar-form input[type=\"text\"],.skin-blue .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-blue .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-blue .sidebar-form input[type=\"text\"]:focus,.skin-blue .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-blue .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-blue .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-blue.layout-top-nav .main-header>.logo{background-color:#3c8dbc;color:#fff;border-bottom:0 solid transparent}.skin-blue.layout-top-nav .main-header>.logo:hover{background-color:#3b8ab8}.skin-blue-light .main-header .navbar{background-color:#3c8dbc}.skin-blue-light .main-header .navbar .nav>li>a{color:#fff}.skin-blue-light .main-header .navbar .nav>li>a:hover,.skin-blue-light .main-header .navbar .nav>li>a:active,.skin-blue-light .main-header .navbar .nav>li>a:focus,.skin-blue-light .main-header .navbar .nav .open>a,.skin-blue-light .main-header .navbar .nav .open>a:hover,.skin-blue-light .main-header .navbar .nav .open>a:focus,.skin-blue-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-blue-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-blue-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-blue-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-blue-light .main-header .navbar .sidebar-toggle:hover{background-color:#367fa9}@media (max-width:767px){.skin-blue-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-blue-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-blue-light .main-header .navbar .dropdown-menu li a:hover{background:#367fa9}}.skin-blue-light .main-header .logo{background-color:#3c8dbc;color:#fff;border-bottom:0 solid transparent}.skin-blue-light .main-header .logo:hover{background-color:#3b8ab8}.skin-blue-light .main-header li.user-header{background-color:#3c8dbc}.skin-blue-light .content-header{background:transparent}.skin-blue-light .wrapper,.skin-blue-light .main-sidebar,.skin-blue-light .left-side{background-color:#f9fafc}.skin-blue-light .main-sidebar{border-right:1px solid #d2d6de}.skin-blue-light .user-panel>.info,.skin-blue-light .user-panel>.info>a{color:#444}.skin-blue-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-blue-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-blue-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-blue-light .sidebar-menu>li:hover>a,.skin-blue-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-blue-light .sidebar-menu>li.active{border-left-color:#3c8dbc}.skin-blue-light .sidebar-menu>li.active>a{font-weight:600}.skin-blue-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-blue-light .sidebar a{color:#444}.skin-blue-light .sidebar a:hover{text-decoration:none}.skin-blue-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-blue-light .sidebar-menu .treeview-menu>li.active>a,.skin-blue-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-blue-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-blue-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-blue-light .sidebar-form input[type=\"text\"],.skin-blue-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-blue-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-blue-light .sidebar-form input[type=\"text\"]:focus,.skin-blue-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-blue-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-blue-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-blue-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-blue-light .main-footer{border-top-color:#d2d6de}.skin-blue.layout-top-nav .main-header>.logo{background-color:#3c8dbc;color:#fff;border-bottom:0 solid transparent}.skin-blue.layout-top-nav .main-header>.logo:hover{background-color:#3b8ab8}.skin-black .main-header{-webkit-box-shadow:0 1px 1px rgba(0,0,0,0.05);box-shadow:0 1px 1px rgba(0,0,0,0.05)}.skin-black .main-header .navbar-toggle{color:#333}.skin-black .main-header .navbar-brand{color:#333;border-right:1px solid #eee}.skin-black .main-header .navbar{background-color:#fff}.skin-black .main-header .navbar .nav>li>a{color:#333}.skin-black .main-header .navbar .nav>li>a:hover,.skin-black .main-header .navbar .nav>li>a:active,.skin-black .main-header .navbar .nav>li>a:focus,.skin-black .main-header .navbar .nav .open>a,.skin-black .main-header .navbar .nav .open>a:hover,.skin-black .main-header .navbar .nav .open>a:focus,.skin-black .main-header .navbar .nav>.active>a{background:#fff;color:#999}.skin-black .main-header .navbar .sidebar-toggle{color:#333}.skin-black .main-header .navbar .sidebar-toggle:hover{color:#999;background:#fff}.skin-black .main-header .navbar>.sidebar-toggle{color:#333;border-right:1px solid #eee}.skin-black .main-header .navbar .navbar-nav>li>a{border-right:1px solid #eee}.skin-black .main-header .navbar .navbar-custom-menu .navbar-nav>li>a,.skin-black .main-header .navbar .navbar-right>li>a{border-left:1px solid #eee;border-right-width:0}.skin-black .main-header .logo{background-color:#fff;color:#333;border-bottom:0 solid transparent;border-right:1px solid #eee}.skin-black .main-header .logo:hover{background-color:#fcfcfc}@media (max-width:767px){.skin-black .main-header .logo{background-color:#222;color:#fff;border-bottom:0 solid transparent;border-right:none}.skin-black .main-header .logo:hover{background-color:#1f1f1f}}.skin-black .main-header li.user-header{background-color:#222}.skin-black .content-header{background:transparent;box-shadow:none}.skin-black .wrapper,.skin-black .main-sidebar,.skin-black .left-side{background-color:#222d32}.skin-black .user-panel>.info,.skin-black .user-panel>.info>a{color:#fff}.skin-black .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-black .sidebar-menu>li>a{border-left:3px solid transparent}.skin-black .sidebar-menu>li:hover>a,.skin-black .sidebar-menu>li.active>a,.skin-black .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-black .sidebar-menu>li.active>a{border-left-color:#fff}.skin-black .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-black .sidebar a{color:#b8c7ce}.skin-black .sidebar a:hover{text-decoration:none}.skin-black .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-black .sidebar-menu .treeview-menu>li.active>a,.skin-black .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-black .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-black .sidebar-form input[type=\"text\"],.skin-black .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-black .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-black .sidebar-form input[type=\"text\"]:focus,.skin-black .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-black .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-black .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-black .pace .pace-progress{background:#222}.skin-black .pace .pace-activity{border-top-color:#222;border-left-color:#222}.skin-black-light .main-header{border-bottom:1px solid #d2d6de}.skin-black-light .main-header .navbar-toggle{color:#333}.skin-black-light .main-header .navbar-brand{color:#333;border-right:1px solid #d2d6de}.skin-black-light .main-header .navbar{background-color:#fff}.skin-black-light .main-header .navbar .nav>li>a{color:#333}.skin-black-light .main-header .navbar .nav>li>a:hover,.skin-black-light .main-header .navbar .nav>li>a:active,.skin-black-light .main-header .navbar .nav>li>a:focus,.skin-black-light .main-header .navbar .nav .open>a,.skin-black-light .main-header .navbar .nav .open>a:hover,.skin-black-light .main-header .navbar .nav .open>a:focus,.skin-black-light .main-header .navbar .nav>.active>a{background:#fff;color:#999}.skin-black-light .main-header .navbar .sidebar-toggle{color:#333}.skin-black-light .main-header .navbar .sidebar-toggle:hover{color:#999;background:#fff}.skin-black-light .main-header .navbar>.sidebar-toggle{color:#333;border-right:1px solid #d2d6de}.skin-black-light .main-header .navbar .navbar-nav>li>a{border-right:1px solid #d2d6de}.skin-black-light .main-header .navbar .navbar-custom-menu .navbar-nav>li>a,.skin-black-light .main-header .navbar .navbar-right>li>a{border-left:1px solid #d2d6de;border-right-width:0}.skin-black-light .main-header .logo{background-color:#fff;color:#333;border-bottom:0 solid transparent;border-right:1px solid #d2d6de}.skin-black-light .main-header .logo:hover{background-color:#fcfcfc}@media (max-width:767px){.skin-black-light .main-header .logo{background-color:#222;color:#fff;border-bottom:0 solid transparent;border-right:none}.skin-black-light .main-header .logo:hover{background-color:#1f1f1f}}.skin-black-light .main-header li.user-header{background-color:#222}.skin-black-light .content-header{background:transparent;box-shadow:none}.skin-black-light .wrapper,.skin-black-light .main-sidebar,.skin-black-light .left-side{background-color:#f9fafc}.skin-black-light .main-sidebar{border-right:1px solid #d2d6de}.skin-black-light .user-panel>.info,.skin-black-light .user-panel>.info>a{color:#444}.skin-black-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-black-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-black-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-black-light .sidebar-menu>li:hover>a,.skin-black-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-black-light .sidebar-menu>li.active{border-left-color:#fff}.skin-black-light .sidebar-menu>li.active>a{font-weight:600}.skin-black-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-black-light .sidebar a{color:#444}.skin-black-light .sidebar a:hover{text-decoration:none}.skin-black-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-black-light .sidebar-menu .treeview-menu>li.active>a,.skin-black-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-black-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-black-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-black-light .sidebar-form input[type=\"text\"],.skin-black-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-black-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-black-light .sidebar-form input[type=\"text\"]:focus,.skin-black-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-black-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-black-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-black-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-green .main-header .navbar{background-color:#00a65a}.skin-green .main-header .navbar .nav>li>a{color:#fff}.skin-green .main-header .navbar .nav>li>a:hover,.skin-green .main-header .navbar .nav>li>a:active,.skin-green .main-header .navbar .nav>li>a:focus,.skin-green .main-header .navbar .nav .open>a,.skin-green .main-header .navbar .nav .open>a:hover,.skin-green .main-header .navbar .nav .open>a:focus,.skin-green .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-green .main-header .navbar .sidebar-toggle{color:#fff}.skin-green .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-green .main-header .navbar .sidebar-toggle{color:#fff}.skin-green .main-header .navbar .sidebar-toggle:hover{background-color:#008d4c}@media (max-width:767px){.skin-green .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-green .main-header .navbar .dropdown-menu li a{color:#fff}.skin-green .main-header .navbar .dropdown-menu li a:hover{background:#008d4c}}.skin-green .main-header .logo{background-color:#008d4c;color:#fff;border-bottom:0 solid transparent}.skin-green .main-header .logo:hover{background-color:#008749}.skin-green .main-header li.user-header{background-color:#00a65a}.skin-green .content-header{background:transparent}.skin-green .wrapper,.skin-green .main-sidebar,.skin-green .left-side{background-color:#222d32}.skin-green .user-panel>.info,.skin-green .user-panel>.info>a{color:#fff}.skin-green .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-green .sidebar-menu>li>a{border-left:3px solid transparent}.skin-green .sidebar-menu>li:hover>a,.skin-green .sidebar-menu>li.active>a,.skin-green .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-green .sidebar-menu>li.active>a{border-left-color:#00a65a}.skin-green .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-green .sidebar a{color:#b8c7ce}.skin-green .sidebar a:hover{text-decoration:none}.skin-green .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-green .sidebar-menu .treeview-menu>li.active>a,.skin-green .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-green .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-green .sidebar-form input[type=\"text\"],.skin-green .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-green .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-green .sidebar-form input[type=\"text\"]:focus,.skin-green .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-green .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-green .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-green-light .main-header .navbar{background-color:#00a65a}.skin-green-light .main-header .navbar .nav>li>a{color:#fff}.skin-green-light .main-header .navbar .nav>li>a:hover,.skin-green-light .main-header .navbar .nav>li>a:active,.skin-green-light .main-header .navbar .nav>li>a:focus,.skin-green-light .main-header .navbar .nav .open>a,.skin-green-light .main-header .navbar .nav .open>a:hover,.skin-green-light .main-header .navbar .nav .open>a:focus,.skin-green-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-green-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-green-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-green-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-green-light .main-header .navbar .sidebar-toggle:hover{background-color:#008d4c}@media (max-width:767px){.skin-green-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-green-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-green-light .main-header .navbar .dropdown-menu li a:hover{background:#008d4c}}.skin-green-light .main-header .logo{background-color:#00a65a;color:#fff;border-bottom:0 solid transparent}.skin-green-light .main-header .logo:hover{background-color:#00a157}.skin-green-light .main-header li.user-header{background-color:#00a65a}.skin-green-light .content-header{background:transparent}.skin-green-light .wrapper,.skin-green-light .main-sidebar,.skin-green-light .left-side{background-color:#f9fafc}.skin-green-light .main-sidebar{border-right:1px solid #d2d6de}.skin-green-light .user-panel>.info,.skin-green-light .user-panel>.info>a{color:#444}.skin-green-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-green-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-green-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-green-light .sidebar-menu>li:hover>a,.skin-green-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-green-light .sidebar-menu>li.active{border-left-color:#00a65a}.skin-green-light .sidebar-menu>li.active>a{font-weight:600}.skin-green-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-green-light .sidebar a{color:#444}.skin-green-light .sidebar a:hover{text-decoration:none}.skin-green-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-green-light .sidebar-menu .treeview-menu>li.active>a,.skin-green-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-green-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-green-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-green-light .sidebar-form input[type=\"text\"],.skin-green-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-green-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-green-light .sidebar-form input[type=\"text\"]:focus,.skin-green-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-green-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-green-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-green-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-red .main-header .navbar{background-color:#dd4b39}.skin-red .main-header .navbar .nav>li>a{color:#fff}.skin-red .main-header .navbar .nav>li>a:hover,.skin-red .main-header .navbar .nav>li>a:active,.skin-red .main-header .navbar .nav>li>a:focus,.skin-red .main-header .navbar .nav .open>a,.skin-red .main-header .navbar .nav .open>a:hover,.skin-red .main-header .navbar .nav .open>a:focus,.skin-red .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-red .main-header .navbar .sidebar-toggle{color:#fff}.skin-red .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-red .main-header .navbar .sidebar-toggle{color:#fff}.skin-red .main-header .navbar .sidebar-toggle:hover{background-color:#d73925}@media (max-width:767px){.skin-red .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-red .main-header .navbar .dropdown-menu li a{color:#fff}.skin-red .main-header .navbar .dropdown-menu li a:hover{background:#d73925}}.skin-red .main-header .logo{background-color:#d73925;color:#fff;border-bottom:0 solid transparent}.skin-red .main-header .logo:hover{background-color:#d33724}.skin-red .main-header li.user-header{background-color:#dd4b39}.skin-red .content-header{background:transparent}.skin-red .wrapper,.skin-red .main-sidebar,.skin-red .left-side{background-color:#222d32}.skin-red .user-panel>.info,.skin-red .user-panel>.info>a{color:#fff}.skin-red .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-red .sidebar-menu>li>a{border-left:3px solid transparent}.skin-red .sidebar-menu>li:hover>a,.skin-red .sidebar-menu>li.active>a,.skin-red .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-red .sidebar-menu>li.active>a{border-left-color:#dd4b39}.skin-red .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-red .sidebar a{color:#b8c7ce}.skin-red .sidebar a:hover{text-decoration:none}.skin-red .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-red .sidebar-menu .treeview-menu>li.active>a,.skin-red .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-red .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-red .sidebar-form input[type=\"text\"],.skin-red .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-red .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-red .sidebar-form input[type=\"text\"]:focus,.skin-red .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-red .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-red .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-red-light .main-header .navbar{background-color:#dd4b39}.skin-red-light .main-header .navbar .nav>li>a{color:#fff}.skin-red-light .main-header .navbar .nav>li>a:hover,.skin-red-light .main-header .navbar .nav>li>a:active,.skin-red-light .main-header .navbar .nav>li>a:focus,.skin-red-light .main-header .navbar .nav .open>a,.skin-red-light .main-header .navbar .nav .open>a:hover,.skin-red-light .main-header .navbar .nav .open>a:focus,.skin-red-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-red-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-red-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-red-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-red-light .main-header .navbar .sidebar-toggle:hover{background-color:#d73925}@media (max-width:767px){.skin-red-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-red-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-red-light .main-header .navbar .dropdown-menu li a:hover{background:#d73925}}.skin-red-light .main-header .logo{background-color:#dd4b39;color:#fff;border-bottom:0 solid transparent}.skin-red-light .main-header .logo:hover{background-color:#dc4735}.skin-red-light .main-header li.user-header{background-color:#dd4b39}.skin-red-light .content-header{background:transparent}.skin-red-light .wrapper,.skin-red-light .main-sidebar,.skin-red-light .left-side{background-color:#f9fafc}.skin-red-light .main-sidebar{border-right:1px solid #d2d6de}.skin-red-light .user-panel>.info,.skin-red-light .user-panel>.info>a{color:#444}.skin-red-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-red-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-red-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-red-light .sidebar-menu>li:hover>a,.skin-red-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-red-light .sidebar-menu>li.active{border-left-color:#dd4b39}.skin-red-light .sidebar-menu>li.active>a{font-weight:600}.skin-red-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-red-light .sidebar a{color:#444}.skin-red-light .sidebar a:hover{text-decoration:none}.skin-red-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-red-light .sidebar-menu .treeview-menu>li.active>a,.skin-red-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-red-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-red-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-red-light .sidebar-form input[type=\"text\"],.skin-red-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-red-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-red-light .sidebar-form input[type=\"text\"]:focus,.skin-red-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-red-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-red-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-red-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-yellow .main-header .navbar{background-color:#f39c12}.skin-yellow .main-header .navbar .nav>li>a{color:#fff}.skin-yellow .main-header .navbar .nav>li>a:hover,.skin-yellow .main-header .navbar .nav>li>a:active,.skin-yellow .main-header .navbar .nav>li>a:focus,.skin-yellow .main-header .navbar .nav .open>a,.skin-yellow .main-header .navbar .nav .open>a:hover,.skin-yellow .main-header .navbar .nav .open>a:focus,.skin-yellow .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-yellow .main-header .navbar .sidebar-toggle{color:#fff}.skin-yellow .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-yellow .main-header .navbar .sidebar-toggle{color:#fff}.skin-yellow .main-header .navbar .sidebar-toggle:hover{background-color:#e08e0b}@media (max-width:767px){.skin-yellow .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-yellow .main-header .navbar .dropdown-menu li a{color:#fff}.skin-yellow .main-header .navbar .dropdown-menu li a:hover{background:#e08e0b}}.skin-yellow .main-header .logo{background-color:#e08e0b;color:#fff;border-bottom:0 solid transparent}.skin-yellow .main-header .logo:hover{background-color:#db8b0b}.skin-yellow .main-header li.user-header{background-color:#f39c12}.skin-yellow .content-header{background:transparent}.skin-yellow .wrapper,.skin-yellow .main-sidebar,.skin-yellow .left-side{background-color:#222d32}.skin-yellow .user-panel>.info,.skin-yellow .user-panel>.info>a{color:#fff}.skin-yellow .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-yellow .sidebar-menu>li>a{border-left:3px solid transparent}.skin-yellow .sidebar-menu>li:hover>a,.skin-yellow .sidebar-menu>li.active>a,.skin-yellow .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-yellow .sidebar-menu>li.active>a{border-left-color:#f39c12}.skin-yellow .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-yellow .sidebar a{color:#b8c7ce}.skin-yellow .sidebar a:hover{text-decoration:none}.skin-yellow .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-yellow .sidebar-menu .treeview-menu>li.active>a,.skin-yellow .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-yellow .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-yellow .sidebar-form input[type=\"text\"],.skin-yellow .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-yellow .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-yellow .sidebar-form input[type=\"text\"]:focus,.skin-yellow .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-yellow .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-yellow .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-yellow-light .main-header .navbar{background-color:#f39c12}.skin-yellow-light .main-header .navbar .nav>li>a{color:#fff}.skin-yellow-light .main-header .navbar .nav>li>a:hover,.skin-yellow-light .main-header .navbar .nav>li>a:active,.skin-yellow-light .main-header .navbar .nav>li>a:focus,.skin-yellow-light .main-header .navbar .nav .open>a,.skin-yellow-light .main-header .navbar .nav .open>a:hover,.skin-yellow-light .main-header .navbar .nav .open>a:focus,.skin-yellow-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-yellow-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-yellow-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-yellow-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-yellow-light .main-header .navbar .sidebar-toggle:hover{background-color:#e08e0b}@media (max-width:767px){.skin-yellow-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-yellow-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-yellow-light .main-header .navbar .dropdown-menu li a:hover{background:#e08e0b}}.skin-yellow-light .main-header .logo{background-color:#f39c12;color:#fff;border-bottom:0 solid transparent}.skin-yellow-light .main-header .logo:hover{background-color:#f39a0d}.skin-yellow-light .main-header li.user-header{background-color:#f39c12}.skin-yellow-light .content-header{background:transparent}.skin-yellow-light .wrapper,.skin-yellow-light .main-sidebar,.skin-yellow-light .left-side{background-color:#f9fafc}.skin-yellow-light .main-sidebar{border-right:1px solid #d2d6de}.skin-yellow-light .user-panel>.info,.skin-yellow-light .user-panel>.info>a{color:#444}.skin-yellow-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-yellow-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-yellow-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-yellow-light .sidebar-menu>li:hover>a,.skin-yellow-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-yellow-light .sidebar-menu>li.active{border-left-color:#f39c12}.skin-yellow-light .sidebar-menu>li.active>a{font-weight:600}.skin-yellow-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-yellow-light .sidebar a{color:#444}.skin-yellow-light .sidebar a:hover{text-decoration:none}.skin-yellow-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-yellow-light .sidebar-menu .treeview-menu>li.active>a,.skin-yellow-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-yellow-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-yellow-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-yellow-light .sidebar-form input[type=\"text\"],.skin-yellow-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-yellow-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-yellow-light .sidebar-form input[type=\"text\"]:focus,.skin-yellow-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-yellow-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-yellow-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-yellow-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}.skin-purple .main-header .navbar{background-color:#605ca8}.skin-purple .main-header .navbar .nav>li>a{color:#fff}.skin-purple .main-header .navbar .nav>li>a:hover,.skin-purple .main-header .navbar .nav>li>a:active,.skin-purple .main-header .navbar .nav>li>a:focus,.skin-purple .main-header .navbar .nav .open>a,.skin-purple .main-header .navbar .nav .open>a:hover,.skin-purple .main-header .navbar .nav .open>a:focus,.skin-purple .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-purple .main-header .navbar .sidebar-toggle{color:#fff}.skin-purple .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-purple .main-header .navbar .sidebar-toggle{color:#fff}.skin-purple .main-header .navbar .sidebar-toggle:hover{background-color:#555299}@media (max-width:767px){.skin-purple .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-purple .main-header .navbar .dropdown-menu li a{color:#fff}.skin-purple .main-header .navbar .dropdown-menu li a:hover{background:#555299}}.skin-purple .main-header .logo{background-color:#555299;color:#fff;border-bottom:0 solid transparent}.skin-purple .main-header .logo:hover{background-color:#545096}.skin-purple .main-header li.user-header{background-color:#605ca8}.skin-purple .content-header{background:transparent}.skin-purple .wrapper,.skin-purple .main-sidebar,.skin-purple .left-side{background-color:#222d32}.skin-purple .user-panel>.info,.skin-purple .user-panel>.info>a{color:#fff}.skin-purple .sidebar-menu>li.header{color:#4b646f;background:#1a2226}.skin-purple .sidebar-menu>li>a{border-left:3px solid transparent}.skin-purple .sidebar-menu>li:hover>a,.skin-purple .sidebar-menu>li.active>a,.skin-purple .sidebar-menu>li.menu-open>a{color:#fff;background:#1e282c}.skin-purple .sidebar-menu>li.active>a{border-left-color:#605ca8}.skin-purple .sidebar-menu>li>.treeview-menu{margin:0 1px;background:#2c3b41}.skin-purple .sidebar a{color:#b8c7ce}.skin-purple .sidebar a:hover{text-decoration:none}.skin-purple .sidebar-menu .treeview-menu>li>a{color:#8aa4af}.skin-purple .sidebar-menu .treeview-menu>li.active>a,.skin-purple .sidebar-menu .treeview-menu>li>a:hover{color:#fff}.skin-purple .sidebar-form{border-radius:3px;border:1px solid #374850;margin:10px 10px}.skin-purple .sidebar-form input[type=\"text\"],.skin-purple .sidebar-form .btn{box-shadow:none;background-color:#374850;border:1px solid transparent;height:35px}.skin-purple .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-purple .sidebar-form input[type=\"text\"]:focus,.skin-purple .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-purple .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-purple .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}.skin-purple-light .main-header .navbar{background-color:#605ca8}.skin-purple-light .main-header .navbar .nav>li>a{color:#fff}.skin-purple-light .main-header .navbar .nav>li>a:hover,.skin-purple-light .main-header .navbar .nav>li>a:active,.skin-purple-light .main-header .navbar .nav>li>a:focus,.skin-purple-light .main-header .navbar .nav .open>a,.skin-purple-light .main-header .navbar .nav .open>a:hover,.skin-purple-light .main-header .navbar .nav .open>a:focus,.skin-purple-light .main-header .navbar .nav>.active>a{background:rgba(0,0,0,0.1);color:#f6f6f6}.skin-purple-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-purple-light .main-header .navbar .sidebar-toggle:hover{color:#f6f6f6;background:rgba(0,0,0,0.1)}.skin-purple-light .main-header .navbar .sidebar-toggle{color:#fff}.skin-purple-light .main-header .navbar .sidebar-toggle:hover{background-color:#555299}@media (max-width:767px){.skin-purple-light .main-header .navbar .dropdown-menu li.divider{background-color:rgba(255,255,255,0.1)}.skin-purple-light .main-header .navbar .dropdown-menu li a{color:#fff}.skin-purple-light .main-header .navbar .dropdown-menu li a:hover{background:#555299}}.skin-purple-light .main-header .logo{background-color:#605ca8;color:#fff;border-bottom:0 solid transparent}.skin-purple-light .main-header .logo:hover{background-color:#5d59a6}.skin-purple-light .main-header li.user-header{background-color:#605ca8}.skin-purple-light .content-header{background:transparent}.skin-purple-light .wrapper,.skin-purple-light .main-sidebar,.skin-purple-light .left-side{background-color:#f9fafc}.skin-purple-light .main-sidebar{border-right:1px solid #d2d6de}.skin-purple-light .user-panel>.info,.skin-purple-light .user-panel>.info>a{color:#444}.skin-purple-light .sidebar-menu>li{-webkit-transition:border-left-color .3s ease;-o-transition:border-left-color .3s ease;transition:border-left-color .3s ease}.skin-purple-light .sidebar-menu>li.header{color:#848484;background:#f9fafc}.skin-purple-light .sidebar-menu>li>a{border-left:3px solid transparent;font-weight:600}.skin-purple-light .sidebar-menu>li:hover>a,.skin-purple-light .sidebar-menu>li.active>a{color:#000;background:#f4f4f5}.skin-purple-light .sidebar-menu>li.active{border-left-color:#605ca8}.skin-purple-light .sidebar-menu>li.active>a{font-weight:600}.skin-purple-light .sidebar-menu>li>.treeview-menu{background:#f4f4f5}.skin-purple-light .sidebar a{color:#444}.skin-purple-light .sidebar a:hover{text-decoration:none}.skin-purple-light .sidebar-menu .treeview-menu>li>a{color:#777}.skin-purple-light .sidebar-menu .treeview-menu>li.active>a,.skin-purple-light .sidebar-menu .treeview-menu>li>a:hover{color:#000}.skin-purple-light .sidebar-menu .treeview-menu>li.active>a{font-weight:600}.skin-purple-light .sidebar-form{border-radius:3px;border:1px solid #d2d6de;margin:10px 10px}.skin-purple-light .sidebar-form input[type=\"text\"],.skin-purple-light .sidebar-form .btn{box-shadow:none;background-color:#fff;border:1px solid transparent;height:35px}.skin-purple-light .sidebar-form input[type=\"text\"]{color:#666;border-top-left-radius:2px;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:2px}.skin-purple-light .sidebar-form input[type=\"text\"]:focus,.skin-purple-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{background-color:#fff;color:#666}.skin-purple-light .sidebar-form input[type=\"text\"]:focus+.input-group-btn .btn{border-left-color:#fff}.skin-purple-light .sidebar-form .btn{color:#999;border-top-left-radius:0;border-top-right-radius:2px;border-bottom-right-radius:2px;border-bottom-left-radius:0}@media (min-width:768px){.skin-purple-light.sidebar-mini.sidebar-collapse .sidebar-menu>li>.treeview-menu{border-left:1px solid #d2d6de}}",
                        "uuid": "a2d32f4a53ae62f9"
                    },
                    "custom.css": {
                        "isDir": false,
                        "content": ".ck-editor__editable,\ntextarea {\n    min-height: 150px;\n}\n\n.datatable {\n    width: 100% !important;\n}\n\ntable.dataTable tbody td.select-checkbox::before,\ntable.dataTable tbody td.select-checkbox::after,\ntable.dataTable tbody th.select-checkbox::before,\ntable.dataTable tbody th.select-checkbox::after {\n    top: 50%;\n}\n\n.dataTables_length,\n.dataTables_filter,\n.dt-buttons {\n    margin-bottom: 0.333em;\n}\n\n.dt-buttons .btn {\n    margin-left: 0.333em;\n    border-radius: 0;\n}\n\n.table.datatable {\n    box-sizing: border-box;\n    border-collapse: collapse;\n}\n\ntable.dataTable thead th {\n    border-bottom: 2px solid #dee2e6;\n}\n\n.dataTables_wrapper.no-footer .dataTables_scrollBody {\n    border-bottom: 1px solid #dee2e6;\n}\n\n.select2 {\n    max-width: 100%;\n    width: 100%;\n}\n\ntable.dataTable thead .sorting,\ntable.dataTable thead .sorting_asc,\ntable.dataTable thead .sorting_desc {\n    background-image: none;\n}\n\n.btn-group-xs > .btn,\n.btn-xs {\n    padding: 1px 5px;\n    font-size: 12px;\n    line-height: 1.5;\n    border-radius: 3px;\n}\n\n.searchable-title {\n    font-weight: bold;\n}\n.select2-container--open {\n    z-index: 9999;\n}\n.searchable-fields {\n    padding-left:5px;\n}\n.searchable-link {\n    padding:0 5px 0 5px;\n}\n.searchable-link:hover   {\n    cursor: pointer;\n    background: #eaeaea;\n}\n.select2-results__option {\n    padding-left: 0px;\n    padding-right: 0px;\n}\n\n.form-group .required::after {\n    content: \" *\";\n    color: red;\n}\n\n.form-check.is-invalid ~ .invalid-feedback {\n    display: block;\n}\n\n.dataTables_length label select {\n    width: 65px!important;\n}\n\ndiv.dt-button-collection {\n    padding: 0;\n}\n\n.buttons-columnVisibility {\n    display: block;\n}\n\n.buttons-columnVisibility.active {\n    background-color: rgba(128, 128, 128, 0.1);\n    font-weight: bolder;\n}\n",
                        "uuid": "a8e3691a01357b16"
                    }
                },
                "uuid": "f5f53aa8a6ed4622"
            },
            "js": {
                "isDir": true,
                "content": {
                    "main.js": {
                        "isDir": false,
                        "content": "$(document).ready(function () {\n  window._token = $('meta[name=\"csrf-token\"]').attr('content')\n\n  moment.updateLocale('en', {\n    week: {dow: 1} \/\/ Monday is the first day of the week\n  })\n\n  $('.date').datetimepicker({\n    format: 'YYYY-MM-DD',\n    locale: 'en',\n    icons: {\n      up: 'fas fa-chevron-up',\n      down: 'fas fa-chevron-down',\n      previous: 'fas fa-chevron-left',\n      next: 'fas fa-chevron-right'\n    }\n  })\n\n  $('.datetime').datetimepicker({\n    format: 'YYYY-MM-DD HH:mm:ss',\n    locale: 'en',\n    sideBySide: true,\n    icons: {\n      up: 'fas fa-chevron-up',\n      down: 'fas fa-chevron-down',\n      previous: 'fas fa-chevron-left',\n      next: 'fas fa-chevron-right'\n    }\n  })\n\n  $('.timepicker').datetimepicker({\n    format: 'HH:mm:ss',\n    icons: {\n      up: 'fas fa-chevron-up',\n      down: 'fas fa-chevron-down',\n      previous: 'fas fa-chevron-left',\n      next: 'fas fa-chevron-right'\n    }\n  })\n\n  $('.select-all').click(function () {\n    let $select2 = $(this).parent().siblings('.select2')\n    $select2.find('option').prop('selected', 'selected')\n    $select2.trigger('change')\n  })\n  $('.deselect-all').click(function () {\n    let $select2 = $(this).parent().siblings('.select2')\n    $select2.find('option').prop('selected', '')\n    $select2.trigger('change')\n  })\n\n  $('.select2').select2()\n\n  $('.treeview').each(function () {\n    var shouldExpand = false\n    $(this).find('li').each(function () {\n      if ($(this).hasClass('active')) {\n        shouldExpand = true\n      }\n    })\n    if (shouldExpand) {\n      $(this).addClass('active')\n    }\n  })\n\n  $('a[data-widget^=\"pushmenu\"]').click(function () {\n    setTimeout(function() {\n      $($.fn.dataTable.tables(true)).DataTable().columns.adjust();\n    }, 350);\n  })\n})\n",
                        "uuid": "5b1b63ace9fdf4fe"
                    }
                },
                "uuid": "fdab53f15073f9b9"
            },
            "index.php": {
                "isDir": false,
                "content": "<?php\n\nuse Illuminate\\Contracts\\Http\\Kernel;\nuse Illuminate\\Http\\Request;\n\ndefine('LARAVEL_START', microtime(true));\n\n\/*\n|--------------------------------------------------------------------------\n| Check If The Application Is Under Maintenance\n|--------------------------------------------------------------------------\n|\n| If the application is in maintenance \/ demo mode via the \"down\" command\n| we will load this file so that any pre-rendered content can be shown\n| instead of starting the framework, which could cause an exception.\n|\n*\/\n\nif (file_exists($maintenance = __DIR__.'\/..\/storage\/framework\/maintenance.php')) {\n    require $maintenance;\n}\n\n\/*\n|--------------------------------------------------------------------------\n| Register The Auto Loader\n|--------------------------------------------------------------------------\n|\n| Composer provides a convenient, automatically generated class loader for\n| this application. We just need to utilize it! We'll simply require it\n| into the script here so we don't need to manually load our classes.\n|\n*\/\n\nrequire __DIR__.'\/..\/vendor\/autoload.php';\n\n\/*\n|--------------------------------------------------------------------------\n| Run The Application\n|--------------------------------------------------------------------------\n|\n| Once we have the application, we can handle the incoming request using\n| the application's HTTP kernel. Then, we will send the response back\n| to this client's browser, allowing them to enjoy our application.\n|\n*\/\n\n$app = require_once __DIR__.'\/..\/bootstrap\/app.php';\n\n$kernel = $app->make(Kernel::class);\n\n$response = $kernel->handle(\n    $request = Request::capture()\n)->send();\n\n$kernel->terminate($request, $response);\n",
                "uuid": "c182f9f2d3ac10cd"
            }
        },
        "uuid": "3af5667f50f02604"
    },
    "resources": {
        "isDir": true,
        "content": {
            "css": {
                "isDir": true,
                "content": {
                    "app.css": {
                        "isDir": false,
                        "content": "",
                        "uuid": "10b5ef3c9ac7d10e"
                    }
                },
                "uuid": "b2a54fa18e6af334"
            },
            "js": {
                "isDir": true,
                "content": {
                    "app.js": {
                        "isDir": false,
                        "content": "import '.\/bootstrap';\n",
                        "uuid": "8a6d1ca73c489da4"
                    },
                    "bootstrap.js": {
                        "isDir": false,
                        "content": "\/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n *\/\n\nimport axios from 'axios';\nwindow.axios = axios;\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n\/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n *\/\n\n\/\/ import Echo from 'laravel-echo';\n\n\/\/ import Pusher from 'pusher-js';\n\/\/ window.Pusher = Pusher;\n\n\/\/ window.Echo = new Echo({\n\/\/     broadcaster: 'pusher',\n\/\/     key: import.meta.env.VITE_PUSHER_APP_KEY,\n\/\/     cluster: import.meta.env.VITE_PUSHER_APP_CLUSTER ?? 'mt1',\n\/\/     wsHost: import.meta.env.VITE_PUSHER_HOST ? import.meta.env.VITE_PUSHER_HOST : `ws-${import.meta.env.VITE_PUSHER_APP_CLUSTER}.pusher.com`,\n\/\/     wsPort: import.meta.env.VITE_PUSHER_PORT ?? 80,\n\/\/     wssPort: import.meta.env.VITE_PUSHER_PORT ?? 443,\n\/\/     forceTLS: (import.meta.env.VITE_PUSHER_SCHEME ?? 'https') === 'https',\n\/\/     enabledTransports: ['ws', 'wss'],\n\/\/ });\n",
                        "uuid": "9e997ec03a8e991e"
                    }
                },
                "uuid": "47af67e602f86552"
            },
            "lang": {
                "isDir": true,
                "content": {
                    "en": {
                        "isDir": true,
                        "content": {
                            "auth.php": {
                                "isDir": false,
                                "content": "<?php\n\nreturn [\n    'failed'   => 'These credentials do not match our records.',\n    'password' => 'The provided password is incorrect.',\n    'throttle' => 'Too many login attempts. Please try again in :seconds seconds.',\n\n];\n",
                                "uuid": "5c58a9a1412c3c62"
                            },
                            "cruds.php": {
                                "isDir": false,
                                "content": "<?php\n\nreturn [\n    'userManagement' => [\n        'title'          => 'User management',\n        'title_singular' => 'User management',\n    ],\n    'permission' => [\n        'title'          => 'Permissions',\n        'title_singular' => 'Permission',\n        'fields'         => [\n            'id'                => 'ID',\n            'id_helper'         => ' ',\n            'title'             => 'Title',\n            'title_helper'      => ' ',\n            'created_at'        => 'Created at',\n            'created_at_helper' => ' ',\n            'updated_at'        => 'Updated at',\n            'updated_at_helper' => ' ',\n            'deleted_at'        => 'Deleted at',\n            'deleted_at_helper' => ' ',\n        ],\n    ],\n    'role' => [\n        'title'          => 'Roles',\n        'title_singular' => 'Role',\n        'fields'         => [\n            'id'                 => 'ID',\n            'id_helper'          => ' ',\n            'title'              => 'Title',\n            'title_helper'       => ' ',\n            'permissions'        => 'Permissions',\n            'permissions_helper' => ' ',\n            'created_at'         => 'Created at',\n            'created_at_helper'  => ' ',\n            'updated_at'         => 'Updated at',\n            'updated_at_helper'  => ' ',\n            'deleted_at'         => 'Deleted at',\n            'deleted_at_helper'  => ' ',\n        ],\n    ],\n    'user' => [\n        'title'          => 'Users',\n        'title_singular' => 'User',\n        'fields'         => [\n            'id'                       => 'ID',\n            'id_helper'                => ' ',\n            'name'                     => 'Name',\n            'name_helper'              => ' ',\n            'email'                    => 'Email',\n            'email_helper'             => ' ',\n            'email_verified_at'        => 'Email verified at',\n            'email_verified_at_helper' => ' ',\n            'password'                 => 'Password',\n            'password_helper'          => ' ',\n            'roles'                    => 'Roles',\n            'roles_helper'             => ' ',\n            'remember_token'           => 'Remember Token',\n            'remember_token_helper'    => ' ',\n            'created_at'               => 'Created at',\n            'created_at_helper'        => ' ',\n            'updated_at'               => 'Updated at',\n            'updated_at_helper'        => ' ',\n            'deleted_at'               => 'Deleted at',\n            'deleted_at_helper'        => ' ',\n        ],\n    ],\n    'assetManagement' => [\n        'title'          => 'Asset management',\n        'title_singular' => 'Asset management',\n    ],\n    'assetCategory' => [\n        'title'          => 'Categories',\n        'title_singular' => 'Category',\n        'fields'         => [\n            'id'                => 'ID',\n            'id_helper'         => ' ',\n            'name'              => 'Name',\n            'name_helper'       => ' ',\n            'created_at'        => 'Created at',\n            'created_at_helper' => ' ',\n            'updated_at'        => 'Updated At',\n            'updated_at_helper' => ' ',\n            'deleted_at'        => 'Deleted At',\n            'deleted_at_helper' => ' ',\n        ],\n    ],\n    'assetLocation' => [\n        'title'          => 'Locations',\n        'title_singular' => 'Location',\n        'fields'         => [\n            'id'                => 'ID',\n            'id_helper'         => ' ',\n            'name'              => 'Name',\n            'name_helper'       => ' ',\n            'created_at'        => 'Created at',\n            'created_at_helper' => ' ',\n            'updated_at'        => 'Updated At',\n            'updated_at_helper' => ' ',\n            'deleted_at'        => 'Deleted At',\n            'deleted_at_helper' => ' ',\n        ],\n    ],\n    'assetStatus' => [\n        'title'          => 'Statuses',\n        'title_singular' => 'Status',\n        'fields'         => [\n            'id'                => 'ID',\n            'id_helper'         => ' ',\n            'name'              => 'Name',\n            'name_helper'       => ' ',\n            'created_at'        => 'Created at',\n            'created_at_helper' => ' ',\n            'updated_at'        => 'Updated At',\n            'updated_at_helper' => ' ',\n            'deleted_at'        => 'Deleted At',\n            'deleted_at_helper' => ' ',\n        ],\n    ],\n    'asset' => [\n        'title'          => 'Assets',\n        'title_singular' => 'Asset',\n        'fields'         => [\n            'id'                   => 'ID',\n            'id_helper'            => ' ',\n            'category'             => 'Category',\n            'category_helper'      => ' ',\n            'serial_number'        => 'Serial Number',\n            'serial_number_helper' => ' ',\n            'name'                 => 'Name',\n            'name_helper'          => ' ',\n            'photos'               => 'Photos',\n            'photos_helper'        => ' ',\n            'status'               => 'Status',\n            'status_helper'        => ' ',\n            'location'             => 'Location',\n            'location_helper'      => ' ',\n            'notes'                => 'Notes',\n            'notes_helper'         => ' ',\n            'assigned_to'          => 'Assigned to',\n            'assigned_to_helper'   => ' ',\n            'created_at'           => 'Created at',\n            'created_at_helper'    => ' ',\n            'updated_at'           => 'Updated At',\n            'updated_at_helper'    => ' ',\n            'deleted_at'           => 'Deleted At',\n            'deleted_at_helper'    => ' ',\n        ],\n    ],\n    'assetsHistory' => [\n        'title'          => 'Assets History',\n        'title_singular' => 'Assets History',\n        'fields'         => [\n            'id'                   => 'ID',\n            'id_helper'            => ' ',\n            'asset'                => 'Asset',\n            'asset_helper'         => ' ',\n            'status'               => 'Status',\n            'status_helper'        => ' ',\n            'location'             => 'Location',\n            'location_helper'      => ' ',\n            'assigned_user'        => 'Assigned User',\n            'assigned_user_helper' => ' ',\n            'created_at'           => 'Created at',\n            'created_at_helper'    => ' ',\n            'updated_at'           => 'Updated At',\n            'updated_at_helper'    => ' ',\n        ],\n    ],\n    'auditLog' => [\n        'title'          => 'Audit Logs',\n        'title_singular' => 'Audit Log',\n        'fields'         => [\n            'id'                  => 'ID',\n            'id_helper'           => ' ',\n            'description'         => 'Description',\n            'description_helper'  => ' ',\n            'subject_id'          => 'Subject ID',\n            'subject_id_helper'   => ' ',\n            'subject_type'        => 'Subject Type',\n            'subject_type_helper' => ' ',\n            'user_id'             => 'User ID',\n            'user_id_helper'      => ' ',\n            'properties'          => 'Properties',\n            'properties_helper'   => ' ',\n            'host'                => 'Host',\n            'host_helper'         => ' ',\n            'created_at'          => 'Created at',\n            'created_at_helper'   => ' ',\n            'updated_at'          => 'Updated at',\n            'updated_at_helper'   => ' ',\n        ],\n    ],\n    'contentManagement' => [\n        'title'          => 'Content management',\n        'title_singular' => 'Content management',\n    ],\n    'contentCategory' => [\n        'title'          => 'Categories',\n        'title_singular' => 'Category',\n        'fields'         => [\n            'id'                => 'ID',\n            'id_helper'         => ' ',\n            'name'              => 'Name',\n            'name_helper'       => ' ',\n            'slug'              => 'Slug',\n            'slug_helper'       => ' ',\n            'created_at'        => 'Created at',\n            'created_at_helper' => ' ',\n            'updated_at'        => 'Updated At',\n            'updated_at_helper' => ' ',\n            'deleted_at'        => 'Deleted At',\n            'deleted_at_helper' => ' ',\n        ],\n    ],\n    'contentTag' => [\n        'title'          => 'Tags',\n        'title_singular' => 'Tag',\n        'fields'         => [\n            'id'                => 'ID',\n            'id_helper'         => ' ',\n            'name'              => 'Name',\n            'name_helper'       => ' ',\n            'slug'              => 'Slug',\n            'slug_helper'       => ' ',\n            'created_at'        => 'Created at',\n            'created_at_helper' => ' ',\n            'updated_at'        => 'Updated At',\n            'updated_at_helper' => ' ',\n            'deleted_at'        => 'Deleted At',\n            'deleted_at_helper' => ' ',\n        ],\n    ],\n    'contentPage' => [\n        'title'          => 'Pages',\n        'title_singular' => 'Page',\n        'fields'         => [\n            'id'                    => 'ID',\n            'id_helper'             => ' ',\n            'title'                 => 'Title',\n            'title_helper'          => ' ',\n            'category'              => 'Categories',\n            'category_helper'       => ' ',\n            'tag'                   => 'Tags',\n            'tag_helper'            => ' ',\n            'page_text'             => 'Full Text',\n            'page_text_helper'      => ' ',\n            'excerpt'               => 'Excerpt',\n            'excerpt_helper'        => ' ',\n            'featured_image'        => 'Featured Image',\n            'featured_image_helper' => ' ',\n            'created_at'            => 'Created at',\n            'created_at_helper'     => ' ',\n            'updated_at'            => 'Updated At',\n            'updated_at_helper'     => ' ',\n            'deleted_at'            => 'Deleted At',\n            'deleted_at_helper'     => ' ',\n        ],\n    ],\n    'provinsi' => [\n        'title'          => 'Provinsi',\n        'title_singular' => 'Provinsi',\n        'fields'         => [\n            'id'                => 'ID',\n            'id_helper'         => ' ',\n            'kode'              => 'Kode',\n            'kode_helper'       => ' ',\n            'nama'              => 'Nama',\n            'nama_helper'       => ' ',\n            'logo'              => 'Logo',\n            'logo_helper'       => 'logo',\n            'created_at'        => 'Created at',\n            'created_at_helper' => ' ',\n            'updated_at'        => 'Updated at',\n            'updated_at_helper' => ' ',\n            'deleted_at'        => 'Deleted at',\n            'deleted_at_helper' => ' ',\n        ],\n    ],\n\n];\n",
                                "uuid": "ca3c4f5f4a0f1c60"
                            },
                            "global.php": {
                                "isDir": false,
                                "content": "<?php\n\nreturn [\n    'actions'                        => 'Actions',\n    'add'                            => 'Add',\n    'allRightsReserved'              => 'All rights reserved.',\n    'areYouSure'                     => 'Are you sure?',\n    'clickHereToVerify'              => 'Click here to verify',\n    'create'                         => 'Create',\n    'dashboard'                      => 'Dashboard',\n    'delete'                         => 'Delete',\n    'cancel'                         => 'Cancel',\n    'clear'                          => 'Clear',\n    'downloadFile'                   => 'Download file',\n    'edit'                           => 'Edit',\n    'emailVerificationSuccess'       => 'User email verified successfully',\n    'entries'                        => 'Entries',\n    'filterDate'                     => 'Filter by date',\n    'forgot_password'                => 'Forgot your password?',\n    'home'                           => 'Home',\n    'list'                           => 'List',\n    'login'                          => 'Login',\n    'login_email'                    => 'Email',\n    'login_password'                 => 'Password',\n    'login_password_confirmation'    => 'Password confirmation',\n    'logout'                         => 'Logout',\n    'month'                          => 'Month',\n    'no'                             => 'No',\n    'pleaseSelect'                   => 'Please select',\n    'register'                       => 'Register',\n    'remember_me'                    => 'Remember me',\n    'reset_password'                 => 'Reset Password',\n    'send_password'                  => 'Send Password Reset Link',\n    'save'                           => 'Save',\n    'search'                         => 'Search',\n    'searching'                      => 'Searching',\n    'no_results'                     => 'No results',\n    'results_could_not_be_loaded'    => 'The results could not be loaded',\n    'search_input_too_short'         => 'Please enter :count or more characters',\n    'show'                           => 'Show',\n    'systemCalendar'                 => 'Calendar',\n    'thankYouForUsingOurApplication' => 'Thank you for using our website',\n    'timeFrom'                       => 'From',\n    'timeTo'                         => 'To',\n    'toggleNavigation'               => 'Toggle navigation',\n    'user_name'                      => 'Name',\n    'verifyYourEmail'                => 'Please verify your email',\n    'verifyYourUser'                 => 'To finish your registration - site asks you to verify your email',\n    'view'                           => 'View',\n    'view_file'                      => 'View file',\n    'year'                           => 'Year',\n    'yes'                            => 'Yes',\n    'youAreLoggedIn'                 => 'You are logged in!',\n    'yourAccountNeedsAdminApproval'  => 'Your accounts needs an administrator approval in order to log in',\n    'submit'                         => 'Submit',\n    'relatedData'                    => 'Related Data',\n    'update_profile_success'         => 'Profile updated successfully',\n    'change_password_success'        => 'Password changed successfully',\n    'delete_account_success'         => 'Account deleted successfully',\n    'saved'                          => 'Saved.',\n    'profile_information'            => 'Profile information',\n    'all_messages'                   => 'All Messages',\n    'new_message'                    => 'New message',\n    'messages'                       => 'Messages',\n    'inbox'                          => 'Inbox',\n    'outbox'                         => 'Outbox',\n    'subject'                        => 'Subject',\n    'recipients'                     => 'Recipients',\n    'from'                           => 'From',\n    'to'                             => 'To',\n    'reply'                          => 'Reply',\n    'body'                           => 'Body',\n    'discard'                        => 'Discard',\n    'datatables'                     => [\n        'copy'          => 'Copy',\n        'csv'           => 'CSV',\n        'excel'         => 'Excel',\n        'pdf'           => 'PDF',\n        'print'         => 'Print',\n        'colvis'        => 'Columns',\n        'delete'        => 'Delete selected',\n        'zero_selected' => 'No rows selected',\n    ],\n    'billing' => [\n        'menu'                        => 'Billing',\n        'current_plan'                => 'Your current plan',\n        'choose_this_plan'            => 'Choose this plan',\n        'month'                       => 'month',\n        'trial_user'                  => 'Trial User',\n        'plan_purchased_successfully' => 'Plan purchased successfully',\n    ],\n    'payments' => [\n        'title'        => 'Payments',\n        'payment_date' => 'Payment Date',\n        'amount'       => 'Amount',\n    ],\n    'table'                                => 'Table',\n    'back'                                 => 'Back',\n    'refresh'                              => 'Refresh',\n    'close'                                => 'Close',\n    'create_success'                       => 'Your item has been successfully saved.',\n    'update_success'                       => 'Your item has been successfully updated.',\n    'delete_success'                       => 'Your item has been successfully deleted.',\n    'action'                               => 'Action',\n    'action_id'                            => 'Action id',\n    'action_model'                         => 'Action model',\n    'address'                              => 'Address',\n    'administrator_can_create_other_users' => 'Administrator (can create other users)',\n    'aggregate_function_use'               => 'Aggregate function to use',\n    'all'                                  => 'All',\n    'amount'                               => 'Amount',\n    'answer'                               => 'Answer',\n    'app_csv_file_to_import'               => 'CSV file to import',\n    'app_csvImport'                        => 'CSV Import',\n    'app_file_contains_header_row'         => 'File contains header row?',\n    'app_import_data'                      => 'Import data',\n    'app_imported_rows_to_table'           => 'Imported :rows rows to :table table',\n    'app_parse_csv'                        => 'Parse CSV',\n    'asset'                                => 'Asset',\n    'assets'                               => 'Assets',\n    'assets_history'                       => 'Assets history',\n    'assets_management'                    => 'Assets management',\n    'assigned_to'                          => 'Assigned to',\n    'assigned_user'                        => 'Assigned (user)',\n    'attachment'                           => 'Attachment',\n    'axis'                                 => 'Axis',\n    'back_to_list'                         => 'Back to list',\n    'basic_crm'                            => 'Basic CRM',\n    'budget'                               => 'Budget',\n    'calendar_sources'                     => 'Calendar sources',\n    'campaign'                             => 'Campaign',\n    'campaigns'                            => 'Campaigns',\n    'categories'                           => 'Categories',\n    'category'                             => 'Category',\n    'category_name'                        => 'Category name',\n    'change_notifications_field_1_label'   => 'Send email notification to User',\n    'change_notifications_field_2_label'   => 'When Entry on CRUD',\n    'my_profile'                           => 'My profile',\n    'my_team'                              => 'My team',\n    'change_password'                      => 'Change password',\n    'delete_account'                       => 'Delete account',\n    'delete_account_warning'               => 'Enter your email address to confirm you want to delete account.\\nThis action is not reversible.',\n    'two_factor'                           => [\n        'title'          => 'Two factor authentication',\n        'sub_title'      => 'Two factor authentication code has been sent via email. Code is valid for :minutes minutes. If you haven\\'t received it, press resend.',\n        'code'           => 'Two Factor Code',\n        'does_not_match' => 'The two factor code you have entered does not match',\n        'sent_again'     => 'The two factor code has been sent again',\n        'expired'        => 'The two factor code has expired. Please login again.',\n        'enabled'        => 'Two factor authentication enabled successfully',\n        'disabled'       => 'Two factor authentication disabled successfully',\n        'your_code_is'   => 'Your two factor code is :code.',\n        'will_expire_in' => 'The code will expire in :minutes minutes.',\n        'ignore_this'    => 'If you have not tried to login, ignore this message.',\n        'verify_here'    => 'Verify Here',\n        'verify'         => 'Verify',\n        'phone_number'   => 'Phone Number',\n        'enable'         => 'Enable',\n        'disable'        => 'Disable',\n        'resend'         => 'Resend',\n    ],\n    'chart_type'                     => 'Chart type',\n    'code'                           => 'Code',\n    'companies'                      => 'Companies',\n    'company'                        => 'Company',\n    'company_name'                   => 'Company name',\n    'confirm_password'               => 'Confirm password',\n    'contact_management'             => 'Contact management',\n    'contacts'                       => 'Contacts',\n    'content_management'             => 'Content management',\n    'copy_paste_url_bellow'          => 'button, copy and paste the URL below into your web browser:',\n    'country'                        => 'Country',\n    'coupon_management'              => 'Coupon Management',\n    'coupons'                        => 'Coupons',\n    'coupons_amount'                 => 'Coupons amount',\n    'create_new_calendar_source'     => 'Create new Calendar Source',\n    'create_new_notification'        => 'Create new Notification',\n    'create_new_report'              => 'Create new report',\n    'created_at'                     => 'Created at',\n    'crud_date_field'                => 'Crud date field',\n    'crud_event_field'               => 'Event label field',\n    'crud_title'                     => 'Crud title',\n    'csv_file_to_import'             => 'CSV file to import',\n    'csvImport'                      => 'CSV Import',\n    'current_password'               => 'Current password',\n    'custom_controller_index'        => 'Custom controller index.',\n    'customer'                       => 'Customer',\n    'customers'                      => 'Customers',\n    'deleted_at'                     => 'Deleted at',\n    'description'                    => 'Description',\n    'deselect_all'                   => 'Deselect all',\n    'discount_amount'                => 'Discount amount',\n    'discount_percent'               => 'Discount percent',\n    'due_date'                       => 'Due date',\n    'edit_calendar_source'           => 'Edit Calendar Source',\n    'email_greet'                    => 'Hello',\n    'email_line1'                    => 'You are receiving this email because we received a password reset request for your account.',\n    'email_line2'                    => 'If you did not request a password reset, no further action is required.',\n    'email_regards'                  => 'Regards',\n    'end_time'                       => 'End time',\n    'entry_date'                     => 'Entry date',\n    'excerpt'                        => 'Excerpt',\n    'faq_management'                 => 'FAQ Management',\n    'featured_image'                 => 'Featured image',\n    'fee_percent'                    => 'Fee percent',\n    'file'                           => 'File',\n    'file_contains_header_row'       => 'File contains header row?',\n    'first_name'                     => 'First name',\n    'group_by'                       => 'Group by',\n    'if_you_are_having_trouble'      => 'If you\u2019re having trouble clicking the',\n    'import_data'                    => 'Import data',\n    'imported_rows_to_table'         => 'Imported :rows rows to :table table',\n    'integer_float_placeholder'      => 'Please select one of integer\/float fields',\n    'is_created'                     => 'is created',\n    'is_deleted'                     => 'is deleted',\n    'is_updated'                     => 'is updated',\n    'label_field'                    => 'Label field',\n    'last_name'                      => 'Last name',\n    'location'                       => 'Location',\n    'locations'                      => 'Locations',\n    'main_currency'                  => 'Main currency',\n    'message'                        => 'Message',\n    'name'                           => 'Name',\n    'new_calendar_source'            => 'Create new calendar source',\n    'new_password'                   => 'New password',\n    'no_calendar_sources'            => 'No calendar sources yet.',\n    'no_entries_in_table'            => 'No entries in table',\n    'no_reports_yet'                 => 'No reports yet.',\n    'not_approved_p'                 => 'Your account is still not approved by administrator. Please, be patient and try again later.',\n    'not_approved_title'             => 'You are not approved',\n    'note_text'                      => 'Note text',\n    'notifications'                  => 'Notifications',\n    'notify_user'                    => 'Notify User',\n    'pages'                          => 'Pages',\n    'parse_csv'                      => 'Parse CSV',\n    'permadel'                       => 'Delete Permanently',\n    'phone'                          => 'Phone',\n    'phone1'                         => 'Phone 1',\n    'phone2'                         => 'Phone 2',\n    'photo'                          => 'Photo (max 8mb)',\n    'photo1'                         => 'Photo1',\n    'photo2'                         => 'Photo2',\n    'photo3'                         => 'Photo3',\n    'prefix'                         => 'Prefix',\n    'price'                          => 'Price',\n    'product_management'             => 'Product management',\n    'product_name'                   => 'Product name',\n    'products'                       => 'Products',\n    'question'                       => 'Question',\n    'questions'                      => 'Questions',\n    'recipient'                      => 'Recipient',\n    'redeem_time'                    => 'Redeem time',\n    'registration'                   => 'Registration',\n    'remember_token'                 => 'Remember token',\n    'reports_x_axis_field'           => 'X-axis - please choose one of date\/time fields',\n    'reports_y_axis_field'           => 'Y-axis - please choose one of number fields',\n    'reset_password_woops'           => '<strong>Whoops!<\/strong> There were problems with input:',\n    'restore'                        => 'Restore',\n    'sample_answer'                  => 'Sample answer',\n    'sample_category'                => 'Sample category',\n    'sample_question'                => 'Sample question',\n    'select_all'                     => 'Select all',\n    'select_crud_placeholder'        => 'Please select one of your CRUDs',\n    'select_dt_placeholder'          => 'Please select one of date\/time fields',\n    'select_users_placeholder'       => 'Please select one of your Users',\n    'send'                           => 'Send',\n    'serial_number'                  => 'Serial number',\n    'simple_user'                    => 'Simple user',\n    'skype'                          => 'Skype',\n    'slug'                           => 'Slug',\n    'start_date'                     => 'Start date',\n    'start_time'                     => 'Start time',\n    'status'                         => 'Status',\n    'statuses'                       => 'Statuses',\n    'stripe_transactions'            => 'Stripe Transactions',\n    'subscription-billing'           => 'Subscriptions',\n    'subscription-payments'          => 'Payments',\n    'suffix'                         => 'Sufix',\n    'tag'                            => 'Tag',\n    'tags'                           => 'Tags',\n    'task_management'                => 'Task management',\n    'tasks'                          => 'Tasks',\n    'team-management'                => 'Teams',\n    'team-management-singular'       => 'Team',\n    'text'                           => 'Text',\n    'there_were_problems_with_input' => 'There were problems with input',\n    'time'                           => 'Time',\n    'title'                          => 'Title',\n    'transaction_date'               => 'Transaction date',\n    'trash'                          => 'Trash',\n    'update'                         => 'Update',\n    'updated_at'                     => 'Updated at',\n    'upgrade_to_premium'             => 'Upgrade to Premium',\n    'user_actions'                   => 'User actions',\n    'valid_from'                     => 'Valid from',\n    'valid_to'                       => 'Valid to',\n    'website'                        => 'Website',\n    'when_crud'                      => 'When CRUD',\n    'whoops'                         => 'Whoops!',\n    'x_axis_field'                   => 'X-axis field (date\/time)',\n    'x_axis_group_by'                => 'X-axis group by',\n    'y_axis_field'                   => 'Y-axis field',\n    'you_have_no_messages'           => 'You have no messages.',\n    'content'                        => 'Content',\n    'no_alerts'                      => 'No alerts',\n    'test_answers'                   => 'Test Answers',\n    'test_results'                   => 'Test Results',\n    'question_options'               => 'Question Options',\n    'tests'                          => 'Tests',\n    'lessons'                        => 'Lessons',\n    'courses'                        => 'Courses',\n    'team-members'                   => 'Team members',\n    'no_team_notice'                 => 'Currently you do not have any teams assigned. You can set up a new one:',\n    'team_name'                      => 'Team name',\n    'invite_member'                  => 'Invite member',\n    'invite_sent'                    => 'Invitation sent.',\n    'manage_team_members'            => 'Manage team members',\n    'remove'                         => 'Remove',\n    'team_no_members_notice'         => 'Your team has no members yet.',\n    'disband_team'                   => 'Disband team',\n    'team_disband_notice'            => 'All your team members will no longer have team assigned.',\n    'leave'                          => 'Leave',\n    'calendar'                       => 'Calendar',\n    'messenger'                      => 'Messenger',\n\n];\n",
                                "uuid": "fc29c21887c8af21"
                            },
                            "pagination.php": {
                                "isDir": false,
                                "content": "<?php\n\nreturn [\n    'previous' => '&laquo; Previous',\n    'next'     => 'Next &raquo;',\n\n];\n",
                                "uuid": "130a1bdf8a250533"
                            },
                            "panel.php": {
                                "isDir": false,
                                "content": "<?php\n\nreturn [\n    'site_title' => 'IDEP Foundation',\n\n];\n",
                                "uuid": "6d6319549b9034de"
                            },
                            "passwords.php": {
                                "isDir": false,
                                "content": "<?php\n\nreturn [\n    'password' => 'Passwords must be at least six characters and match the confirmation.',\n    'reset'    => 'Your password has been reset!',\n    'sent'     => 'We have e-mailed your password reset link!',\n    'token'    => 'This password reset token is invalid.',\n    'user'     => 'We can\\'t find a user with that e-mail address.',\n    'updated'  => 'Your password has been changed!',\n\n];\n",
                                "uuid": "19a1a6085ce757e8"
                            },
                            "validation.php": {
                                "isDir": false,
                                "content": "<?php\n\nreturn [\n    'accepted'         => 'The :attribute must be accepted.',\n    'active_url'       => 'The :attribute is not a valid URL.',\n    'after'            => 'The :attribute must be a date after :date.',\n    'after_or_equal'   => 'The :attribute must be a date after or equal to :date.',\n    'alpha'            => 'The :attribute may only contain letters.',\n    'alpha_dash'       => 'The :attribute may only contain letters, numbers, and dashes.',\n    'alpha_num'        => 'The :attribute may only contain letters and numbers.',\n    'latin'            => 'The :attribute may only contain ISO basic Latin alphabet letters.',\n    'latin_dash_space' => 'The :attribute may only contain ISO basic Latin alphabet letters, numbers, dashes, hyphens and spaces.',\n    'array'            => 'The :attribute must be an array.',\n    'before'           => 'The :attribute must be a date before :date.',\n    'before_or_equal'  => 'The :attribute must be a date before or equal to :date.',\n    'between'          => [\n        'numeric' => 'The :attribute must be between :min and :max.',\n        'file'    => 'The :attribute must be between :min and :max kilobytes.',\n        'string'  => 'The :attribute must be between :min and :max characters.',\n        'array'   => 'The :attribute must have between :min and :max items.',\n    ],\n    'boolean'          => 'The :attribute field must be true or false.',\n    'confirmed'        => 'The :attribute confirmation does not match.',\n    'current_password' => 'The password is incorrect.',\n    'date'             => 'The :attribute is not a valid date.',\n    'date_equals'      => 'The :attribute must be a date equal to :date.',\n    'date_format'      => 'The :attribute does not match the format :format.',\n    'different'        => 'The :attribute and :other must be different.',\n    'digits'           => 'The :attribute must be :digits digits.',\n    'digits_between'   => 'The :attribute must be between :min and :max digits.',\n    'dimensions'       => 'The :attribute has invalid image dimensions.',\n    'distinct'         => 'The :attribute field has a duplicate value.',\n    'email'            => 'The :attribute must be a valid email address.',\n    'ends_with'        => 'The :attribute must end with one of the following: :values.',\n    'exists'           => 'The selected :attribute is invalid.',\n    'file'             => 'The :attribute must be a file.',\n    'filled'           => 'The :attribute field must have a value.',\n    'gt'               => [\n        'numeric' => 'The :attribute must be greater than :value.',\n        'file'    => 'The :attribute must be greater than :value kilobytes.',\n        'string'  => 'The :attribute must be greater than :value characters.',\n        'array'   => 'The :attribute must have more than :value items.',\n    ],\n    'gte' => [\n        'numeric' => 'The :attribute must be greater than or equal :value.',\n        'file'    => 'The :attribute must be greater than or equal :value kilobytes.',\n        'string'  => 'The :attribute must be greater than or equal :value characters.',\n        'array'   => 'The :attribute must have :value items or more.',\n    ],\n    'image'    => 'The :attribute must be an image.',\n    'in'       => 'The selected :attribute is invalid.',\n    'in_array' => 'The :attribute field does not exist in :other.',\n    'integer'  => 'The :attribute must be an integer.',\n    'ip'       => 'The :attribute must be a valid IP address.',\n    'ipv4'     => 'The :attribute must be a valid IPv4 address.',\n    'ipv6'     => 'The :attribute must be a valid IPv6 address.',\n    'json'     => 'The :attribute must be a valid JSON string.',\n    'lt'       => [\n        'numeric' => 'The :attribute must be less than :value.',\n        'file'    => 'The :attribute must be less than :value kilobytes.',\n        'string'  => 'The :attribute must be less than :value characters.',\n        'array'   => 'The :attribute must have less than :value items.',\n    ],\n    'lte' => [\n        'numeric' => 'The :attribute must be less than or equal :value.',\n        'file'    => 'The :attribute must be less than or equal :value kilobytes.',\n        'string'  => 'The :attribute must be less than or equal :value characters.',\n        'array'   => 'The :attribute must not have more than :value items.',\n    ],\n    'max' => [\n        'numeric' => 'The :attribute may not be greater than :max.',\n        'file'    => 'The :attribute may not be greater than :max kilobytes.',\n        'string'  => 'The :attribute may not be greater than :max characters.',\n        'array'   => 'The :attribute may not have more than :max items.',\n    ],\n    'mimes'     => 'The :attribute must be a file of type: :values.',\n    'mimetypes' => 'The :attribute must be a file of type: :values.',\n    'min'       => [\n        'numeric' => 'The :attribute must be at least :min.',\n        'file'    => 'The :attribute must be at least :min kilobytes.',\n        'string'  => 'The :attribute must be at least :min characters.',\n        'array'   => 'The :attribute must have at least :min items.',\n    ],\n    'not_in'               => 'The selected :attribute is invalid.',\n    'not_regex'            => 'The :attribute format is invalid.',\n    'numeric'              => 'The :attribute must be a number.',\n    'password'             => 'The password is incorrect.',\n    'present'              => 'The :attribute field must be present.',\n    'regex'                => 'The :attribute format is invalid.',\n    'required'             => 'The :attribute field is required.',\n    'required_if'          => 'The :attribute field is required when :other is :value.',\n    'required_unless'      => 'The :attribute field is required unless :other is in :values.',\n    'required_with'        => 'The :attribute field is required when :values is present.',\n    'required_with_all'    => 'The :attribute field is required when :values is present.',\n    'required_without'     => 'The :attribute field is required when :values is not present.',\n    'required_without_all' => 'The :attribute field is required when none of :values are present.',\n    'same'                 => 'The :attribute and :other must match.',\n    'size'                 => [\n        'numeric' => 'The :attribute must be :size.',\n        'file'    => 'The :attribute must be :size kilobytes.',\n        'string'  => 'The :attribute must be :size characters.',\n        'array'   => 'The :attribute must contain :size items.',\n    ],\n    'starts_with' => 'The :attribute must start with one of the following: :values.',\n    'string'      => 'The :attribute must be a string.',\n    'timezone'    => 'The :attribute must be a valid zone.',\n    'unique'      => 'The :attribute has already been taken.',\n    'uploaded'    => 'The :attribute failed to upload.',\n    'url'         => 'The :attribute format is invalid.',\n    'uuid'        => 'The :attribute must be a valid UUID.',\n    'custom'      => [\n        'attribute-name' => [\n            'rule-name' => 'custom-message',\n        ],\n    ],\n    'reserved_word'                  => 'The :attribute contains reserved word',\n    'dont_allow_first_letter_number' => 'The \\\":input\\\" field can\\'t have first letter as a number',\n    'exceeds_maximum_number'         => 'The :attribute exceeds maximum model length',\n    'db_column'                      => 'The :attribute may only contain ISO basic Latin alphabet letters, numbers, dash and cannot start with number.',\n    'attributes'                     => [],\n\n];\n",
                                "uuid": "e1d2f8e9bb2ed846"
                            }
                        },
                        "uuid": "a7f810722840fb57"
                    }
                },
                "uuid": "77dd58200f62e604"
            },
            "views": {
                "isDir": true,
                "content": {
                    "admin": {
                        "isDir": true,
                        "content": {
                            "assetCategories": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.assetCategory.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.asset-categories.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.assetCategory.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', '') }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.assetCategory.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "3361deda5ed3779a"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.assetCategory.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.asset-categories.update\", [$assetCategory->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.assetCategory.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', $assetCategory->name) }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.assetCategory.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "36ac247bd44d1c2e"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('asset_category_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.asset-categories.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.assetCategory.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.assetCategory.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-AssetCategory\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetCategory.fields.id') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetCategory.fields.name') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($assetCategories as $key => $assetCategory)\n                        <tr data-entry-id=\"{{ $assetCategory->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $assetCategory->id ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $assetCategory->name ?? '' }}\n                            <\/td>\n                            <td>\n                                @can('asset_category_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.asset-categories.show', $assetCategory->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('asset_category_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.asset-categories.edit', $assetCategory->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('asset_category_delete')\n                                    <form action=\"{{ route('admin.asset-categories.destroy', $assetCategory->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('asset_category_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.asset-categories.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-AssetCategory:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "52d9f5556102b8a7"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.assetCategory.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.asset-categories.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetCategory.fields.id') }}\n                        <\/th>\n                        <td>\n                            {{ $assetCategory->id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetCategory.fields.name') }}\n                        <\/th>\n                        <td>\n                            {{ $assetCategory->name }}\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.asset-categories.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "bec6c628d9681fb6"
                                    }
                                },
                                "uuid": "edea7b2b44bc2504"
                            },
                            "assetLocations": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.assetLocation.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.asset-locations.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.assetLocation.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', '') }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.assetLocation.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "391b5603e2d4637c"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.assetLocation.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.asset-locations.update\", [$assetLocation->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.assetLocation.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', $assetLocation->name) }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.assetLocation.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "e3410675d21d5a03"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('asset_location_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.asset-locations.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.assetLocation.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.assetLocation.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-AssetLocation\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetLocation.fields.id') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetLocation.fields.name') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($assetLocations as $key => $assetLocation)\n                        <tr data-entry-id=\"{{ $assetLocation->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $assetLocation->id ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $assetLocation->name ?? '' }}\n                            <\/td>\n                            <td>\n                                @can('asset_location_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.asset-locations.show', $assetLocation->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('asset_location_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.asset-locations.edit', $assetLocation->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('asset_location_delete')\n                                    <form action=\"{{ route('admin.asset-locations.destroy', $assetLocation->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('asset_location_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.asset-locations.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-AssetLocation:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "45eaad701c5e9dc6"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.assetLocation.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.asset-locations.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetLocation.fields.id') }}\n                        <\/th>\n                        <td>\n                            {{ $assetLocation->id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetLocation.fields.name') }}\n                        <\/th>\n                        <td>\n                            {{ $assetLocation->name }}\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.asset-locations.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "8076c773f231fdc4"
                                    }
                                },
                                "uuid": "502204c63a107604"
                            },
                            "assetStatuses": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.assetStatus.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.asset-statuses.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.assetStatus.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', '') }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.assetStatus.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "169989d1a8f5ce00"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.assetStatus.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.asset-statuses.update\", [$assetStatus->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.assetStatus.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', $assetStatus->name) }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.assetStatus.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "992158596162e2a4"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('asset_status_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.asset-statuses.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.assetStatus.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.assetStatus.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-AssetStatus\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetStatus.fields.id') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetStatus.fields.name') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($assetStatuses as $key => $assetStatus)\n                        <tr data-entry-id=\"{{ $assetStatus->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $assetStatus->id ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $assetStatus->name ?? '' }}\n                            <\/td>\n                            <td>\n                                @can('asset_status_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.asset-statuses.show', $assetStatus->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('asset_status_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.asset-statuses.edit', $assetStatus->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('asset_status_delete')\n                                    <form action=\"{{ route('admin.asset-statuses.destroy', $assetStatus->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('asset_status_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.asset-statuses.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-AssetStatus:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "9e5afb4cb4004c7f"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.assetStatus.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.asset-statuses.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetStatus.fields.id') }}\n                        <\/th>\n                        <td>\n                            {{ $assetStatus->id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetStatus.fields.name') }}\n                        <\/th>\n                        <td>\n                            {{ $assetStatus->name }}\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.asset-statuses.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "99d8fcccd8d46f5a"
                                    }
                                },
                                "uuid": "8c0b2eb258666fb6"
                            },
                            "assets": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.asset.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.assets.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"category_id\">{{ trans('cruds.asset.fields.category') }}<\/label>\n                <select class=\"form-control select2 {{ $errors->has('category') ? 'is-invalid' : '' }}\" name=\"category_id\" id=\"category_id\" required>\n                    @foreach($categories as $id => $entry)\n                        <option value=\"{{ $id }}\" {{ old('category_id') == $id ? 'selected' : '' }}>{{ $entry }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('category'))\n                    <span class=\"text-danger\">{{ $errors->first('category') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.category_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"serial_number\">{{ trans('cruds.asset.fields.serial_number') }}<\/label>\n                <input class=\"form-control {{ $errors->has('serial_number') ? 'is-invalid' : '' }}\" type=\"text\" name=\"serial_number\" id=\"serial_number\" value=\"{{ old('serial_number', '') }}\">\n                @if($errors->has('serial_number'))\n                    <span class=\"text-danger\">{{ $errors->first('serial_number') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.serial_number_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.asset.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', '') }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"photos\">{{ trans('cruds.asset.fields.photos') }}<\/label>\n                <div class=\"needsclick dropzone {{ $errors->has('photos') ? 'is-invalid' : '' }}\" id=\"photos-dropzone\">\n                <\/div>\n                @if($errors->has('photos'))\n                    <span class=\"text-danger\">{{ $errors->first('photos') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.photos_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"status_id\">{{ trans('cruds.asset.fields.status') }}<\/label>\n                <select class=\"form-control select2 {{ $errors->has('status') ? 'is-invalid' : '' }}\" name=\"status_id\" id=\"status_id\" required>\n                    @foreach($statuses as $id => $entry)\n                        <option value=\"{{ $id }}\" {{ old('status_id') == $id ? 'selected' : '' }}>{{ $entry }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('status'))\n                    <span class=\"text-danger\">{{ $errors->first('status') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.status_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"location_id\">{{ trans('cruds.asset.fields.location') }}<\/label>\n                <select class=\"form-control select2 {{ $errors->has('location') ? 'is-invalid' : '' }}\" name=\"location_id\" id=\"location_id\" required>\n                    @foreach($locations as $id => $entry)\n                        <option value=\"{{ $id }}\" {{ old('location_id') == $id ? 'selected' : '' }}>{{ $entry }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('location'))\n                    <span class=\"text-danger\">{{ $errors->first('location') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.location_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"notes\">{{ trans('cruds.asset.fields.notes') }}<\/label>\n                <textarea class=\"form-control {{ $errors->has('notes') ? 'is-invalid' : '' }}\" name=\"notes\" id=\"notes\">{{ old('notes') }}<\/textarea>\n                @if($errors->has('notes'))\n                    <span class=\"text-danger\">{{ $errors->first('notes') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.notes_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"assigned_to_id\">{{ trans('cruds.asset.fields.assigned_to') }}<\/label>\n                <select class=\"form-control select2 {{ $errors->has('assigned_to') ? 'is-invalid' : '' }}\" name=\"assigned_to_id\" id=\"assigned_to_id\">\n                    @foreach($assigned_tos as $id => $entry)\n                        <option value=\"{{ $id }}\" {{ old('assigned_to_id') == $id ? 'selected' : '' }}>{{ $entry }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('assigned_to'))\n                    <span class=\"text-danger\">{{ $errors->first('assigned_to') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.assigned_to_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n\n@section('scripts')\n<script>\n    var uploadedPhotosMap = {}\nDropzone.options.photosDropzone = {\n    url: '{{ route('admin.assets.storeMedia') }}',\n    maxFilesize: 2, \/\/ MB\n    addRemoveLinks: true,\n    headers: {\n      'X-CSRF-TOKEN': \"{{ csrf_token() }}\"\n    },\n    params: {\n      size: 2\n    },\n    success: function (file, response) {\n      $('form').append('<input type=\"hidden\" name=\"photos[]\" value=\"' + response.name + '\">')\n      uploadedPhotosMap[file.name] = response.name\n    },\n    removedfile: function (file) {\n      file.previewElement.remove()\n      var name = ''\n      if (typeof file.file_name !== 'undefined') {\n        name = file.file_name\n      } else {\n        name = uploadedPhotosMap[file.name]\n      }\n      $('form').find('input[name=\"photos[]\"][value=\"' + name + '\"]').remove()\n    },\n    init: function () {\n@if(isset($asset) && $asset->photos)\n          var files =\n            {!! json_encode($asset->photos) !!}\n              for (var i in files) {\n              var file = files[i]\n              this.options.addedfile.call(this, file)\n              file.previewElement.classList.add('dz-complete')\n              $('form').append('<input type=\"hidden\" name=\"photos[]\" value=\"' + file.file_name + '\">')\n            }\n@endif\n    },\n     error: function (file, response) {\n         if ($.type(response) === 'string') {\n             var message = response \/\/dropzone sends it's own error messages in string\n         } else {\n             var message = response.errors.file\n         }\n         file.previewElement.classList.add('dz-error')\n         _ref = file.previewElement.querySelectorAll('[data-dz-errormessage]')\n         _results = []\n         for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n             node = _ref[_i]\n             _results.push(node.textContent = message)\n         }\n\n         return _results\n     }\n}\n<\/script>\n@endsection",
                                        "uuid": "143902d41cb025de"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.asset.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.assets.update\", [$asset->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"category_id\">{{ trans('cruds.asset.fields.category') }}<\/label>\n                <select class=\"form-control select2 {{ $errors->has('category') ? 'is-invalid' : '' }}\" name=\"category_id\" id=\"category_id\" required>\n                    @foreach($categories as $id => $entry)\n                        <option value=\"{{ $id }}\" {{ (old('category_id') ? old('category_id') : $asset->category->id ?? '') == $id ? 'selected' : '' }}>{{ $entry }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('category'))\n                    <span class=\"text-danger\">{{ $errors->first('category') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.category_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"serial_number\">{{ trans('cruds.asset.fields.serial_number') }}<\/label>\n                <input class=\"form-control {{ $errors->has('serial_number') ? 'is-invalid' : '' }}\" type=\"text\" name=\"serial_number\" id=\"serial_number\" value=\"{{ old('serial_number', $asset->serial_number) }}\">\n                @if($errors->has('serial_number'))\n                    <span class=\"text-danger\">{{ $errors->first('serial_number') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.serial_number_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.asset.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', $asset->name) }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"photos\">{{ trans('cruds.asset.fields.photos') }}<\/label>\n                <div class=\"needsclick dropzone {{ $errors->has('photos') ? 'is-invalid' : '' }}\" id=\"photos-dropzone\">\n                <\/div>\n                @if($errors->has('photos'))\n                    <span class=\"text-danger\">{{ $errors->first('photos') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.photos_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"status_id\">{{ trans('cruds.asset.fields.status') }}<\/label>\n                <select class=\"form-control select2 {{ $errors->has('status') ? 'is-invalid' : '' }}\" name=\"status_id\" id=\"status_id\" required>\n                    @foreach($statuses as $id => $entry)\n                        <option value=\"{{ $id }}\" {{ (old('status_id') ? old('status_id') : $asset->status->id ?? '') == $id ? 'selected' : '' }}>{{ $entry }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('status'))\n                    <span class=\"text-danger\">{{ $errors->first('status') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.status_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"location_id\">{{ trans('cruds.asset.fields.location') }}<\/label>\n                <select class=\"form-control select2 {{ $errors->has('location') ? 'is-invalid' : '' }}\" name=\"location_id\" id=\"location_id\" required>\n                    @foreach($locations as $id => $entry)\n                        <option value=\"{{ $id }}\" {{ (old('location_id') ? old('location_id') : $asset->location->id ?? '') == $id ? 'selected' : '' }}>{{ $entry }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('location'))\n                    <span class=\"text-danger\">{{ $errors->first('location') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.location_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"notes\">{{ trans('cruds.asset.fields.notes') }}<\/label>\n                <textarea class=\"form-control {{ $errors->has('notes') ? 'is-invalid' : '' }}\" name=\"notes\" id=\"notes\">{{ old('notes', $asset->notes) }}<\/textarea>\n                @if($errors->has('notes'))\n                    <span class=\"text-danger\">{{ $errors->first('notes') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.notes_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"assigned_to_id\">{{ trans('cruds.asset.fields.assigned_to') }}<\/label>\n                <select class=\"form-control select2 {{ $errors->has('assigned_to') ? 'is-invalid' : '' }}\" name=\"assigned_to_id\" id=\"assigned_to_id\">\n                    @foreach($assigned_tos as $id => $entry)\n                        <option value=\"{{ $id }}\" {{ (old('assigned_to_id') ? old('assigned_to_id') : $asset->assigned_to->id ?? '') == $id ? 'selected' : '' }}>{{ $entry }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('assigned_to'))\n                    <span class=\"text-danger\">{{ $errors->first('assigned_to') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.asset.fields.assigned_to_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n\n@section('scripts')\n<script>\n    var uploadedPhotosMap = {}\nDropzone.options.photosDropzone = {\n    url: '{{ route('admin.assets.storeMedia') }}',\n    maxFilesize: 2, \/\/ MB\n    addRemoveLinks: true,\n    headers: {\n      'X-CSRF-TOKEN': \"{{ csrf_token() }}\"\n    },\n    params: {\n      size: 2\n    },\n    success: function (file, response) {\n      $('form').append('<input type=\"hidden\" name=\"photos[]\" value=\"' + response.name + '\">')\n      uploadedPhotosMap[file.name] = response.name\n    },\n    removedfile: function (file) {\n      file.previewElement.remove()\n      var name = ''\n      if (typeof file.file_name !== 'undefined') {\n        name = file.file_name\n      } else {\n        name = uploadedPhotosMap[file.name]\n      }\n      $('form').find('input[name=\"photos[]\"][value=\"' + name + '\"]').remove()\n    },\n    init: function () {\n@if(isset($asset) && $asset->photos)\n          var files =\n            {!! json_encode($asset->photos) !!}\n              for (var i in files) {\n              var file = files[i]\n              this.options.addedfile.call(this, file)\n              file.previewElement.classList.add('dz-complete')\n              $('form').append('<input type=\"hidden\" name=\"photos[]\" value=\"' + file.file_name + '\">')\n            }\n@endif\n    },\n     error: function (file, response) {\n         if ($.type(response) === 'string') {\n             var message = response \/\/dropzone sends it's own error messages in string\n         } else {\n             var message = response.errors.file\n         }\n         file.previewElement.classList.add('dz-error')\n         _ref = file.previewElement.querySelectorAll('[data-dz-errormessage]')\n         _results = []\n         for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n             node = _ref[_i]\n             _results.push(node.textContent = message)\n         }\n\n         return _results\n     }\n}\n<\/script>\n@endsection",
                                        "uuid": "3a2501a954a825ca"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('asset_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.assets.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.asset.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.asset.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-Asset\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.asset.fields.id') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.asset.fields.category') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.asset.fields.serial_number') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.asset.fields.name') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.asset.fields.photos') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.asset.fields.status') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.asset.fields.location') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.asset.fields.notes') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.asset.fields.assigned_to') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($assets as $key => $asset)\n                        <tr data-entry-id=\"{{ $asset->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $asset->id ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $asset->category->name ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $asset->serial_number ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $asset->name ?? '' }}\n                            <\/td>\n                            <td>\n                                @foreach($asset->photos as $key => $media)\n                                    <a href=\"{{ $media->getUrl() }}\" target=\"_blank\">\n                                        {{ trans('global.view_file') }}\n                                    <\/a>\n                                @endforeach\n                            <\/td>\n                            <td>\n                                {{ $asset->status->name ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $asset->location->name ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $asset->notes ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $asset->assigned_to->name ?? '' }}\n                            <\/td>\n                            <td>\n                                @can('asset_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.assets.show', $asset->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('asset_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.assets.edit', $asset->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('asset_delete')\n                                    <form action=\"{{ route('admin.assets.destroy', $asset->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('asset_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.assets.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-Asset:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "e7a82940146a469c"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.asset.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.assets.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.asset.fields.id') }}\n                        <\/th>\n                        <td>\n                            {{ $asset->id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.asset.fields.category') }}\n                        <\/th>\n                        <td>\n                            {{ $asset->category->name ?? '' }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.asset.fields.serial_number') }}\n                        <\/th>\n                        <td>\n                            {{ $asset->serial_number }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.asset.fields.name') }}\n                        <\/th>\n                        <td>\n                            {{ $asset->name }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.asset.fields.photos') }}\n                        <\/th>\n                        <td>\n                            @foreach($asset->photos as $key => $media)\n                                <a href=\"{{ $media->getUrl() }}\" target=\"_blank\">\n                                    {{ trans('global.view_file') }}\n                                <\/a>\n                            @endforeach\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.asset.fields.status') }}\n                        <\/th>\n                        <td>\n                            {{ $asset->status->name ?? '' }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.asset.fields.location') }}\n                        <\/th>\n                        <td>\n                            {{ $asset->location->name ?? '' }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.asset.fields.notes') }}\n                        <\/th>\n                        <td>\n                            {{ $asset->notes }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.asset.fields.assigned_to') }}\n                        <\/th>\n                        <td>\n                            {{ $asset->assigned_to->name ?? '' }}\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.assets.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "c0dbd635e7e44e6e"
                                    }
                                },
                                "uuid": "81e068389ec827d8"
                            },
                            "assetsHistories": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.assetsHistory.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.assets-histories.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "41daa8ef37883997"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.assetsHistory.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.assets-histories.update\", [$assetsHistory->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "790d289ebca16d6a"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.assetsHistory.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-AssetsHistory\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.id') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.asset') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.status') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.location') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.assigned_user') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.created_at') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($assetsHistories as $key => $assetsHistory)\n                        <tr data-entry-id=\"{{ $assetsHistory->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $assetsHistory->id ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $assetsHistory->asset->name ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $assetsHistory->status->name ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $assetsHistory->location->name ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $assetsHistory->assigned_user->name ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $assetsHistory->created_at ?? '' }}\n                            <\/td>\n                            <td>\n\n\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n  \n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-AssetsHistory:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "626df6a71689ed6e"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.assetsHistory.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.assets-histories.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.id') }}\n                        <\/th>\n                        <td>\n                            {{ $assetsHistory->id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.asset') }}\n                        <\/th>\n                        <td>\n                            {{ $assetsHistory->asset->name ?? '' }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.status') }}\n                        <\/th>\n                        <td>\n                            {{ $assetsHistory->status->name ?? '' }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.location') }}\n                        <\/th>\n                        <td>\n                            {{ $assetsHistory->location->name ?? '' }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.assigned_user') }}\n                        <\/th>\n                        <td>\n                            {{ $assetsHistory->assigned_user->name ?? '' }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.assetsHistory.fields.created_at') }}\n                        <\/th>\n                        <td>\n                            {{ $assetsHistory->created_at }}\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.assets-histories.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "2255db3addc53c6f"
                                    }
                                },
                                "uuid": "bfca0ff7b302a9ce"
                            },
                            "auditLogs": {
                                "isDir": true,
                                "content": {
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.auditLog.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <table class=\" table table-bordered table-striped table-hover ajaxTable datatable datatable-AuditLog\">\n            <thead>\n                <tr>\n                    <th width=\"10\">\n\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.auditLog.fields.id') }}\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.auditLog.fields.description') }}\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.auditLog.fields.subject_id') }}\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.auditLog.fields.subject_type') }}\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.auditLog.fields.user_id') }}\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.auditLog.fields.host') }}\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.auditLog.fields.created_at') }}\n                    <\/th>\n                    <th>\n                        &nbsp;\n                    <\/th>\n                <\/tr>\n            <\/thead>\n        <\/table>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n  \n  let dtOverrideGlobals = {\n    buttons: dtButtons,\n    processing: true,\n    serverSide: true,\n    retrieve: true,\n    aaSorting: [],\n    ajax: \"{{ route('admin.audit-logs.index') }}\",\n    columns: [\n      { data: 'placeholder', name: 'placeholder' },\n{ data: 'id', name: 'id' },\n{ data: 'description', name: 'description' },\n{ data: 'subject_id', name: 'subject_id' },\n{ data: 'subject_type', name: 'subject_type' },\n{ data: 'user_id', name: 'user_id' },\n{ data: 'host', name: 'host' },\n{ data: 'created_at', name: 'created_at' },\n{ data: 'actions', name: '{{ trans('global.actions') }}' }\n    ],\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  };\n  let table = $('.datatable-AuditLog').DataTable(dtOverrideGlobals);\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n});\n\n<\/script>\n@endsection",
                                        "uuid": "ccf29838680d1887"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.auditLog.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.audit-logs.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.auditLog.fields.id') }}\n                        <\/th>\n                        <td>\n                            {{ $auditLog->id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.auditLog.fields.description') }}\n                        <\/th>\n                        <td>\n                            {{ $auditLog->description }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.auditLog.fields.subject_id') }}\n                        <\/th>\n                        <td>\n                            {{ $auditLog->subject_id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.auditLog.fields.subject_type') }}\n                        <\/th>\n                        <td>\n                            {{ $auditLog->subject_type }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.auditLog.fields.user_id') }}\n                        <\/th>\n                        <td>\n                            {{ $auditLog->user_id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.auditLog.fields.properties') }}\n                        <\/th>\n                        <td>\n                            {{ $auditLog->properties }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.auditLog.fields.host') }}\n                        <\/th>\n                        <td>\n                            {{ $auditLog->host }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.auditLog.fields.created_at') }}\n                        <\/th>\n                        <td>\n                            {{ $auditLog->created_at }}\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.audit-logs.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "a8a49260e68ea8c6"
                                    }
                                },
                                "uuid": "7451c4d67defa002"
                            },
                            "contentCategories": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.contentCategory.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.content-categories.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.contentCategory.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', '') }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentCategory.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"slug\">{{ trans('cruds.contentCategory.fields.slug') }}<\/label>\n                <input class=\"form-control {{ $errors->has('slug') ? 'is-invalid' : '' }}\" type=\"text\" name=\"slug\" id=\"slug\" value=\"{{ old('slug', '') }}\">\n                @if($errors->has('slug'))\n                    <span class=\"text-danger\">{{ $errors->first('slug') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentCategory.fields.slug_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "d5b3a9d764682590"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.contentCategory.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.content-categories.update\", [$contentCategory->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.contentCategory.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', $contentCategory->name) }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentCategory.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"slug\">{{ trans('cruds.contentCategory.fields.slug') }}<\/label>\n                <input class=\"form-control {{ $errors->has('slug') ? 'is-invalid' : '' }}\" type=\"text\" name=\"slug\" id=\"slug\" value=\"{{ old('slug', $contentCategory->slug) }}\">\n                @if($errors->has('slug'))\n                    <span class=\"text-danger\">{{ $errors->first('slug') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentCategory.fields.slug_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "815fd7940e3c2393"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('content_category_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.content-categories.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.contentCategory.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.contentCategory.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-ContentCategory\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentCategory.fields.id') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentCategory.fields.name') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentCategory.fields.slug') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($contentCategories as $key => $contentCategory)\n                        <tr data-entry-id=\"{{ $contentCategory->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $contentCategory->id ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $contentCategory->name ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $contentCategory->slug ?? '' }}\n                            <\/td>\n                            <td>\n                                @can('content_category_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.content-categories.show', $contentCategory->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('content_category_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.content-categories.edit', $contentCategory->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('content_category_delete')\n                                    <form action=\"{{ route('admin.content-categories.destroy', $contentCategory->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('content_category_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.content-categories.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-ContentCategory:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "6d7c8d9bb7524a93"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.contentCategory.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.content-categories.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentCategory.fields.id') }}\n                        <\/th>\n                        <td>\n                            {{ $contentCategory->id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentCategory.fields.name') }}\n                        <\/th>\n                        <td>\n                            {{ $contentCategory->name }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentCategory.fields.slug') }}\n                        <\/th>\n                        <td>\n                            {{ $contentCategory->slug }}\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.content-categories.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "7d93aa28bf937b5a"
                                    }
                                },
                                "uuid": "e53f727b43ede43c"
                            },
                            "contentPages": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.contentPage.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.content-pages.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"title\">{{ trans('cruds.contentPage.fields.title') }}<\/label>\n                <input class=\"form-control {{ $errors->has('title') ? 'is-invalid' : '' }}\" type=\"text\" name=\"title\" id=\"title\" value=\"{{ old('title', '') }}\" required>\n                @if($errors->has('title'))\n                    <span class=\"text-danger\">{{ $errors->first('title') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.title_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"categories\">{{ trans('cruds.contentPage.fields.category') }}<\/label>\n                <div style=\"padding-bottom: 4px\">\n                    <span class=\"btn btn-info btn-xs select-all\" style=\"border-radius: 0\">{{ trans('global.select_all') }}<\/span>\n                    <span class=\"btn btn-info btn-xs deselect-all\" style=\"border-radius: 0\">{{ trans('global.deselect_all') }}<\/span>\n                <\/div>\n                <select class=\"form-control select2 {{ $errors->has('categories') ? 'is-invalid' : '' }}\" name=\"categories[]\" id=\"categories\" multiple>\n                    @foreach($categories as $id => $category)\n                        <option value=\"{{ $id }}\" {{ in_array($id, old('categories', [])) ? 'selected' : '' }}>{{ $category }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('categories'))\n                    <span class=\"text-danger\">{{ $errors->first('categories') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.category_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"tags\">{{ trans('cruds.contentPage.fields.tag') }}<\/label>\n                <div style=\"padding-bottom: 4px\">\n                    <span class=\"btn btn-info btn-xs select-all\" style=\"border-radius: 0\">{{ trans('global.select_all') }}<\/span>\n                    <span class=\"btn btn-info btn-xs deselect-all\" style=\"border-radius: 0\">{{ trans('global.deselect_all') }}<\/span>\n                <\/div>\n                <select class=\"form-control select2 {{ $errors->has('tags') ? 'is-invalid' : '' }}\" name=\"tags[]\" id=\"tags\" multiple>\n                    @foreach($tags as $id => $tag)\n                        <option value=\"{{ $id }}\" {{ in_array($id, old('tags', [])) ? 'selected' : '' }}>{{ $tag }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('tags'))\n                    <span class=\"text-danger\">{{ $errors->first('tags') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.tag_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"page_text\">{{ trans('cruds.contentPage.fields.page_text') }}<\/label>\n                <textarea class=\"form-control ckeditor {{ $errors->has('page_text') ? 'is-invalid' : '' }}\" name=\"page_text\" id=\"page_text\">{!! old('page_text') !!}<\/textarea>\n                @if($errors->has('page_text'))\n                    <span class=\"text-danger\">{{ $errors->first('page_text') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.page_text_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"excerpt\">{{ trans('cruds.contentPage.fields.excerpt') }}<\/label>\n                <textarea class=\"form-control {{ $errors->has('excerpt') ? 'is-invalid' : '' }}\" name=\"excerpt\" id=\"excerpt\">{{ old('excerpt') }}<\/textarea>\n                @if($errors->has('excerpt'))\n                    <span class=\"text-danger\">{{ $errors->first('excerpt') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.excerpt_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"featured_image\">{{ trans('cruds.contentPage.fields.featured_image') }}<\/label>\n                <div class=\"needsclick dropzone {{ $errors->has('featured_image') ? 'is-invalid' : '' }}\" id=\"featured_image-dropzone\">\n                <\/div>\n                @if($errors->has('featured_image'))\n                    <span class=\"text-danger\">{{ $errors->first('featured_image') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.featured_image_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n\n@section('scripts')\n<script>\n    $(document).ready(function () {\n  function SimpleUploadAdapter(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = function(loader) {\n      return {\n        upload: function() {\n          return loader.file\n            .then(function (file) {\n              return new Promise(function(resolve, reject) {\n                \/\/ Init request\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', '{{ route('admin.content-pages.storeCKEditorImages') }}', true);\n                xhr.setRequestHeader('x-csrf-token', window._token);\n                xhr.setRequestHeader('Accept', 'application\/json');\n                xhr.responseType = 'json';\n\n                \/\/ Init listeners\n                var genericErrorText = `Couldn't upload file: ${ file.name }.`;\n                xhr.addEventListener('error', function() { reject(genericErrorText) });\n                xhr.addEventListener('abort', function() { reject() });\n                xhr.addEventListener('load', function() {\n                  var response = xhr.response;\n\n                  if (!response || xhr.status !== 201) {\n                    return reject(response && response.message ? `${genericErrorText}\\n${xhr.status} ${response.message}` : `${genericErrorText}\\n ${xhr.status} ${xhr.statusText}`);\n                  }\n\n                  $('form').append('<input type=\"hidden\" name=\"ck-media[]\" value=\"' + response.id + '\">');\n\n                  resolve({ default: response.url });\n                });\n\n                if (xhr.upload) {\n                  xhr.upload.addEventListener('progress', function(e) {\n                    if (e.lengthComputable) {\n                      loader.uploadTotal = e.total;\n                      loader.uploaded = e.loaded;\n                    }\n                  });\n                }\n\n                \/\/ Send request\n                var data = new FormData();\n                data.append('upload', file);\n                data.append('crud_id', '{{ $contentPage->id ?? 0 }}');\n                xhr.send(data);\n              });\n            })\n        }\n      };\n    }\n  }\n\n  var allEditors = document.querySelectorAll('.ckeditor');\n  for (var i = 0; i < allEditors.length; ++i) {\n    ClassicEditor.create(\n      allEditors[i], {\n        extraPlugins: [SimpleUploadAdapter]\n      }\n    );\n  }\n});\n<\/script>\n\n<script>\n    Dropzone.options.featuredImageDropzone = {\n    url: '{{ route('admin.content-pages.storeMedia') }}',\n    maxFilesize: 2, \/\/ MB\n    acceptedFiles: '.jpeg,.jpg,.png,.gif',\n    maxFiles: 1,\n    addRemoveLinks: true,\n    headers: {\n      'X-CSRF-TOKEN': \"{{ csrf_token() }}\"\n    },\n    params: {\n      size: 2,\n      width: 4096,\n      height: 4096\n    },\n    success: function (file, response) {\n      $('form').find('input[name=\"featured_image\"]').remove()\n      $('form').append('<input type=\"hidden\" name=\"featured_image\" value=\"' + response.name + '\">')\n    },\n    removedfile: function (file) {\n      file.previewElement.remove()\n      if (file.status !== 'error') {\n        $('form').find('input[name=\"featured_image\"]').remove()\n        this.options.maxFiles = this.options.maxFiles + 1\n      }\n    },\n    init: function () {\n@if(isset($contentPage) && $contentPage->featured_image)\n      var file = {!! json_encode($contentPage->featured_image) !!}\n          this.options.addedfile.call(this, file)\n      this.options.thumbnail.call(this, file, file.preview ?? file.preview_url)\n      file.previewElement.classList.add('dz-complete')\n      $('form').append('<input type=\"hidden\" name=\"featured_image\" value=\"' + file.file_name + '\">')\n      this.options.maxFiles = this.options.maxFiles - 1\n@endif\n    },\n    error: function (file, response) {\n        if ($.type(response) === 'string') {\n            var message = response \/\/dropzone sends it's own error messages in string\n        } else {\n            var message = response.errors.file\n        }\n        file.previewElement.classList.add('dz-error')\n        _ref = file.previewElement.querySelectorAll('[data-dz-errormessage]')\n        _results = []\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i]\n            _results.push(node.textContent = message)\n        }\n\n        return _results\n    }\n}\n\n<\/script>\n@endsection",
                                        "uuid": "30e063fcbd22256c"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.contentPage.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.content-pages.update\", [$contentPage->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"title\">{{ trans('cruds.contentPage.fields.title') }}<\/label>\n                <input class=\"form-control {{ $errors->has('title') ? 'is-invalid' : '' }}\" type=\"text\" name=\"title\" id=\"title\" value=\"{{ old('title', $contentPage->title) }}\" required>\n                @if($errors->has('title'))\n                    <span class=\"text-danger\">{{ $errors->first('title') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.title_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"categories\">{{ trans('cruds.contentPage.fields.category') }}<\/label>\n                <div style=\"padding-bottom: 4px\">\n                    <span class=\"btn btn-info btn-xs select-all\" style=\"border-radius: 0\">{{ trans('global.select_all') }}<\/span>\n                    <span class=\"btn btn-info btn-xs deselect-all\" style=\"border-radius: 0\">{{ trans('global.deselect_all') }}<\/span>\n                <\/div>\n                <select class=\"form-control select2 {{ $errors->has('categories') ? 'is-invalid' : '' }}\" name=\"categories[]\" id=\"categories\" multiple>\n                    @foreach($categories as $id => $category)\n                        <option value=\"{{ $id }}\" {{ (in_array($id, old('categories', [])) || $contentPage->categories->contains($id)) ? 'selected' : '' }}>{{ $category }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('categories'))\n                    <span class=\"text-danger\">{{ $errors->first('categories') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.category_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"tags\">{{ trans('cruds.contentPage.fields.tag') }}<\/label>\n                <div style=\"padding-bottom: 4px\">\n                    <span class=\"btn btn-info btn-xs select-all\" style=\"border-radius: 0\">{{ trans('global.select_all') }}<\/span>\n                    <span class=\"btn btn-info btn-xs deselect-all\" style=\"border-radius: 0\">{{ trans('global.deselect_all') }}<\/span>\n                <\/div>\n                <select class=\"form-control select2 {{ $errors->has('tags') ? 'is-invalid' : '' }}\" name=\"tags[]\" id=\"tags\" multiple>\n                    @foreach($tags as $id => $tag)\n                        <option value=\"{{ $id }}\" {{ (in_array($id, old('tags', [])) || $contentPage->tags->contains($id)) ? 'selected' : '' }}>{{ $tag }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('tags'))\n                    <span class=\"text-danger\">{{ $errors->first('tags') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.tag_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"page_text\">{{ trans('cruds.contentPage.fields.page_text') }}<\/label>\n                <textarea class=\"form-control ckeditor {{ $errors->has('page_text') ? 'is-invalid' : '' }}\" name=\"page_text\" id=\"page_text\">{!! old('page_text', $contentPage->page_text) !!}<\/textarea>\n                @if($errors->has('page_text'))\n                    <span class=\"text-danger\">{{ $errors->first('page_text') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.page_text_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"excerpt\">{{ trans('cruds.contentPage.fields.excerpt') }}<\/label>\n                <textarea class=\"form-control {{ $errors->has('excerpt') ? 'is-invalid' : '' }}\" name=\"excerpt\" id=\"excerpt\">{{ old('excerpt', $contentPage->excerpt) }}<\/textarea>\n                @if($errors->has('excerpt'))\n                    <span class=\"text-danger\">{{ $errors->first('excerpt') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.excerpt_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"featured_image\">{{ trans('cruds.contentPage.fields.featured_image') }}<\/label>\n                <div class=\"needsclick dropzone {{ $errors->has('featured_image') ? 'is-invalid' : '' }}\" id=\"featured_image-dropzone\">\n                <\/div>\n                @if($errors->has('featured_image'))\n                    <span class=\"text-danger\">{{ $errors->first('featured_image') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentPage.fields.featured_image_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n\n@section('scripts')\n<script>\n    $(document).ready(function () {\n  function SimpleUploadAdapter(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = function(loader) {\n      return {\n        upload: function() {\n          return loader.file\n            .then(function (file) {\n              return new Promise(function(resolve, reject) {\n                \/\/ Init request\n                var xhr = new XMLHttpRequest();\n                xhr.open('POST', '{{ route('admin.content-pages.storeCKEditorImages') }}', true);\n                xhr.setRequestHeader('x-csrf-token', window._token);\n                xhr.setRequestHeader('Accept', 'application\/json');\n                xhr.responseType = 'json';\n\n                \/\/ Init listeners\n                var genericErrorText = `Couldn't upload file: ${ file.name }.`;\n                xhr.addEventListener('error', function() { reject(genericErrorText) });\n                xhr.addEventListener('abort', function() { reject() });\n                xhr.addEventListener('load', function() {\n                  var response = xhr.response;\n\n                  if (!response || xhr.status !== 201) {\n                    return reject(response && response.message ? `${genericErrorText}\\n${xhr.status} ${response.message}` : `${genericErrorText}\\n ${xhr.status} ${xhr.statusText}`);\n                  }\n\n                  $('form').append('<input type=\"hidden\" name=\"ck-media[]\" value=\"' + response.id + '\">');\n\n                  resolve({ default: response.url });\n                });\n\n                if (xhr.upload) {\n                  xhr.upload.addEventListener('progress', function(e) {\n                    if (e.lengthComputable) {\n                      loader.uploadTotal = e.total;\n                      loader.uploaded = e.loaded;\n                    }\n                  });\n                }\n\n                \/\/ Send request\n                var data = new FormData();\n                data.append('upload', file);\n                data.append('crud_id', '{{ $contentPage->id ?? 0 }}');\n                xhr.send(data);\n              });\n            })\n        }\n      };\n    }\n  }\n\n  var allEditors = document.querySelectorAll('.ckeditor');\n  for (var i = 0; i < allEditors.length; ++i) {\n    ClassicEditor.create(\n      allEditors[i], {\n        extraPlugins: [SimpleUploadAdapter]\n      }\n    );\n  }\n});\n<\/script>\n\n<script>\n    Dropzone.options.featuredImageDropzone = {\n    url: '{{ route('admin.content-pages.storeMedia') }}',\n    maxFilesize: 2, \/\/ MB\n    acceptedFiles: '.jpeg,.jpg,.png,.gif',\n    maxFiles: 1,\n    addRemoveLinks: true,\n    headers: {\n      'X-CSRF-TOKEN': \"{{ csrf_token() }}\"\n    },\n    params: {\n      size: 2,\n      width: 4096,\n      height: 4096\n    },\n    success: function (file, response) {\n      $('form').find('input[name=\"featured_image\"]').remove()\n      $('form').append('<input type=\"hidden\" name=\"featured_image\" value=\"' + response.name + '\">')\n    },\n    removedfile: function (file) {\n      file.previewElement.remove()\n      if (file.status !== 'error') {\n        $('form').find('input[name=\"featured_image\"]').remove()\n        this.options.maxFiles = this.options.maxFiles + 1\n      }\n    },\n    init: function () {\n@if(isset($contentPage) && $contentPage->featured_image)\n      var file = {!! json_encode($contentPage->featured_image) !!}\n          this.options.addedfile.call(this, file)\n      this.options.thumbnail.call(this, file, file.preview ?? file.preview_url)\n      file.previewElement.classList.add('dz-complete')\n      $('form').append('<input type=\"hidden\" name=\"featured_image\" value=\"' + file.file_name + '\">')\n      this.options.maxFiles = this.options.maxFiles - 1\n@endif\n    },\n    error: function (file, response) {\n        if ($.type(response) === 'string') {\n            var message = response \/\/dropzone sends it's own error messages in string\n        } else {\n            var message = response.errors.file\n        }\n        file.previewElement.classList.add('dz-error')\n        _ref = file.previewElement.querySelectorAll('[data-dz-errormessage]')\n        _results = []\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i]\n            _results.push(node.textContent = message)\n        }\n\n        return _results\n    }\n}\n\n<\/script>\n@endsection",
                                        "uuid": "dc5c165216009903"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('content_page_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.content-pages.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.contentPage.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.contentPage.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-ContentPage\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.id') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.title') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.category') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.tag') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.excerpt') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.featured_image') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($contentPages as $key => $contentPage)\n                        <tr data-entry-id=\"{{ $contentPage->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $contentPage->id ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $contentPage->title ?? '' }}\n                            <\/td>\n                            <td>\n                                @foreach($contentPage->categories as $key => $item)\n                                    <span class=\"badge badge-info\">{{ $item->name }}<\/span>\n                                @endforeach\n                            <\/td>\n                            <td>\n                                @foreach($contentPage->tags as $key => $item)\n                                    <span class=\"badge badge-info\">{{ $item->name }}<\/span>\n                                @endforeach\n                            <\/td>\n                            <td>\n                                {{ $contentPage->excerpt ?? '' }}\n                            <\/td>\n                            <td>\n                                @if($contentPage->featured_image)\n                                    <a href=\"{{ $contentPage->featured_image->getUrl() }}\" target=\"_blank\" style=\"display: inline-block\">\n                                        <img src=\"{{ $contentPage->featured_image->getUrl('thumb') }}\">\n                                    <\/a>\n                                @endif\n                            <\/td>\n                            <td>\n                                @can('content_page_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.content-pages.show', $contentPage->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('content_page_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.content-pages.edit', $contentPage->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('content_page_delete')\n                                    <form action=\"{{ route('admin.content-pages.destroy', $contentPage->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('content_page_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.content-pages.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-ContentPage:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "ea3d1928eb73cf9d"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.contentPage.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.content-pages.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.id') }}\n                        <\/th>\n                        <td>\n                            {{ $contentPage->id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.title') }}\n                        <\/th>\n                        <td>\n                            {{ $contentPage->title }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.category') }}\n                        <\/th>\n                        <td>\n                            @foreach($contentPage->categories as $key => $category)\n                                <span class=\"label label-info\">{{ $category->name }}<\/span>\n                            @endforeach\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.tag') }}\n                        <\/th>\n                        <td>\n                            @foreach($contentPage->tags as $key => $tag)\n                                <span class=\"label label-info\">{{ $tag->name }}<\/span>\n                            @endforeach\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.page_text') }}\n                        <\/th>\n                        <td>\n                            {!! $contentPage->page_text !!}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.excerpt') }}\n                        <\/th>\n                        <td>\n                            {{ $contentPage->excerpt }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentPage.fields.featured_image') }}\n                        <\/th>\n                        <td>\n                            @if($contentPage->featured_image)\n                                <a href=\"{{ $contentPage->featured_image->getUrl() }}\" target=\"_blank\" style=\"display: inline-block\">\n                                    <img src=\"{{ $contentPage->featured_image->getUrl('thumb') }}\">\n                                <\/a>\n                            @endif\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.content-pages.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "0952258816410cb2"
                                    }
                                },
                                "uuid": "54b5eb9f1be59cc3"
                            },
                            "contentTags": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.contentTag.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.content-tags.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.contentTag.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', '') }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentTag.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"slug\">{{ trans('cruds.contentTag.fields.slug') }}<\/label>\n                <input class=\"form-control {{ $errors->has('slug') ? 'is-invalid' : '' }}\" type=\"text\" name=\"slug\" id=\"slug\" value=\"{{ old('slug', '') }}\">\n                @if($errors->has('slug'))\n                    <span class=\"text-danger\">{{ $errors->first('slug') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentTag.fields.slug_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "6d01539ceb187dfd"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.contentTag.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.content-tags.update\", [$contentTag->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.contentTag.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', $contentTag->name) }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentTag.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"slug\">{{ trans('cruds.contentTag.fields.slug') }}<\/label>\n                <input class=\"form-control {{ $errors->has('slug') ? 'is-invalid' : '' }}\" type=\"text\" name=\"slug\" id=\"slug\" value=\"{{ old('slug', $contentTag->slug) }}\">\n                @if($errors->has('slug'))\n                    <span class=\"text-danger\">{{ $errors->first('slug') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.contentTag.fields.slug_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "e4fc67d4cb8ec1c7"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('content_tag_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.content-tags.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.contentTag.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.contentTag.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-ContentTag\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentTag.fields.id') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentTag.fields.name') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.contentTag.fields.slug') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($contentTags as $key => $contentTag)\n                        <tr data-entry-id=\"{{ $contentTag->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $contentTag->id ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $contentTag->name ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $contentTag->slug ?? '' }}\n                            <\/td>\n                            <td>\n                                @can('content_tag_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.content-tags.show', $contentTag->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('content_tag_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.content-tags.edit', $contentTag->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('content_tag_delete')\n                                    <form action=\"{{ route('admin.content-tags.destroy', $contentTag->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('content_tag_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.content-tags.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-ContentTag:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "34df192387080313"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.contentTag.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.content-tags.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentTag.fields.id') }}\n                        <\/th>\n                        <td>\n                            {{ $contentTag->id }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentTag.fields.name') }}\n                        <\/th>\n                        <td>\n                            {{ $contentTag->name }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.contentTag.fields.slug') }}\n                        <\/th>\n                        <td>\n                            {{ $contentTag->slug }}\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.content-tags.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "a74ae7c111db8c02"
                                    }
                                },
                                "uuid": "39d1c51fb20f825d"
                            },
                            "permissions": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.permission.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.permissions.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"title\">{{ trans('cruds.permission.fields.title') }}<\/label>\n                <input class=\"form-control {{ $errors->has('title') ? 'is-invalid' : '' }}\" type=\"text\" name=\"title\" id=\"title\" value=\"{{ old('title', '') }}\" required>\n                @if($errors->has('title'))\n                    <span class=\"text-danger\">{{ $errors->first('title') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.permission.fields.title_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "0fbee546a849af51"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.permission.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.permissions.update\", [$permission->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"title\">{{ trans('cruds.permission.fields.title') }}<\/label>\n                <input class=\"form-control {{ $errors->has('title') ? 'is-invalid' : '' }}\" type=\"text\" name=\"title\" id=\"title\" value=\"{{ old('title', $permission->title) }}\" required>\n                @if($errors->has('title'))\n                    <span class=\"text-danger\">{{ $errors->first('title') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.permission.fields.title_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "ad340c8ea8c6b73b"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('permission_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.permissions.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.permission.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.permission.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-Permission\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.permission.fields.title') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($permissions as $key => $permission)\n                        <tr data-entry-id=\"{{ $permission->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $permission->title ?? '' }}\n                            <\/td>\n                            <td>\n                                @can('permission_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.permissions.show', $permission->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('permission_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.permissions.edit', $permission->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('permission_delete')\n                                    <form action=\"{{ route('admin.permissions.destroy', $permission->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('permission_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.permissions.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-Permission:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "9b460314e5d393f3"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.permission.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.permissions.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.permission.fields.title') }}\n                        <\/th>\n                        <td>\n                            {{ $permission->title }}\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.permissions.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "b48bc7ba4808ad44"
                                    }
                                },
                                "uuid": "81cde7afa1e25d6f"
                            },
                            "provinsis": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.provinsi.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.provinsis.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"kode\">{{ trans('cruds.provinsi.fields.kode') }}<\/label>\n                <input class=\"form-control {{ $errors->has('kode') ? 'is-invalid' : '' }}\" type=\"text\" name=\"kode\" id=\"kode\" value=\"{{ old('kode', '') }}\" required>\n                @if($errors->has('kode'))\n                    <span class=\"text-danger\">{{ $errors->first('kode') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.provinsi.fields.kode_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"nama\">{{ trans('cruds.provinsi.fields.nama') }}<\/label>\n                <input class=\"form-control {{ $errors->has('nama') ? 'is-invalid' : '' }}\" type=\"text\" name=\"nama\" id=\"nama\" value=\"{{ old('nama', '') }}\" required>\n                @if($errors->has('nama'))\n                    <span class=\"text-danger\">{{ $errors->first('nama') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.provinsi.fields.nama_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"logo\">{{ trans('cruds.provinsi.fields.logo') }}<\/label>\n                <div class=\"needsclick dropzone {{ $errors->has('logo') ? 'is-invalid' : '' }}\" id=\"logo-dropzone\">\n                <\/div>\n                @if($errors->has('logo'))\n                    <span class=\"text-danger\">{{ $errors->first('logo') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.provinsi.fields.logo_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n\n@section('scripts')\n<script>\n    Dropzone.options.logoDropzone = {\n    url: '{{ route('admin.provinsis.storeMedia') }}',\n    maxFilesize: 1, \/\/ MB\n    acceptedFiles: '.jpeg,.jpg,.png,.gif',\n    maxFiles: 1,\n    addRemoveLinks: true,\n    headers: {\n      'X-CSRF-TOKEN': \"{{ csrf_token() }}\"\n    },\n    params: {\n      size: 1,\n      width: 800,\n      height: 800\n    },\n    success: function (file, response) {\n      $('form').find('input[name=\"logo\"]').remove()\n      $('form').append('<input type=\"hidden\" name=\"logo\" value=\"' + response.name + '\">')\n    },\n    removedfile: function (file) {\n      file.previewElement.remove()\n      if (file.status !== 'error') {\n        $('form').find('input[name=\"logo\"]').remove()\n        this.options.maxFiles = this.options.maxFiles + 1\n      }\n    },\n    init: function () {\n@if(isset($provinsi) && $provinsi->logo)\n      var file = {!! json_encode($provinsi->logo) !!}\n          this.options.addedfile.call(this, file)\n      this.options.thumbnail.call(this, file, file.preview ?? file.preview_url)\n      file.previewElement.classList.add('dz-complete')\n      $('form').append('<input type=\"hidden\" name=\"logo\" value=\"' + file.file_name + '\">')\n      this.options.maxFiles = this.options.maxFiles - 1\n@endif\n    },\n    error: function (file, response) {\n        if ($.type(response) === 'string') {\n            var message = response \/\/dropzone sends it's own error messages in string\n        } else {\n            var message = response.errors.file\n        }\n        file.previewElement.classList.add('dz-error')\n        _ref = file.previewElement.querySelectorAll('[data-dz-errormessage]')\n        _results = []\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i]\n            _results.push(node.textContent = message)\n        }\n\n        return _results\n    }\n}\n\n<\/script>\n@endsection",
                                        "uuid": "cef339414d5d2962"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.provinsi.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.provinsis.update\", [$provinsi->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"kode\">{{ trans('cruds.provinsi.fields.kode') }}<\/label>\n                <input class=\"form-control {{ $errors->has('kode') ? 'is-invalid' : '' }}\" type=\"text\" name=\"kode\" id=\"kode\" value=\"{{ old('kode', $provinsi->kode) }}\" required>\n                @if($errors->has('kode'))\n                    <span class=\"text-danger\">{{ $errors->first('kode') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.provinsi.fields.kode_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"nama\">{{ trans('cruds.provinsi.fields.nama') }}<\/label>\n                <input class=\"form-control {{ $errors->has('nama') ? 'is-invalid' : '' }}\" type=\"text\" name=\"nama\" id=\"nama\" value=\"{{ old('nama', $provinsi->nama) }}\" required>\n                @if($errors->has('nama'))\n                    <span class=\"text-danger\">{{ $errors->first('nama') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.provinsi.fields.nama_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label for=\"logo\">{{ trans('cruds.provinsi.fields.logo') }}<\/label>\n                <div class=\"needsclick dropzone {{ $errors->has('logo') ? 'is-invalid' : '' }}\" id=\"logo-dropzone\">\n                <\/div>\n                @if($errors->has('logo'))\n                    <span class=\"text-danger\">{{ $errors->first('logo') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.provinsi.fields.logo_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n\n@section('scripts')\n<script>\n    Dropzone.options.logoDropzone = {\n    url: '{{ route('admin.provinsis.storeMedia') }}',\n    maxFilesize: 1, \/\/ MB\n    acceptedFiles: '.jpeg,.jpg,.png,.gif',\n    maxFiles: 1,\n    addRemoveLinks: true,\n    headers: {\n      'X-CSRF-TOKEN': \"{{ csrf_token() }}\"\n    },\n    params: {\n      size: 1,\n      width: 800,\n      height: 800\n    },\n    success: function (file, response) {\n      $('form').find('input[name=\"logo\"]').remove()\n      $('form').append('<input type=\"hidden\" name=\"logo\" value=\"' + response.name + '\">')\n    },\n    removedfile: function (file) {\n      file.previewElement.remove()\n      if (file.status !== 'error') {\n        $('form').find('input[name=\"logo\"]').remove()\n        this.options.maxFiles = this.options.maxFiles + 1\n      }\n    },\n    init: function () {\n@if(isset($provinsi) && $provinsi->logo)\n      var file = {!! json_encode($provinsi->logo) !!}\n          this.options.addedfile.call(this, file)\n      this.options.thumbnail.call(this, file, file.preview ?? file.preview_url)\n      file.previewElement.classList.add('dz-complete')\n      $('form').append('<input type=\"hidden\" name=\"logo\" value=\"' + file.file_name + '\">')\n      this.options.maxFiles = this.options.maxFiles - 1\n@endif\n    },\n    error: function (file, response) {\n        if ($.type(response) === 'string') {\n            var message = response \/\/dropzone sends it's own error messages in string\n        } else {\n            var message = response.errors.file\n        }\n        file.previewElement.classList.add('dz-error')\n        _ref = file.previewElement.querySelectorAll('[data-dz-errormessage]')\n        _results = []\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i]\n            _results.push(node.textContent = message)\n        }\n\n        return _results\n    }\n}\n\n<\/script>\n@endsection",
                                        "uuid": "b9c429e2b5185dcf"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('provinsi_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.provinsis.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.provinsi.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.provinsi.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-Provinsi\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.provinsi.fields.kode') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.provinsi.fields.nama') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.provinsi.fields.logo') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($provinsis as $key => $provinsi)\n                        <tr data-entry-id=\"{{ $provinsi->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $provinsi->kode ?? '' }}\n                            <\/td>\n                            <td>\n                                {{ $provinsi->nama ?? '' }}\n                            <\/td>\n                            <td>\n                                @if($provinsi->logo)\n                                    <a href=\"{{ $provinsi->logo->getUrl() }}\" target=\"_blank\" style=\"display: inline-block\">\n                                        <img src=\"{{ $provinsi->logo->getUrl('thumb') }}\">\n                                    <\/a>\n                                @endif\n                            <\/td>\n                            <td>\n                                @can('provinsi_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.provinsis.show', $provinsi->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('provinsi_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.provinsis.edit', $provinsi->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('provinsi_delete')\n                                    <form action=\"{{ route('admin.provinsis.destroy', $provinsi->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('provinsi_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.provinsis.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 2, 'asc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-Provinsi:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "bce39df88d771dd8"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.provinsi.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.provinsis.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.provinsi.fields.kode') }}\n                        <\/th>\n                        <td>\n                            {{ $provinsi->kode }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.provinsi.fields.nama') }}\n                        <\/th>\n                        <td>\n                            {{ $provinsi->nama }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.provinsi.fields.logo') }}\n                        <\/th>\n                        <td>\n                            @if($provinsi->logo)\n                                <a href=\"{{ $provinsi->logo->getUrl() }}\" target=\"_blank\" style=\"display: inline-block\">\n                                    <img src=\"{{ $provinsi->logo->getUrl('thumb') }}\">\n                                <\/a>\n                            @endif\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.provinsis.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "f06b6ec857a6500d"
                                    }
                                },
                                "uuid": "11ea8992b46d420a"
                            },
                            "roles": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.role.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.roles.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"title\">{{ trans('cruds.role.fields.title') }}<\/label>\n                <input class=\"form-control {{ $errors->has('title') ? 'is-invalid' : '' }}\" type=\"text\" name=\"title\" id=\"title\" value=\"{{ old('title', '') }}\" required>\n                @if($errors->has('title'))\n                    <span class=\"text-danger\">{{ $errors->first('title') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.role.fields.title_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"permissions\">{{ trans('cruds.role.fields.permissions') }}<\/label>\n                <div style=\"padding-bottom: 4px\">\n                    <span class=\"btn btn-info btn-xs select-all\" style=\"border-radius: 0\">{{ trans('global.select_all') }}<\/span>\n                    <span class=\"btn btn-info btn-xs deselect-all\" style=\"border-radius: 0\">{{ trans('global.deselect_all') }}<\/span>\n                <\/div>\n                <select class=\"form-control select2 {{ $errors->has('permissions') ? 'is-invalid' : '' }}\" name=\"permissions[]\" id=\"permissions\" multiple required>\n                    @foreach($permissions as $id => $permission)\n                        <option value=\"{{ $id }}\" {{ in_array($id, old('permissions', [])) ? 'selected' : '' }}>{{ $permission }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('permissions'))\n                    <span class=\"text-danger\">{{ $errors->first('permissions') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.role.fields.permissions_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "91fceaa10e9c88d1"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.role.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.roles.update\", [$role->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"title\">{{ trans('cruds.role.fields.title') }}<\/label>\n                <input class=\"form-control {{ $errors->has('title') ? 'is-invalid' : '' }}\" type=\"text\" name=\"title\" id=\"title\" value=\"{{ old('title', $role->title) }}\" required>\n                @if($errors->has('title'))\n                    <span class=\"text-danger\">{{ $errors->first('title') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.role.fields.title_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"permissions\">{{ trans('cruds.role.fields.permissions') }}<\/label>\n                <div style=\"padding-bottom: 4px\">\n                    <span class=\"btn btn-info btn-xs select-all\" style=\"border-radius: 0\">{{ trans('global.select_all') }}<\/span>\n                    <span class=\"btn btn-info btn-xs deselect-all\" style=\"border-radius: 0\">{{ trans('global.deselect_all') }}<\/span>\n                <\/div>\n                <select class=\"form-control select2 {{ $errors->has('permissions') ? 'is-invalid' : '' }}\" name=\"permissions[]\" id=\"permissions\" multiple required>\n                    @foreach($permissions as $id => $permission)\n                        <option value=\"{{ $id }}\" {{ (in_array($id, old('permissions', [])) || $role->permissions->contains($id)) ? 'selected' : '' }}>{{ $permission }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('permissions'))\n                    <span class=\"text-danger\">{{ $errors->first('permissions') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.role.fields.permissions_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "43e6d56a62f12553"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('role_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.roles.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.role.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.role.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"table-responsive\">\n            <table class=\" table table-bordered table-striped table-hover datatable datatable-Role\">\n                <thead>\n                    <tr>\n                        <th width=\"10\">\n\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.role.fields.title') }}\n                        <\/th>\n                        <th>\n                            {{ trans('cruds.role.fields.permissions') }}\n                        <\/th>\n                        <th>\n                            &nbsp;\n                        <\/th>\n                    <\/tr>\n                <\/thead>\n                <tbody>\n                    @foreach($roles as $key => $role)\n                        <tr data-entry-id=\"{{ $role->id }}\">\n                            <td>\n\n                            <\/td>\n                            <td>\n                                {{ $role->title ?? '' }}\n                            <\/td>\n                            <td>\n                                @foreach($role->permissions as $key => $item)\n                                    <span class=\"badge badge-info\">{{ $item->title }}<\/span>\n                                @endforeach\n                            <\/td>\n                            <td>\n                                @can('role_show')\n                                    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.roles.show', $role->id) }}\">\n                                        {{ trans('global.view') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('role_edit')\n                                    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.roles.edit', $role->id) }}\">\n                                        {{ trans('global.edit') }}\n                                    <\/a>\n                                @endcan\n\n                                @can('role_delete')\n                                    <form action=\"{{ route('admin.roles.destroy', $role->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n                                        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n                                        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n                                        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n                                    <\/form>\n                                @endcan\n\n                            <\/td>\n\n                        <\/tr>\n                    @endforeach\n                <\/tbody>\n            <\/table>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('role_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}'\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.roles.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).nodes(), function (entry) {\n          return $(entry).data('entry-id')\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  $.extend(true, $.fn.dataTable.defaults, {\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  });\n  let table = $('.datatable-Role:not(.ajaxTable)').DataTable({ buttons: dtButtons })\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n})\n\n<\/script>\n@endsection",
                                        "uuid": "26f32964f2dc1e75"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.role.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.roles.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.role.fields.title') }}\n                        <\/th>\n                        <td>\n                            {{ $role->title }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.role.fields.permissions') }}\n                        <\/th>\n                        <td>\n                            @foreach($role->permissions as $key => $permissions)\n                                <span class=\"label label-info\">{{ $permissions->title }}<\/span>\n                            @endforeach\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.roles.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "a94d7da4112d7f4f"
                                    }
                                },
                                "uuid": "9bc83b3a064d624a"
                            },
                            "users": {
                                "isDir": true,
                                "content": {
                                    "create.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.create') }} {{ trans('cruds.user.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.users.store\") }}\" enctype=\"multipart\/form-data\">\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.user.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', '') }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.user.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"email\">{{ trans('cruds.user.fields.email') }}<\/label>\n                <input class=\"form-control {{ $errors->has('email') ? 'is-invalid' : '' }}\" type=\"email\" name=\"email\" id=\"email\" value=\"{{ old('email') }}\" required>\n                @if($errors->has('email'))\n                    <span class=\"text-danger\">{{ $errors->first('email') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.user.fields.email_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"password\">{{ trans('cruds.user.fields.password') }}<\/label>\n                <input class=\"form-control {{ $errors->has('password') ? 'is-invalid' : '' }}\" type=\"password\" name=\"password\" id=\"password\" required>\n                @if($errors->has('password'))\n                    <span class=\"text-danger\">{{ $errors->first('password') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.user.fields.password_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"roles\">{{ trans('cruds.user.fields.roles') }}<\/label>\n                <div style=\"padding-bottom: 4px\">\n                    <span class=\"btn btn-info btn-xs select-all\" style=\"border-radius: 0\">{{ trans('global.select_all') }}<\/span>\n                    <span class=\"btn btn-info btn-xs deselect-all\" style=\"border-radius: 0\">{{ trans('global.deselect_all') }}<\/span>\n                <\/div>\n                <select class=\"form-control select2 {{ $errors->has('roles') ? 'is-invalid' : '' }}\" name=\"roles[]\" id=\"roles\" multiple required>\n                    @foreach($roles as $id => $role)\n                        <option value=\"{{ $id }}\" {{ in_array($id, old('roles', [])) ? 'selected' : '' }}>{{ $role }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('roles'))\n                    <span class=\"text-danger\">{{ $errors->first('roles') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.user.fields.roles_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "67d6254493b1a46f"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.edit') }} {{ trans('cruds.user.title_singular') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <form method=\"POST\" action=\"{{ route(\"admin.users.update\", [$user->id]) }}\" enctype=\"multipart\/form-data\">\n            @method('PUT')\n            @csrf\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"name\">{{ trans('cruds.user.fields.name') }}<\/label>\n                <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', $user->name) }}\" required>\n                @if($errors->has('name'))\n                    <span class=\"text-danger\">{{ $errors->first('name') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.user.fields.name_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"email\">{{ trans('cruds.user.fields.email') }}<\/label>\n                <input class=\"form-control {{ $errors->has('email') ? 'is-invalid' : '' }}\" type=\"email\" name=\"email\" id=\"email\" value=\"{{ old('email', $user->email) }}\" required>\n                @if($errors->has('email'))\n                    <span class=\"text-danger\">{{ $errors->first('email') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.user.fields.email_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"password\">{{ trans('cruds.user.fields.password') }}<\/label>\n                <input class=\"form-control {{ $errors->has('password') ? 'is-invalid' : '' }}\" type=\"password\" name=\"password\" id=\"password\">\n                @if($errors->has('password'))\n                    <span class=\"text-danger\">{{ $errors->first('password') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.user.fields.password_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <label class=\"required\" for=\"roles\">{{ trans('cruds.user.fields.roles') }}<\/label>\n                <div style=\"padding-bottom: 4px\">\n                    <span class=\"btn btn-info btn-xs select-all\" style=\"border-radius: 0\">{{ trans('global.select_all') }}<\/span>\n                    <span class=\"btn btn-info btn-xs deselect-all\" style=\"border-radius: 0\">{{ trans('global.deselect_all') }}<\/span>\n                <\/div>\n                <select class=\"form-control select2 {{ $errors->has('roles') ? 'is-invalid' : '' }}\" name=\"roles[]\" id=\"roles\" multiple required>\n                    @foreach($roles as $id => $role)\n                        <option value=\"{{ $id }}\" {{ (in_array($id, old('roles', [])) || $user->roles->contains($id)) ? 'selected' : '' }}>{{ $role }}<\/option>\n                    @endforeach\n                <\/select>\n                @if($errors->has('roles'))\n                    <span class=\"text-danger\">{{ $errors->first('roles') }}<\/span>\n                @endif\n                <span class=\"help-block\">{{ trans('cruds.user.fields.roles_helper') }}<\/span>\n            <\/div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-danger\" type=\"submit\">\n                    {{ trans('global.save') }}\n                <\/button>\n            <\/div>\n        <\/form>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "01535236a6111af4"
                                    },
                                    "index.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n@can('user_create')\n    <div style=\"margin-bottom: 10px;\" class=\"row\">\n        <div class=\"col-lg-12\">\n            <a class=\"btn btn-success\" href=\"{{ route('admin.users.create') }}\">\n                {{ trans('global.add') }} {{ trans('cruds.user.title_singular') }}\n            <\/a>\n        <\/div>\n    <\/div>\n@endcan\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('cruds.user.title_singular') }} {{ trans('global.list') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <table class=\" table table-bordered table-striped table-hover ajaxTable datatable datatable-User\">\n            <thead>\n                <tr>\n                    <th width=\"10\">\n\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.user.fields.name') }}\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.user.fields.email') }}\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.user.fields.email_verified_at') }}\n                    <\/th>\n                    <th>\n                        {{ trans('cruds.user.fields.roles') }}\n                    <\/th>\n                    <th>\n                        &nbsp;\n                    <\/th>\n                <\/tr>\n            <\/thead>\n        <\/table>\n    <\/div>\n<\/div>\n\n\n\n@endsection\n@section('scripts')\n@parent\n<script>\n    $(function () {\n  let dtButtons = $.extend(true, [], $.fn.dataTable.defaults.buttons)\n@can('user_delete')\n  let deleteButtonTrans = '{{ trans('global.datatables.delete') }}';\n  let deleteButton = {\n    text: deleteButtonTrans,\n    url: \"{{ route('admin.users.massDestroy') }}\",\n    className: 'btn-danger',\n    action: function (e, dt, node, config) {\n      var ids = $.map(dt.rows({ selected: true }).data(), function (entry) {\n          return entry.id\n      });\n\n      if (ids.length === 0) {\n        alert('{{ trans('global.datatables.zero_selected') }}')\n\n        return\n      }\n\n      if (confirm('{{ trans('global.areYouSure') }}')) {\n        $.ajax({\n          headers: {'x-csrf-token': _token},\n          method: 'POST',\n          url: config.url,\n          data: { ids: ids, _method: 'DELETE' }})\n          .done(function () { location.reload() })\n      }\n    }\n  }\n  dtButtons.push(deleteButton)\n@endcan\n\n  let dtOverrideGlobals = {\n    buttons: dtButtons,\n    processing: true,\n    serverSide: true,\n    retrieve: true,\n    aaSorting: [],\n    ajax: \"{{ route('admin.users.index') }}\",\n    columns: [\n      { data: 'placeholder', name: 'placeholder' },\n{ data: 'name', name: 'name' },\n{ data: 'email', name: 'email' },\n{ data: 'email_verified_at', name: 'email_verified_at' },\n{ data: 'roles', name: 'roles.title' },\n{ data: 'actions', name: '{{ trans('global.actions') }}' }\n    ],\n    orderCellsTop: true,\n    order: [[ 1, 'desc' ]],\n    pageLength: 100,\n  };\n  let table = $('.datatable-User').DataTable(dtOverrideGlobals);\n  $('a[data-toggle=\"tab\"]').on('shown.bs.tab click', function(e){\n      $($.fn.dataTable.tables(true)).DataTable()\n          .columns.adjust();\n  });\n  \n});\n\n<\/script>\n@endsection",
                                        "uuid": "50571f87bd67a7ec"
                                    },
                                    "show.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"card\">\n    <div class=\"card-header\">\n        {{ trans('global.show') }} {{ trans('cruds.user.title') }}\n    <\/div>\n\n    <div class=\"card-body\">\n        <div class=\"form-group\">\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.users.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.user.fields.name') }}\n                        <\/th>\n                        <td>\n                            {{ $user->name }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.user.fields.email') }}\n                        <\/th>\n                        <td>\n                            {{ $user->email }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.user.fields.email_verified_at') }}\n                        <\/th>\n                        <td>\n                            {{ $user->email_verified_at }}\n                        <\/td>\n                    <\/tr>\n                    <tr>\n                        <th>\n                            {{ trans('cruds.user.fields.roles') }}\n                        <\/th>\n                        <td>\n                            @foreach($user->roles as $key => $roles)\n                                <span class=\"label label-info\">{{ $roles->title }}<\/span>\n                            @endforeach\n                        <\/td>\n                    <\/tr>\n                <\/tbody>\n            <\/table>\n            <div class=\"form-group\">\n                <a class=\"btn btn-default\" href=\"{{ route('admin.users.index') }}\">\n                    {{ trans('global.back_to_list') }}\n                <\/a>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n\n\n\n@endsection",
                                        "uuid": "b6df5dd3181aeb2c"
                                    }
                                },
                                "uuid": "565872e96681f0f1"
                            }
                        },
                        "uuid": "d425f242e4b0f033"
                    },
                    "auth": {
                        "isDir": true,
                        "content": {
                            "passwords": {
                                "isDir": true,
                                "content": {
                                    "confirm.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.app')\n\n@section('styles')\n<style>\n    .lockscreen-image-fallback {\n        width: 70px;\n        height: 70px;\n        background: #3c8dbc;\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 18px;\n    }\n    input[type=\"password\"], button {\n        outline: none;\n        box-shadow:none !important;\n        border: 0;\n    }\n<\/style>\n@endsection\n\n@section('content')\n\n<div class=\"lockscreen\">\n    <div class=\"lockscreen-wrapper\">\n        <div class=\"lockscreen-logo\">\n            <a href=\"{{ route('admin.home') }}\">\n                {{ trans('panel.site_title') }}\n            <\/a>\n        <\/div>\n\n        <div class=\"lockscreen-name\">\n            {{ auth()->user()->name ?? '' }}\n        <\/div>\n\n        <div class=\"lockscreen-item\">\n            <div class=\"lockscreen-image\">\n                {{-- <img src=\"https:\/\/adminlte.io\/themes\/AdminLTE\/dist\/img\/user1-128x128.jpg\" alt=\"User Image\"> --}}\n\n                <div class=\"lockscreen-image-fallback text-uppercase text-white\">\n                    @if(auth()->user()->name)\n                        {{ substr(auth()->user()->name, 0, 2) }}\n                    @endif\n                <\/div>\n            <\/div>\n\n            <form method=\"POST\" action=\"{{ route('password.confirm') }}\" class=\"lockscreen-credentials\">\n                @csrf\n\n                <div class=\"input-group\">\n                    <input id=\"password\" type=\"password\" name=\"password\" class=\"form-control\" placeholder=\"{{ __('Confirm Password') }}\" required>\n\n                    <div class=\"input-group-append\">\n                        <button type=\"submit\" class=\"btn\">\n                            <i class=\"fas fa-arrow-right text-muted\"><\/i>\n                        <\/button>\n                    <\/div>\n                <\/div>\n            <\/form>\n        <\/div>\n\n        @error('password')\n            <div class=\"help-block text-center text-danger\">\n                {{ $message }}\n            <\/div>\n        @enderror\n\n        <div class=\"help-block text-center\">\n            {{ __('Please confirm your password before continuing.') }}\n        <\/div>\n\n        <div class=\"text-center\">\n            @if(Route::has('password.request'))\n                <a href=\"{{ route('password.request') }}\">\n                    {{ trans('global.forgot_password') }}\n                <\/a>\n            @endif\n        <\/div>\n    <\/div>\n<\/div>\n\n@endsection",
                                        "uuid": "3f0bff4421223f5d"
                                    },
                                    "edit.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.admin')\n@section('content')\n\n<div class=\"row\">\n    <div class=\"col-md-6\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                {{ trans('global.my_profile') }}\n            <\/div>\n\n            <div class=\"card-body\">\n                <form method=\"POST\" action=\"{{ route(\"profile.password.updateProfile\") }}\">\n                    @csrf\n                    <div class=\"form-group\">\n                        <label class=\"required\" for=\"name\">{{ trans('cruds.user.fields.name') }}<\/label>\n                        <input class=\"form-control {{ $errors->has('name') ? 'is-invalid' : '' }}\" type=\"text\" name=\"name\" id=\"name\" value=\"{{ old('name', auth()->user()->name) }}\" required>\n                        @if($errors->has('name'))\n                            <div class=\"invalid-feedback\">\n                                {{ $errors->first('name') }}\n                            <\/div>\n                        @endif\n                    <\/div>\n                    <div class=\"form-group\">\n                        <label class=\"required\" for=\"title\">{{ trans('cruds.user.fields.email') }}<\/label>\n                        <input class=\"form-control {{ $errors->has('email') ? 'is-invalid' : '' }}\" type=\"text\" name=\"email\" id=\"email\" value=\"{{ old('email', auth()->user()->email) }}\" required>\n                        @if($errors->has('email'))\n                            <div class=\"invalid-feedback\">\n                                {{ $errors->first('email') }}\n                            <\/div>\n                        @endif\n                    <\/div>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-danger\" type=\"submit\">\n                            {{ trans('global.save') }}\n                        <\/button>\n                    <\/div>\n                <\/form>\n            <\/div>\n        <\/div>\n    <\/div>\n    <div class=\"col-md-6\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                {{ trans('global.change_password') }}\n            <\/div>\n            <div class=\"card-body\">\n                <form method=\"POST\" action=\"{{ route(\"profile.password.update\") }}\">\n                    @csrf\n                    <div class=\"form-group\">\n                        <label class=\"required\" for=\"password\">New {{ trans('cruds.user.fields.password') }}<\/label>\n                        <input class=\"form-control {{ $errors->has('password') ? 'is-invalid' : '' }}\" type=\"password\" name=\"password\" id=\"password\" required>\n                        @if($errors->has('password'))\n                            <span class=\"text-danger\">{{ $errors->first('password') }}<\/span>\n                        @endif\n                    <\/div>\n                    <div class=\"form-group\">\n                        <label class=\"required\" for=\"password_confirmation\">Repeat New {{ trans('cruds.user.fields.password') }}<\/label>\n                        <input class=\"form-control {{ $errors->has('password_confirmation') ? 'is-invalid' : '' }}\" type=\"password\" name=\"password_confirmation\" id=\"password_confirmation\" required>\n                    <\/div>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-danger\" type=\"submit\">\n                            {{ trans('global.save') }}\n                        <\/button>\n                    <\/div>\n                <\/form>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n<div class=\"row\">\n    <div class=\"col-md-6\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                {{ trans('global.delete_account') }}\n            <\/div>\n\n            <div class=\"card-body\">\n                <form method=\"POST\" action=\"{{ route(\"profile.password.destroyProfile\") }}\" onsubmit=\"return prompt('{{ __('global.delete_account_warning') }}') == '{{ auth()->user()->email }}'\">\n                    @csrf\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-danger\" type=\"submit\">\n                            {{ trans('global.delete') }}\n                        <\/button>\n                    <\/div>\n                <\/form>\n            <\/div>\n        <\/div>\n    <\/div>\n\n<\/div>\n@endsection",
                                        "uuid": "1a47ab4bff273cb5"
                                    },
                                    "email.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.app')\n@section('content')\n<div class=\"login-box\">\n    <div class=\"login-logo\">\n        <div class=\"login-logo\">\n            <a href=\"{{ route('admin.home') }}\">\n                {{ trans('panel.site_title') }}\n            <\/a>\n        <\/div>\n    <\/div>\n    <div class=\"card\">\n        <div class=\"card-body login-card-body\">\n            <p class=\"login-box-msg\">\n                {{ trans('global.reset_password') }}\n            <\/p>\n\n            @if(session('status'))\n                <div class=\"alert alert-success\" role=\"alert\">\n                    {{ session('status') }}\n                <\/div>\n            @endif\n\n            <form method=\"POST\" action=\"{{ route('password.email') }}\">\n                @csrf\n\n                <div>\n                    <div class=\"form-group\">\n                        <input id=\"email\" type=\"email\" class=\"form-control{{ $errors->has('email') ? ' is-invalid' : '' }}\" name=\"email\" required autocomplete=\"email\" autofocus placeholder=\"{{ trans('global.login_email') }}\" value=\"{{ old('email') }}\">\n\n                        @if($errors->has('email'))\n                            <span class=\"text-danger\">\n                                {{ $errors->first('email') }}\n                            <\/span>\n                        @endif\n                    <\/div>\n                <\/div>\n                <div class=\"row\">\n                    <div class=\"col-12 text-right\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-flat btn-block\">\n                            {{ trans('global.send_password') }}\n                        <\/button>\n                    <\/div>\n                <\/div>\n            <\/form>\n        <\/div>\n    <\/div>\n<\/div>\n@endsection",
                                        "uuid": "594a5807fc30b2eb"
                                    },
                                    "reset.blade.php": {
                                        "isDir": false,
                                        "content": "@extends('layouts.app')\n@section('content')\n<div class=\"login-box\">\n    <div class=\"login-logo\">\n        <div class=\"login-logo\">\n            <a href=\"{{ route('admin.home') }}\">\n                {{ trans('panel.site_title') }}\n            <\/a>\n        <\/div>\n    <\/div>\n    <div class=\"card\">\n        <div class=\"card-body login-card-body\">\n            <p class=\"login-box-msg\">\n                {{ trans('global.reset_password') }}\n            <\/p>\n\n            <form method=\"POST\" action=\"{{ route('password.request') }}\">\n                @csrf\n\n                <input name=\"token\" value=\"{{ $token }}\" type=\"hidden\">\n\n                <div>\n                    <div class=\"form-group\">\n                        <input id=\"email\" type=\"email\" class=\"form-control{{ $errors->has('email') ? ' is-invalid' : '' }}\" name=\"email\" value=\"{{ $email ?? old('email') }}\" required autocomplete=\"email\" autofocus placeholder=\"{{ trans('global.login_email') }}\">\n\n                        @if($errors->has('email'))\n                            <span class=\"text-danger\">\n                                {{ $errors->first('email') }}\n                            <\/span>\n                        @endif\n                    <\/div>\n                    <div class=\"form-group\">\n                        <input id=\"password\" type=\"password\" class=\"form-control{{ $errors->has('password') ? ' is-invalid' : '' }}\" name=\"password\" required placeholder=\"{{ trans('global.login_password') }}\">\n\n                        @if($errors->has('password'))\n                            <span class=\"text-danger\">\n                                {{ $errors->first('password') }}\n                            <\/span>\n                        @endif\n                    <\/div>\n                    <div class=\"form-group\">\n                        <input id=\"password-confirm\" type=\"password\" class=\"form-control\" name=\"password_confirmation\" required placeholder=\"{{ trans('global.login_password_confirmation') }}\">\n                    <\/div>\n                <\/div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-flat btn-block\">\n                            {{ trans('global.reset_password') }}\n                        <\/button>\n                    <\/div>\n                <\/div>\n            <\/form>\n        <\/div>\n    <\/div>\n<\/div>\n@endsection",
                                        "uuid": "f83b06bfce09850d"
                                    }
                                },
                                "uuid": "dbf665d557fd784e"
                            },
                            "login.blade.php": {
                                "isDir": false,
                                "content": "@extends('layouts.app')\n@section('content')\n<div class=\"login-box\">\n    <div class=\"login-logo\">\n        <div class=\"login-logo\">\n            <a href=\"{{ route('admin.home') }}\">\n                {{ trans('panel.site_title') }}\n            <\/a>\n        <\/div>\n    <\/div>\n    <div class=\"card\">\n        <div class=\"card-body login-card-body\">\n            <p class=\"login-box-msg\">\n                {{ trans('global.login') }}\n            <\/p>\n\n            @if(session()->has('message'))\n                <p class=\"alert alert-info\">\n                    {{ session()->get('message') }}\n                <\/p>\n            @endif\n\n            <form action=\"{{ route('login') }}\" method=\"POST\">\n                @csrf\n\n                <div class=\"form-group\">\n                    <input id=\"email\" type=\"email\" class=\"form-control{{ $errors->has('email') ? ' is-invalid' : '' }}\" required autocomplete=\"email\" autofocus placeholder=\"{{ trans('global.login_email') }}\" name=\"email\" value=\"{{ old('email', null) }}\">\n\n                    @if($errors->has('email'))\n                        <div class=\"invalid-feedback\">\n                            {{ $errors->first('email') }}\n                        <\/div>\n                    @endif\n                <\/div>\n\n                <div class=\"form-group\">\n                    <input id=\"password\" type=\"password\" class=\"form-control{{ $errors->has('password') ? ' is-invalid' : '' }}\" name=\"password\" required placeholder=\"{{ trans('global.login_password') }}\">\n\n                    @if($errors->has('password'))\n                        <div class=\"invalid-feedback\">\n                            {{ $errors->first('password') }}\n                        <\/div>\n                    @endif\n                <\/div>\n\n\n                <div class=\"row\">\n                    <div class=\"col-8\">\n                        <div class=\"icheck-primary\">\n                            <input type=\"checkbox\" name=\"remember\" id=\"remember\">\n                            <label for=\"remember\">{{ trans('global.remember_me') }}<\/label>\n                        <\/div>\n                    <\/div>\n                    <!-- \/.col -->\n                    <div class=\"col-4\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-flat\">\n                            {{ trans('global.login') }}\n                        <\/button>\n                    <\/div>\n                    <!-- \/.col -->\n                <\/div>\n            <\/form>\n\n\n            @if(Route::has('password.request'))\n                <p class=\"mb-1\">\n                    <a href=\"{{ route('password.request') }}\">\n                        {{ trans('global.forgot_password') }}\n                    <\/a>\n                <\/p>\n            @endif\n            <p class=\"mb-1\">\n\n            <\/p>\n        <\/div>\n        <!-- \/.login-card-body -->\n    <\/div>\n<\/div>\n@endsection",
                                "uuid": "3ab664dcf0dee54d"
                            },
                            "register.blade.php": {
                                "isDir": false,
                                "content": "@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-8\">\n            <div class=\"card\">\n                <div class=\"card-header\">{{ __('Register') }}<\/div>\n\n                <div class=\"card-body\">\n                    <form method=\"POST\" action=\"{{ route('register') }}\">\n                        @csrf\n\n                        <div class=\"row mb-3\">\n                            <label for=\"name\" class=\"col-md-4 col-form-label text-md-end\">{{ __('Name') }}<\/label>\n\n                            <div class=\"col-md-6\">\n                                <input id=\"name\" type=\"text\" class=\"form-control @error('name') is-invalid @enderror\" name=\"name\" value=\"{{ old('name') }}\" required autocomplete=\"name\" autofocus>\n\n                                @error('name')\n                                    <span class=\"invalid-feedback\" role=\"alert\">\n                                        <strong>{{ $message }}<\/strong>\n                                    <\/span>\n                                @enderror\n                            <\/div>\n                        <\/div>\n\n                        <div class=\"row mb-3\">\n                            <label for=\"email\" class=\"col-md-4 col-form-label text-md-end\">{{ __('Email Address') }}<\/label>\n\n                            <div class=\"col-md-6\">\n                                <input id=\"email\" type=\"email\" class=\"form-control @error('email') is-invalid @enderror\" name=\"email\" value=\"{{ old('email') }}\" required autocomplete=\"email\">\n\n                                @error('email')\n                                    <span class=\"invalid-feedback\" role=\"alert\">\n                                        <strong>{{ $message }}<\/strong>\n                                    <\/span>\n                                @enderror\n                            <\/div>\n                        <\/div>\n\n                        <div class=\"row mb-3\">\n                            <label for=\"password\" class=\"col-md-4 col-form-label text-md-end\">{{ __('Password') }}<\/label>\n\n                            <div class=\"col-md-6\">\n                                <input id=\"password\" type=\"password\" class=\"form-control @error('password') is-invalid @enderror\" name=\"password\" required autocomplete=\"new-password\">\n\n                                @error('password')\n                                    <span class=\"invalid-feedback\" role=\"alert\">\n                                        <strong>{{ $message }}<\/strong>\n                                    <\/span>\n                                @enderror\n                            <\/div>\n                        <\/div>\n\n                        <div class=\"row mb-3\">\n                            <label for=\"password-confirm\" class=\"col-md-4 col-form-label text-md-end\">{{ __('Confirm Password') }}<\/label>\n\n                            <div class=\"col-md-6\">\n                                <input id=\"password-confirm\" type=\"password\" class=\"form-control\" name=\"password_confirmation\" required autocomplete=\"new-password\">\n                            <\/div>\n                        <\/div>\n\n                        <div class=\"row mb-0\">\n                            <div class=\"col-md-6 offset-md-4\">\n                                <button type=\"submit\" class=\"btn btn-primary\">\n                                    {{ __('Register') }}\n                                <\/button>\n                            <\/div>\n                        <\/div>\n                    <\/form>\n                <\/div>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n@endsection\n",
                                "uuid": "11d514dae505f0e5"
                            },
                            "verify.blade.php": {
                                "isDir": false,
                                "content": "@extends('layouts.app')\n\n@section('content')\n<div class=\"container\">\n    <div class=\"row justify-content-center\">\n        <div class=\"col-md-8\">\n            <div class=\"card\">\n                <div class=\"card-header\">{{ __('Verify Your Email Address') }}<\/div>\n\n                <div class=\"card-body\">\n                    @if (session('resent'))\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            {{ __('A fresh verification link has been sent to your email address.') }}\n                        <\/div>\n                    @endif\n\n                    {{ __('Before proceeding, please check your email for a verification link.') }}\n                    {{ __('If you did not receive the email') }},\n                    <form class=\"d-inline\" method=\"POST\" action=\"{{ route('verification.resend') }}\">\n                        @csrf\n                        <button type=\"submit\" class=\"btn btn-link p-0 m-0 align-baseline\">{{ __('click here to request another') }}<\/button>.\n                    <\/form>\n                <\/div>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n@endsection\n",
                                "uuid": "bfd7074798fd4666"
                            }
                        },
                        "uuid": "eaf6071135aea190"
                    },
                    "layouts": {
                        "isDir": true,
                        "content": {
                            "admin.blade.php": {
                                "isDir": false,
                                "content": "<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n\n    <title>{{ trans('panel.site_title') }}<\/title>\n    <link href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.2.1\/css\/bootstrap.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/select2\/4.0.5\/css\/select2.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/bootstrap-datetimepicker\/4.17.47\/css\/bootstrap-datetimepicker.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"{{ asset('css\/adminltev3.css') }}\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/use.fontawesome.com\/releases\/v5.6.3\/css\/all.css\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/fonts.googleapis.com\/css?family=Source+Sans+Pro:300,400,400i,700\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/cdn.datatables.net\/1.10.19\/css\/jquery.dataTables.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/cdn.datatables.net\/1.10.19\/css\/dataTables.bootstrap4.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/cdn.datatables.net\/select\/1.3.0\/css\/select.dataTables.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/cdn.datatables.net\/buttons\/1.2.4\/css\/buttons.dataTables.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/dropzone\/5.5.1\/min\/dropzone.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"{{ asset('css\/custom.css') }}\" rel=\"stylesheet\" \/>\n    @yield('styles')\n<\/head>\n\n<body class=\"sidebar-mini layout-fixed\" style=\"height: auto;\">\n    <div class=\"wrapper\">\n        <nav class=\"main-header navbar navbar-expand bg-white navbar-light border-bottom\">\n            <!-- Left navbar links -->\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" data-widget=\"pushmenu\" href=\"#\"><i class=\"fa fa-bars\"><\/i><\/a>\n                <\/li>\n            <\/ul>\n\n            <!-- Right navbar links -->\n            @if(count(config('panel.available_languages', [])) > 1)\n                <ul class=\"navbar-nav ml-auto\">\n                    <li class=\"nav-item dropdown\">\n                        <a class=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\n                            {{ strtoupper(app()->getLocale()) }}\n                        <\/a>\n                        <div class=\"dropdown-menu dropdown-menu-right\">\n                            @foreach(config('panel.available_languages') as $langLocale => $langName)\n                                <a class=\"dropdown-item\" href=\"{{ url()->current() }}?change_language={{ $langLocale }}\">{{ strtoupper($langLocale) }} ({{ $langName }})<\/a>\n                            @endforeach\n                        <\/div>\n                    <\/li>\n                <\/ul>\n            @endif\n\n        <\/nav>\n\n        @include('partials.menu')\n        <div class=\"content-wrapper\" style=\"min-height: 917px;\">\n            <!-- Main content -->\n            <section class=\"content\" style=\"padding-top: 20px\">\n                @if(session('message'))\n                    <div class=\"row mb-2\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"alert alert-success\" role=\"alert\">{{ session('message') }}<\/div>\n                        <\/div>\n                    <\/div>\n                @endif\n                @if($errors->count() > 0)\n                    <div class=\"alert alert-danger\">\n                        <ul class=\"list-unstyled\">\n                            @foreach($errors->all() as $error)\n                                <li>{{ $error }}<\/li>\n                            @endforeach\n                        <\/ul>\n                    <\/div>\n                @endif\n                @yield('content')\n            <\/section>\n            <!-- \/.content -->\n        <\/div>\n\n        <footer class=\"main-footer\">\n            <div class=\"float-right d-none d-sm-block\">\n                <b>Version<\/b> 3.0.0-alpha\n            <\/div>\n            <strong> &copy;<\/strong> {{ trans('global.allRightsReserved') }}\n        <\/footer>\n        <form id=\"logoutform\" action=\"{{ route('logout') }}\" method=\"POST\" style=\"display: none;\">\n            {{ csrf_field() }}\n        <\/form>\n    <\/div>\n    <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/3.3.1\/jquery.min.js\"><\/script>\n    <script src=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.1.1\/js\/bootstrap.min.js\"><\/script>\n    <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/popper.js\/1.14.3\/umd\/popper.min.js\"><\/script>\n    <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/select2\/4.0.5\/js\/select2.full.min.js\"><\/script>\n    <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/moment.js\/2.22.2\/moment.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.datatables.net\/1.10.19\/js\/jquery.dataTables.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.datatables.net\/1.10.19\/js\/dataTables.bootstrap4.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.datatables.net\/buttons\/1.2.4\/js\/dataTables.buttons.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.datatables.net\/select\/1.3.0\/js\/dataTables.select.min.js\"><\/script>\n    <script src=\"\/\/cdn.datatables.net\/buttons\/1.2.4\/js\/buttons.flash.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.datatables.net\/buttons\/1.2.4\/js\/buttons.html5.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.datatables.net\/buttons\/1.2.4\/js\/buttons.print.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.datatables.net\/buttons\/1.2.4\/js\/buttons.colVis.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.rawgit.com\/bpampuch\/pdfmake\/0.1.18\/build\/pdfmake.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.rawgit.com\/bpampuch\/pdfmake\/0.1.18\/build\/vfs_fonts.js\"><\/script>\n    <script src=\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/jszip\/2.5.0\/jszip.min.js\"><\/script>\n    <script src=\"https:\/\/cdn.ckeditor.com\/ckeditor5\/16.0.0\/classic\/ckeditor.js\"><\/script>\n    <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/bootstrap-datetimepicker\/4.17.47\/js\/bootstrap-datetimepicker.min.js\"><\/script>\n    <script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/dropzone\/5.5.1\/min\/dropzone.min.js\"><\/script>\n    <script src=\"{{ asset('js\/main.js') }}\"><\/script>\n    <script>\n        $(function() {\n  let copyButtonTrans = '{{ trans('global.datatables.copy') }}'\n  let csvButtonTrans = '{{ trans('global.datatables.csv') }}'\n  let excelButtonTrans = '{{ trans('global.datatables.excel') }}'\n  let pdfButtonTrans = '{{ trans('global.datatables.pdf') }}'\n  let printButtonTrans = '{{ trans('global.datatables.print') }}'\n  let colvisButtonTrans = '{{ trans('global.datatables.colvis') }}'\n  let selectAllButtonTrans = '{{ trans('global.select_all') }}'\n  let selectNoneButtonTrans = '{{ trans('global.deselect_all') }}'\n\n  let languages = {\n    'en': 'https:\/\/cdn.datatables.net\/plug-ins\/1.10.19\/i18n\/English.json'\n  };\n\n  $.extend(true, $.fn.dataTable.Buttons.defaults.dom.button, { className: 'btn' })\n  $.extend(true, $.fn.dataTable.defaults, {\n    language: {\n      url: languages['{{ app()->getLocale() }}']\n    },\n    columnDefs: [{\n        orderable: false,\n        className: 'select-checkbox',\n        targets: 0\n    }, {\n        orderable: false,\n        searchable: false,\n        targets: -1\n    }],\n    select: {\n      style:    'multi+shift',\n      selector: 'td:first-child'\n    },\n    order: [],\n    scrollX: true,\n    pageLength: 100,\n    dom: 'lBfrtip<\"actions\">',\n    buttons: [\n      {\n        extend: 'selectAll',\n        className: 'btn-primary',\n        text: selectAllButtonTrans,\n        exportOptions: {\n          columns: ':visible'\n        },\n        action: function(e, dt) {\n          e.preventDefault()\n          dt.rows().deselect();\n          dt.rows({ search: 'applied' }).select();\n        }\n      },\n      {\n        extend: 'selectNone',\n        className: 'btn-primary',\n        text: selectNoneButtonTrans,\n        exportOptions: {\n          columns: ':visible'\n        }\n      },\n      {\n        extend: 'copy',\n        className: 'btn-default',\n        text: copyButtonTrans,\n        exportOptions: {\n          columns: ':visible'\n        }\n      },\n      {\n        extend: 'csv',\n        className: 'btn-default',\n        text: csvButtonTrans,\n        exportOptions: {\n          columns: ':visible'\n        }\n      },\n      {\n        extend: 'excel',\n        className: 'btn-default',\n        text: excelButtonTrans,\n        exportOptions: {\n          columns: ':visible'\n        }\n      },\n      {\n        extend: 'pdf',\n        className: 'btn-default',\n        text: pdfButtonTrans,\n        exportOptions: {\n          columns: ':visible'\n        }\n      },\n      {\n        extend: 'print',\n        className: 'btn-default',\n        text: printButtonTrans,\n        exportOptions: {\n          columns: ':visible'\n        }\n      },\n      {\n        extend: 'colvis',\n        className: 'btn-default',\n        text: colvisButtonTrans,\n        exportOptions: {\n          columns: ':visible'\n        }\n      }\n    ]\n  });\n\n  $.fn.dataTable.ext.classes.sPageButton = '';\n});\n\n    <\/script>\n    <script>\n        \/*!\n     * AdminLTE v3.0.0-alpha.2 (https:\/\/adminlte.io)\n     * Copyright 2014-2018 Abdullah Almsaeed <abdullah@almsaeedstudio.com>\n     * Licensed under MIT (https:\/\/github.com\/almasaeed2010\/AdminLTE\/blob\/master\/LICENSE)\n     *\/\n    !function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(e.adminlte={})}(this,function(e){\"use strict\";var i,t,o,n,r,a,s,c,f,l,u,d,h,p,_,g,y,m,v,C,D,E,A,O,w,b,L,S,j,T,I,Q,R,P,x,B,M,k,H,N,Y,U,V,G,W,X,z,F,q,J,K,Z,$,ee,te,ne=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},ie=function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")},oe=(i=jQuery,t=\"ControlSidebar\",o=\"lte.control.sidebar\",n=i.fn[t],r=\".control-sidebar\",a='[data-widget=\"control-sidebar\"]',s=\".main-header\",c=\"control-sidebar-open\",f=\"control-sidebar-slide-open\",l={slide:!0},u=function(){function n(e,t){ie(this,n),this._element=e,this._config=this._getConfig(t)}return n.prototype.show=function(){this._config.slide?i(\"body\").removeClass(f):i(\"body\").removeClass(c)},n.prototype.collapse=function(){this._config.slide?i(\"body\").addClass(f):i(\"body\").addClass(c)},n.prototype.toggle=function(){this._setMargin(),i(\"body\").hasClass(c)||i(\"body\").hasClass(f)?this.show():this.collapse()},n.prototype._getConfig=function(e){return i.extend({},l,e)},n.prototype._setMargin=function(){i(r).css({top:i(s).outerHeight()})},n._jQueryInterface=function(t){return this.each(function(){var e=i(this).data(o);if(e||(e=new n(this,i(this).data()),i(this).data(o,e)),\"undefined\"===e[t])throw new Error(t+\" is not a function\");e[t]()})},n}(),i(document).on(\"click\",a,function(e){e.preventDefault(),u._jQueryInterface.call(i(this),\"toggle\")}),i.fn[t]=u._jQueryInterface,i.fn[t].Constructor=u,i.fn[t].noConflict=function(){return i.fn[t]=n,u._jQueryInterface},u),re=(d=jQuery,h=\"Layout\",p=\"lte.layout\",_=d.fn[h],g=\".main-sidebar\",y=\".main-header\",m=\".content-wrapper\",v=\".main-footer\",C=\"hold-transition\",D=function(){function n(e){ie(this,n),this._element=e,this._init()}return n.prototype.fixLayoutHeight=function(){var e={window:d(window).height(),header:d(y).outerHeight(),footer:d(v).outerHeight(),sidebar:d(g).height()},t=this._max(e);d(m).css(\"min-height\",e.window-e.header-e.footer),d(g).css(\"min-height\",e.window-e.header)},n.prototype._init=function(){var e=this;d(\"body\").removeClass(C),this.fixLayoutHeight(),d(g).on(\"collapsed.lte.treeview expanded.lte.treeview collapsed.lte.pushmenu expanded.lte.pushmenu\",function(){e.fixLayoutHeight()}),d(window).resize(function(){e.fixLayoutHeight()}),d(\"body, html\").css(\"height\",\"auto\")},n.prototype._max=function(t){var n=0;return Object.keys(t).forEach(function(e){t[e]>n&&(n=t[e])}),n},n._jQueryInterface=function(t){return this.each(function(){var e=d(this).data(p);e||(e=new n(this),d(this).data(p,e)),t&&e[t]()})},n}(),d(window).on(\"load\",function(){D._jQueryInterface.call(d(\"body\"))}),d.fn[h]=D._jQueryInterface,d.fn[h].Constructor=D,d.fn[h].noConflict=function(){return d.fn[h]=_,D._jQueryInterface},D),ae=(E=jQuery,A=\"PushMenu\",w=\".\"+(O=\"lte.pushmenu\"),b=E.fn[A],L={COLLAPSED:\"collapsed\"+w,SHOWN:\"shown\"+w},S={screenCollapseSize:768},j={TOGGLE_BUTTON:'[data-widget=\"pushmenu\"]',SIDEBAR_MINI:\".sidebar-mini\",SIDEBAR_COLLAPSED:\".sidebar-collapse\",BODY:\"body\",OVERLAY:\"#sidebar-overlay\",WRAPPER:\".wrapper\"},T=\"sidebar-collapse\",I=\"sidebar-open\",Q=function(){function n(e,t){ie(this,n),this._element=e,this._options=E.extend({},S,t),E(j.OVERLAY).length||this._addOverlay()}return n.prototype.show=function(){E(j.BODY).addClass(I).removeClass(T);var e=E.Event(L.SHOWN);E(this._element).trigger(e)},n.prototype.collapse=function(){E(j.BODY).removeClass(I).addClass(T);var e=E.Event(L.COLLAPSED);E(this._element).trigger(e)},n.prototype.toggle=function(){(E(window).width()>=this._options.screenCollapseSize?!E(j.BODY).hasClass(T):E(j.BODY).hasClass(I))?this.collapse():this.show()},n.prototype._addOverlay=function(){var e=this,t=E(\"<div \/>\",{id:\"sidebar-overlay\"});t.on(\"click\",function(){e.collapse()}),E(j.WRAPPER).append(t)},n._jQueryInterface=function(t){return this.each(function(){var e=E(this).data(O);e||(e=new n(this),E(this).data(O,e)),t&&e[t]()})},n}(),E(document).on(\"click\",j.TOGGLE_BUTTON,function(e){e.preventDefault();var t=e.currentTarget;\"pushmenu\"!==E(t).data(\"widget\")&&(t=E(t).closest(j.TOGGLE_BUTTON)),Q._jQueryInterface.call(E(t),\"toggle\")}),E.fn[A]=Q._jQueryInterface,E.fn[A].Constructor=Q,E.fn[A].noConflict=function(){return E.fn[A]=b,Q._jQueryInterface},Q),se=(R=jQuery,P=\"Treeview\",B=\".\"+(x=\"lte.treeview\"),M=R.fn[P],k={SELECTED:\"selected\"+B,EXPANDED:\"expanded\"+B,COLLAPSED:\"collapsed\"+B,LOAD_DATA_API:\"load\"+B},H=\".nav-item\",N=\".nav-treeview\",Y=\".menu-open\",V=\"menu-open\",G={trigger:(U='[data-widget=\"treeview\"]')+\" \"+\".nav-link\",animationSpeed:300,accordion:!0},W=function(){function i(e,t){ie(this,i),this._config=t,this._element=e}return i.prototype.init=function(){this._setupListeners()},i.prototype.expand=function(e,t){var n=this,i=R.Event(k.EXPANDED);if(this._config.accordion){var o=t.siblings(Y).first(),r=o.find(N).first();this.collapse(r,o)}e.slideDown(this._config.animationSpeed,function(){t.addClass(V),R(n._element).trigger(i)})},i.prototype.collapse=function(e,t){var n=this,i=R.Event(k.COLLAPSED);e.slideUp(this._config.animationSpeed,function(){t.removeClass(V),R(n._element).trigger(i),e.find(Y+\" > \"+N).slideUp(),e.find(Y).removeClass(V)})},i.prototype.toggle=function(e){var t=R(e.currentTarget),n=t.next();if(n.is(N)){e.preventDefault();var i=t.parents(H).first();i.hasClass(V)?this.collapse(R(n),i):this.expand(R(n),i)}},i.prototype._setupListeners=function(){var t=this;R(document).on(\"click\",this._config.trigger,function(e){t.toggle(e)})},i._jQueryInterface=function(n){return this.each(function(){var e=R(this).data(x),t=R.extend({},G,R(this).data());e||(e=new i(R(this),t),R(this).data(x,e)),\"init\"===n&&e[n]()})},i}(),R(window).on(k.LOAD_DATA_API,function(){R(U).each(function(){W._jQueryInterface.call(R(this),\"init\")})}),R.fn[P]=W._jQueryInterface,R.fn[P].Constructor=W,R.fn[P].noConflict=function(){return R.fn[P]=M,W._jQueryInterface},W),ce=(X=jQuery,z=\"Widget\",q=\".\"+(F=\"lte.widget\"),J=X.fn[z],K={EXPANDED:\"expanded\"+q,COLLAPSED:\"collapsed\"+q,REMOVED:\"removed\"+q},$=\"collapsed-card\",ee={animationSpeed:\"normal\",collapseTrigger:(Z={DATA_REMOVE:'[data-widget=\"remove\"]',DATA_COLLAPSE:'[data-widget=\"collapse\"]',CARD:\".card\",CARD_HEADER:\".card-header\",CARD_BODY:\".card-body\",CARD_FOOTER:\".card-footer\",COLLAPSED:\".collapsed-card\"}).DATA_COLLAPSE,removeTrigger:Z.DATA_REMOVE},te=function(){function n(e,t){ie(this,n),this._element=e,this._parent=e.parents(Z.CARD).first(),this._settings=X.extend({},ee,t)}return n.prototype.collapse=function(){var e=this;this._parent.children(Z.CARD_BODY+\", \"+Z.CARD_FOOTER).slideUp(this._settings.animationSpeed,function(){e._parent.addClass($)});var t=X.Event(K.COLLAPSED);this._element.trigger(t,this._parent)},n.prototype.expand=function(){var e=this;this._parent.children(Z.CARD_BODY+\", \"+Z.CARD_FOOTER).slideDown(this._settings.animationSpeed,function(){e._parent.removeClass($)});var t=X.Event(K.EXPANDED);this._element.trigger(t,this._parent)},n.prototype.remove=function(){this._parent.slideUp();var e=X.Event(K.REMOVED);this._element.trigger(e,this._parent)},n.prototype.toggle=function(){this._parent.hasClass($)?this.expand():this.collapse()},n.prototype._init=function(e){var t=this;this._parent=e,X(this).find(this._settings.collapseTrigger).click(function(){t.toggle()}),X(this).find(this._settings.removeTrigger).click(function(){t.remove()})},n._jQueryInterface=function(t){return this.each(function(){var e=X(this).data(F);e||(e=new n(X(this),e),X(this).data(F,\"string\"==typeof t?e:t)),\"string\"==typeof t&&t.match(\/remove|toggle\/)?e[t]():\"object\"===(\"undefined\"==typeof t?\"undefined\":ne(t))&&e._init(X(this))})},n}(),X(document).on(\"click\",Z.DATA_COLLAPSE,function(e){e&&e.preventDefault(),te._jQueryInterface.call(X(this),\"toggle\")}),X(document).on(\"click\",Z.DATA_REMOVE,function(e){e&&e.preventDefault(),te._jQueryInterface.call(X(this),\"remove\")}),X.fn[z]=te._jQueryInterface,X.fn[z].Constructor=te,X.fn[z].noConflict=function(){return X.fn[z]=J,te._jQueryInterface},te);e.ControlSidebar=oe,e.Layout=re,e.PushMenu=ae,e.Treeview=se,e.Widget=ce,Object.defineProperty(e,\"__esModule\",{value:!0})});\n    \/\/# sourceMappingURL=adminlte.min.js.map\n\n    <\/script>\n    @yield('scripts')\n<\/body>\n\n<\/html>",
                                "uuid": "b516a647e64cb02d"
                            },
                            "app.blade.php": {
                                "isDir": false,
                                "content": "<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n\n    <title>{{ trans('panel.site_title') }}<\/title>\n    <link href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.2.1\/css\/bootstrap.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"{{ asset('css\/adminltev3.css') }}\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/use.fontawesome.com\/releases\/v5.6.3\/css\/all.css\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/cdn.jsdelivr.net\/npm\/icheck-bootstrap@3.0.1\/icheck-bootstrap.min.css\" rel=\"stylesheet\" \/>\n    <link href=\"https:\/\/fonts.googleapis.com\/css?family=Source+Sans+Pro:300,400,400i,700\" rel=\"stylesheet\" \/>\n    @yield('styles')\n<\/head>\n\n<body class=\"header-fixed sidebar-fixed aside-menu-fixed aside-menu-hidden login-page\">\n    @yield('content')\n    @yield('scripts')\n<\/body>\n\n<\/html>",
                                "uuid": "a9ff01c2e82b1905"
                            }
                        },
                        "uuid": "cdb2e45ac7cfb00b"
                    },
                    "partials": {
                        "isDir": true,
                        "content": {
                            "datatablesActions.blade.php": {
                                "isDir": false,
                                "content": "@can($viewGate)\n    <a class=\"btn btn-xs btn-primary\" href=\"{{ route('admin.' . $crudRoutePart . '.show', $row->id) }}\">\n        {{ trans('global.view') }}\n    <\/a>\n@endcan\n@can($editGate)\n    <a class=\"btn btn-xs btn-info\" href=\"{{ route('admin.' . $crudRoutePart . '.edit', $row->id) }}\">\n        {{ trans('global.edit') }}\n    <\/a>\n@endcan\n@can($deleteGate)\n    <form action=\"{{ route('admin.' . $crudRoutePart . '.destroy', $row->id) }}\" method=\"POST\" onsubmit=\"return confirm('{{ trans('global.areYouSure') }}');\" style=\"display: inline-block;\">\n        <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n        <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\">\n        <input type=\"submit\" class=\"btn btn-xs btn-danger\" value=\"{{ trans('global.delete') }}\">\n    <\/form>\n@endcan",
                                "uuid": "d6f001ab4878742e"
                            },
                            "menu.blade.php": {
                                "isDir": false,
                                "content": "<aside class=\"main-sidebar sidebar-dark-primary elevation-4\" style=\"min-height: 917px;\">\n    <!-- Brand Logo -->\n    <a href=\"#\" class=\"brand-link\">\n        <span class=\"brand-text font-weight-light\">{{ trans('panel.site_title') }}<\/span>\n    <\/a>\n\n    <!-- Sidebar -->\n    <div class=\"sidebar\">\n        <!-- Sidebar user (optional) -->\n\n        <!-- Sidebar Menu -->\n        <nav class=\"mt-2\">\n            <ul class=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link {{ request()->routeIs(\"admin.home\") ? \"active\" : \"\" }}\" href=\"{{ route(\"admin.home\") }}\">\n                        <i class=\"fas fa-fw fa-tachometer-alt nav-icon\">\n                        <\/i>\n                        <p>\n                            {{ trans('global.dashboard') }}\n                        <\/p>\n                    <\/a>\n                <\/li>\n                @can('user_management_access')\n                    <li class=\"nav-item has-treeview {{ request()->is(\"admin\/permissions*\") ? \"menu-open\" : \"\" }} {{ request()->is(\"admin\/roles*\") ? \"menu-open\" : \"\" }} {{ request()->is(\"admin\/users*\") ? \"menu-open\" : \"\" }} {{ request()->is(\"admin\/audit-logs*\") ? \"menu-open\" : \"\" }}\">\n                        <a class=\"nav-link nav-dropdown-toggle {{ request()->is(\"admin\/permissions*\") ? \"active\" : \"\" }} {{ request()->is(\"admin\/roles*\") ? \"active\" : \"\" }} {{ request()->is(\"admin\/users*\") ? \"active\" : \"\" }} {{ request()->is(\"admin\/audit-logs*\") ? \"active\" : \"\" }}\" href=\"#\">\n                            <i class=\"fa-fw nav-icon fas fa-users\">\n\n                            <\/i>\n                            <p>\n                                {{ trans('cruds.userManagement.title') }}\n                                <i class=\"right fa fa-fw fa-angle-left nav-icon\"><\/i>\n                            <\/p>\n                        <\/a>\n                        <ul class=\"nav nav-treeview\">\n                            @can('permission_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.permissions.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/permissions\") || request()->is(\"admin\/permissions\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-unlock-alt\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.permission.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                            @can('role_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.roles.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/roles\") || request()->is(\"admin\/roles\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-briefcase\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.role.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                            @can('user_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.users.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/users\") || request()->is(\"admin\/users\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-user\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.user.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                            @can('audit_log_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.audit-logs.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/audit-logs\") || request()->is(\"admin\/audit-logs\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-file-alt\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.auditLog.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                        <\/ul>\n                    <\/li>\n                @endcan\n                @can('asset_management_access')\n                    <li class=\"nav-item has-treeview {{ request()->is(\"admin\/asset-categories*\") ? \"menu-open\" : \"\" }} {{ request()->is(\"admin\/asset-locations*\") ? \"menu-open\" : \"\" }} {{ request()->is(\"admin\/asset-statuses*\") ? \"menu-open\" : \"\" }} {{ request()->is(\"admin\/assets*\") ? \"menu-open\" : \"\" }} {{ request()->is(\"admin\/assets-histories*\") ? \"menu-open\" : \"\" }}\">\n                        <a class=\"nav-link nav-dropdown-toggle {{ request()->is(\"admin\/asset-categories*\") ? \"active\" : \"\" }} {{ request()->is(\"admin\/asset-locations*\") ? \"active\" : \"\" }} {{ request()->is(\"admin\/asset-statuses*\") ? \"active\" : \"\" }} {{ request()->is(\"admin\/assets*\") ? \"active\" : \"\" }} {{ request()->is(\"admin\/assets-histories*\") ? \"active\" : \"\" }}\" href=\"#\">\n                            <i class=\"fa-fw nav-icon fas fa-book\">\n\n                            <\/i>\n                            <p>\n                                {{ trans('cruds.assetManagement.title') }}\n                                <i class=\"right fa fa-fw fa-angle-left nav-icon\"><\/i>\n                            <\/p>\n                        <\/a>\n                        <ul class=\"nav nav-treeview\">\n                            @can('asset_category_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.asset-categories.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/asset-categories\") || request()->is(\"admin\/asset-categories\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-tags\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.assetCategory.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                            @can('asset_location_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.asset-locations.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/asset-locations\") || request()->is(\"admin\/asset-locations\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-map-marker\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.assetLocation.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                            @can('asset_status_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.asset-statuses.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/asset-statuses\") || request()->is(\"admin\/asset-statuses\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-server\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.assetStatus.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                            @can('asset_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.assets.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/assets\") || request()->is(\"admin\/assets\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-book\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.asset.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                            @can('assets_history_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.assets-histories.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/assets-histories\") || request()->is(\"admin\/assets-histories\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-th-list\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.assetsHistory.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                        <\/ul>\n                    <\/li>\n                @endcan\n                @can('content_management_access')\n                    <li class=\"nav-item has-treeview {{ request()->is(\"admin\/content-categories*\") ? \"menu-open\" : \"\" }} {{ request()->is(\"admin\/content-tags*\") ? \"menu-open\" : \"\" }} {{ request()->is(\"admin\/content-pages*\") ? \"menu-open\" : \"\" }}\">\n                        <a class=\"nav-link nav-dropdown-toggle {{ request()->is(\"admin\/content-categories*\") ? \"active\" : \"\" }} {{ request()->is(\"admin\/content-tags*\") ? \"active\" : \"\" }} {{ request()->is(\"admin\/content-pages*\") ? \"active\" : \"\" }}\" href=\"#\">\n                            <i class=\"fa-fw nav-icon fas fa-book\">\n\n                            <\/i>\n                            <p>\n                                {{ trans('cruds.contentManagement.title') }}\n                                <i class=\"right fa fa-fw fa-angle-left nav-icon\"><\/i>\n                            <\/p>\n                        <\/a>\n                        <ul class=\"nav nav-treeview\">\n                            @can('content_category_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.content-categories.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/content-categories\") || request()->is(\"admin\/content-categories\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-folder\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.contentCategory.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                            @can('content_tag_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.content-tags.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/content-tags\") || request()->is(\"admin\/content-tags\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-tags\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.contentTag.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                            @can('content_page_access')\n                                <li class=\"nav-item\">\n                                    <a href=\"{{ route(\"admin.content-pages.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/content-pages\") || request()->is(\"admin\/content-pages\/*\") ? \"active\" : \"\" }}\">\n                                        <i class=\"fa-fw nav-icon fas fa-file\">\n\n                                        <\/i>\n                                        <p>\n                                            {{ trans('cruds.contentPage.title') }}\n                                        <\/p>\n                                    <\/a>\n                                <\/li>\n                            @endcan\n                        <\/ul>\n                    <\/li>\n                @endcan\n                @can('provinsi_access')\n                    <li class=\"nav-item\">\n                        <a href=\"{{ route(\"admin.provinsis.index\") }}\" class=\"nav-link {{ request()->is(\"admin\/provinsis\") || request()->is(\"admin\/provinsis\/*\") ? \"active\" : \"\" }}\">\n                            <i class=\"fa-fw nav-icon fas fa-location-arrow\">\n\n                            <\/i>\n                            <p>\n                                {{ trans('cruds.provinsi.title') }}\n                            <\/p>\n                        <\/a>\n                    <\/li>\n                @endcan\n                @if(file_exists(app_path('Http\/Controllers\/Auth\/ChangePasswordController.php')))\n                    @can('profile_password_edit')\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link {{ request()->is('profile\/password') || request()->is('profile\/password\/*') ? 'active' : '' }}\" href=\"{{ route('profile.password.edit') }}\">\n                                <i class=\"fa-fw fas fa-key nav-icon\">\n                                <\/i>\n                                <p>\n                                    {{ trans('global.change_password') }}\n                                <\/p>\n                            <\/a>\n                        <\/li>\n                    @endcan\n                @endif\n                <li class=\"nav-item\">\n                    <a href=\"#\" class=\"nav-link\" onclick=\"event.preventDefault(); document.getElementById('logoutform').submit();\">\n                        <p>\n                            <i class=\"fas fa-fw fa-sign-out-alt nav-icon\">\n\n                            <\/i>\n                            <p>{{ trans('global.logout') }}<\/p>\n                        <\/p>\n                    <\/a>\n                <\/li>\n            <\/ul>\n        <\/nav>\n        <!-- \/.sidebar-menu -->\n    <\/div>\n    <!-- \/.sidebar -->\n<\/aside>",
                                "uuid": "b598bc5e69e423f9"
                            }
                        },
                        "uuid": "3430d22a2e5e44a4"
                    },
                    "home.blade.php": {
                        "isDir": false,
                        "content": "@extends('layouts.admin')\n@section('content')\n<div class=\"content\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    Dashboard\n                <\/div>\n\n                <div class=\"card-body\">\n                    @if(session('status'))\n                        <div class=\"alert alert-success\" role=\"alert\">\n                            {{ session('status') }}\n                        <\/div>\n                    @endif\n\n                    You are logged in!\n                <\/div>\n            <\/div>\n        <\/div>\n    <\/div>\n<\/div>\n@endsection\n@section('scripts')\n@parent\n\n@endsection",
                        "uuid": "3293145a4b445452"
                    },
                    "welcome.blade.php": {
                        "isDir": false,
                        "content": "<!DOCTYPE html>\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n        <title>Laravel<\/title>\n\n        <!-- Fonts -->\n        <link rel=\"preconnect\" href=\"https:\/\/fonts.bunny.net\">\n        <link href=\"https:\/\/fonts.bunny.net\/css?family=figtree:400,600&display=swap\" rel=\"stylesheet\" \/>\n\n        <!-- Styles -->\n        <style>\n            \/* ! tailwindcss v3.2.4 | MIT License | https:\/\/tailwindcss.com *\/*,::after,::before{box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}::after,::before{--tw-content:''}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:Figtree, sans-serif;font-feature-settings:normal}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}*, ::before, ::after{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 \/ 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 \/ 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgb(59 130 246 \/ 0.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.relative{position:relative}.mx-auto{margin-left:auto;margin-right:auto}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.ml-4{margin-left:1rem}.mt-16{margin-top:4rem}.mt-6{margin-top:1.5rem}.mt-4{margin-top:1rem}.-mt-px{margin-top:-1px}.mr-1{margin-right:0.25rem}.flex{display:flex}.inline-flex{display:inline-flex}.grid{display:grid}.h-16{height:4rem}.h-7{height:1.75rem}.h-6{height:1.5rem}.h-5{height:1.25rem}.min-h-screen{min-height:100vh}.w-auto{width:auto}.w-16{width:4rem}.w-7{width:1.75rem}.w-6{width:1.5rem}.w-5{width:1.25rem}.max-w-7xl{max-width:80rem}.shrink-0{flex-shrink:0}.scale-100{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.grid-cols-1{grid-template-columns:repeat(1, minmax(0, 1fr))}.items-center{align-items:center}.justify-center{justify-content:center}.gap-6{gap:1.5rem}.gap-4{gap:1rem}.self-center{align-self:center}.rounded-lg{border-radius:0.5rem}.rounded-full{border-radius:9999px}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246 \/ var(--tw-bg-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255 \/ var(--tw-bg-opacity))}.bg-red-50{--tw-bg-opacity:1;background-color:rgb(254 242 242 \/ var(--tw-bg-opacity))}.bg-dots-darker{background-image:url(\"data:image\/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(0,0,0,0.07)'\/%3E%3C\/svg%3E\")}.from-gray-700\\\/50{--tw-gradient-from:rgb(55 65 81 \/ 0.5);--tw-gradient-to:rgb(55 65 81 \/ 0);--tw-gradient-stops:var(--tw-gradient-from), var(--tw-gradient-to)}.via-transparent{--tw-gradient-to:rgb(0 0 0 \/ 0);--tw-gradient-stops:var(--tw-gradient-from), transparent, var(--tw-gradient-to)}.bg-center{background-position:center}.stroke-red-500{stroke:#ef4444}.stroke-gray-400{stroke:#9ca3af}.p-6{padding:1.5rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.text-center{text-align:center}.text-right{text-align:right}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-sm{font-size:0.875rem;line-height:1.25rem}.font-semibold{font-weight:600}.leading-relaxed{line-height:1.625}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99 \/ var(--tw-text-opacity))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39 \/ var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128 \/ var(--tw-text-opacity))}.underline{-webkit-text-decoration-line:underline;text-decoration-line:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.shadow-2xl{--tw-shadow:0 25px 50px -12px rgb(0 0 0 \/ 0.25);--tw-shadow-colored:0 25px 50px -12px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.shadow-gray-500\\\/20{--tw-shadow-color:rgb(107 114 128 \/ 0.2);--tw-shadow:var(--tw-shadow-colored)}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}.selection\\:bg-red-500 *::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 \/ var(--tw-bg-opacity))}.selection\\:text-white *::selection{--tw-text-opacity:1;color:rgb(255 255 255 \/ var(--tw-text-opacity))}.selection\\:bg-red-500::selection{--tw-bg-opacity:1;background-color:rgb(239 68 68 \/ var(--tw-bg-opacity))}.selection\\:text-white::selection{--tw-text-opacity:1;color:rgb(255 255 255 \/ var(--tw-text-opacity))}.hover\\:text-gray-900:hover{--tw-text-opacity:1;color:rgb(17 24 39 \/ var(--tw-text-opacity))}.hover\\:text-gray-700:hover{--tw-text-opacity:1;color:rgb(55 65 81 \/ var(--tw-text-opacity))}.focus\\:rounded-sm:focus{border-radius:0.125rem}.focus\\:outline:focus{outline-style:solid}.focus\\:outline-2:focus{outline-width:2px}.focus\\:outline-red-500:focus{outline-color:#ef4444}.group:hover .group-hover\\:stroke-gray-600{stroke:#4b5563}@media (prefers-reduced-motion: no-preference){.motion-safe\\:hover\\:scale-\\[1\\.01\\]:hover{--tw-scale-x:1.01;--tw-scale-y:1.01;transform:translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}}@media (prefers-color-scheme: dark){.dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39 \/ var(--tw-bg-opacity))}.dark\\:bg-gray-800\\\/50{background-color:rgb(31 41 55 \/ 0.5)}.dark\\:bg-red-800\\\/20{background-color:rgb(153 27 27 \/ 0.2)}.dark\\:bg-dots-lighter{background-image:url(\"data:image\/svg+xml,%3Csvg width='30' height='30' viewBox='0 0 30 30' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'%3E%3Cpath d='M1.22676 0C1.91374 0 2.45351 0.539773 2.45351 1.22676C2.45351 1.91374 1.91374 2.45351 1.22676 2.45351C0.539773 2.45351 0 1.91374 0 1.22676C0 0.539773 0.539773 0 1.22676 0Z' fill='rgba(255,255,255,0.07)'\/%3E%3C\/svg%3E\")}.dark\\:bg-gradient-to-bl{background-image:linear-gradient(to bottom left, var(--tw-gradient-stops))}.dark\\:stroke-gray-600{stroke:#4b5563}.dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175 \/ var(--tw-text-opacity))}.dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255 \/ var(--tw-text-opacity))}.dark\\:shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}.dark\\:ring-1{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.dark\\:ring-inset{--tw-ring-inset:inset}.dark\\:ring-white\\\/5{--tw-ring-color:rgb(255 255 255 \/ 0.05)}.dark\\:hover\\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255 \/ var(--tw-text-opacity))}.group:hover .dark\\:group-hover\\:stroke-gray-400{stroke:#9ca3af}}@media (min-width: 640px){.sm\\:fixed{position:fixed}.sm\\:top-0{top:0px}.sm\\:right-0{right:0px}.sm\\:ml-0{margin-left:0px}.sm\\:flex{display:flex}.sm\\:items-center{align-items:center}.sm\\:justify-center{justify-content:center}.sm\\:justify-between{justify-content:space-between}.sm\\:text-left{text-align:left}.sm\\:text-right{text-align:right}}@media (min-width: 768px){.md\\:grid-cols-2{grid-template-columns:repeat(2, minmax(0, 1fr))}}@media (min-width: 1024px){.lg\\:gap-8{gap:2rem}.lg\\:p-8{padding:2rem}}\n        <\/style>\n    <\/head>\n    <body class=\"antialiased\">\n        <div class=\"relative sm:flex sm:justify-center sm:items-center min-h-screen bg-dots-darker bg-center bg-gray-100 dark:bg-dots-lighter dark:bg-gray-900 selection:bg-red-500 selection:text-white\">\n            @if (Route::has('login'))\n                <div class=\"sm:fixed sm:top-0 sm:right-0 p-6 text-right\">\n                    @auth\n                        <a href=\"{{ url('\/home') }}\" class=\"font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Home<\/a>\n                    @else\n                        <a href=\"{{ route('login') }}\" class=\"font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Log in<\/a>\n\n                        @if (Route::has('register'))\n                            <a href=\"{{ route('register') }}\" class=\"ml-4 font-semibold text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Register<\/a>\n                        @endif\n                    @endauth\n                <\/div>\n            @endif\n\n            <div class=\"max-w-7xl mx-auto p-6 lg:p-8\">\n                <div class=\"flex justify-center\">\n                    <svg viewBox=\"0 0 62 65\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" class=\"h-16 w-auto bg-gray-100 dark:bg-gray-900\">\n                        <path d=\"M61.8548 14.6253C61.8778 14.7102 61.8895 14.7978 61.8897 14.8858V28.5615C61.8898 28.737 61.8434 28.9095 61.7554 29.0614C61.6675 29.2132 61.5409 29.3392 61.3887 29.4265L49.9104 36.0351V49.1337C49.9104 49.4902 49.7209 49.8192 49.4118 49.9987L25.4519 63.7916C25.3971 63.8227 25.3372 63.8427 25.2774 63.8639C25.255 63.8714 25.2338 63.8851 25.2101 63.8913C25.0426 63.9354 24.8666 63.9354 24.6991 63.8913C24.6716 63.8838 24.6467 63.8689 24.6205 63.8589C24.5657 63.8389 24.5084 63.8215 24.456 63.7916L0.501061 49.9987C0.348882 49.9113 0.222437 49.7853 0.134469 49.6334C0.0465019 49.4816 0.000120578 49.3092 0 49.1337L0 8.10652C0 8.01678 0.0124642 7.92953 0.0348998 7.84477C0.0423783 7.8161 0.0598282 7.78993 0.0697995 7.76126C0.0884958 7.70891 0.105946 7.65531 0.133367 7.6067C0.152063 7.5743 0.179485 7.54812 0.20192 7.51821C0.230588 7.47832 0.256763 7.43719 0.290416 7.40229C0.319084 7.37362 0.356476 7.35243 0.388883 7.32751C0.425029 7.29759 0.457436 7.26518 0.498568 7.2415L12.4779 0.345059C12.6296 0.257786 12.8015 0.211853 12.9765 0.211853C13.1515 0.211853 13.3234 0.257786 13.475 0.345059L25.4531 7.2415H25.4556C25.4955 7.26643 25.5292 7.29759 25.5653 7.32626C25.5977 7.35119 25.6339 7.37362 25.6625 7.40104C25.6974 7.43719 25.7224 7.47832 25.7523 7.51821C25.7735 7.54812 25.8021 7.5743 25.8196 7.6067C25.8483 7.65656 25.8645 7.70891 25.8844 7.76126C25.8944 7.78993 25.9118 7.8161 25.9193 7.84602C25.9423 7.93096 25.954 8.01853 25.9542 8.10652V33.7317L35.9355 27.9844V14.8846C35.9355 14.7973 35.948 14.7088 35.9704 14.6253C35.9792 14.5954 35.9954 14.5692 36.0053 14.5405C36.0253 14.4882 36.0427 14.4346 36.0702 14.386C36.0888 14.3536 36.1163 14.3274 36.1375 14.2975C36.1674 14.2576 36.1923 14.2165 36.2272 14.1816C36.2559 14.1529 36.292 14.1317 36.3244 14.1068C36.3618 14.0769 36.3942 14.0445 36.4341 14.0208L48.4147 7.12434C48.5663 7.03694 48.7383 6.99094 48.9133 6.99094C49.0883 6.99094 49.2602 7.03694 49.4118 7.12434L61.3899 14.0208C61.4323 14.0457 61.4647 14.0769 61.5021 14.1055C61.5333 14.1305 61.5694 14.1529 61.5981 14.1803C61.633 14.2165 61.6579 14.2576 61.6878 14.2975C61.7103 14.3274 61.7377 14.3536 61.7551 14.386C61.7838 14.4346 61.8 14.4882 61.8199 14.5405C61.8312 14.5692 61.8474 14.5954 61.8548 14.6253ZM59.893 27.9844V16.6121L55.7013 19.0252L49.9104 22.3593V33.7317L59.8942 27.9844H59.893ZM47.9149 48.5566V37.1768L42.2187 40.4299L25.953 49.7133V61.2003L47.9149 48.5566ZM1.99677 9.83281V48.5566L23.9562 61.199V49.7145L12.4841 43.2219L12.4804 43.2194L12.4754 43.2169C12.4368 43.1945 12.4044 43.1621 12.3682 43.1347C12.3371 43.1097 12.3009 43.0898 12.2735 43.0624L12.271 43.0586C12.2386 43.0275 12.2162 42.9888 12.1887 42.9539C12.1638 42.9203 12.1339 42.8916 12.114 42.8567L12.1127 42.853C12.0903 42.8156 12.0766 42.7707 12.0604 42.7283C12.0442 42.6909 12.023 42.656 12.013 42.6161C12.0005 42.5688 11.998 42.5177 11.9931 42.4691C11.9881 42.4317 11.9781 42.3943 11.9781 42.3569V15.5801L6.18848 12.2446L1.99677 9.83281ZM12.9777 2.36177L2.99764 8.10652L12.9752 13.8513L22.9541 8.10527L12.9752 2.36177H12.9777ZM18.1678 38.2138L23.9574 34.8809V9.83281L19.7657 12.2459L13.9749 15.5801V40.6281L18.1678 38.2138ZM48.9133 9.14105L38.9344 14.8858L48.9133 20.6305L58.8909 14.8846L48.9133 9.14105ZM47.9149 22.3593L42.124 19.0252L37.9323 16.6121V27.9844L43.7219 31.3174L47.9149 33.7317V22.3593ZM24.9533 47.987L39.59 39.631L46.9065 35.4555L36.9352 29.7145L25.4544 36.3242L14.9907 42.3482L24.9533 47.987Z\" fill=\"#FF2D20\"\/>\n                    <\/svg>\n                <\/div>\n\n                <div class=\"mt-16\">\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 lg:gap-8\">\n                        <a href=\"https:\/\/laravel.com\/docs\" class=\"scale-100 p-6 bg-white dark:bg-gray-800\/50 dark:bg-gradient-to-bl from-gray-700\/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white\/5 rounded-lg shadow-2xl shadow-gray-500\/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500\">\n                            <div>\n                                <div class=\"h-16 w-16 bg-red-50 dark:bg-red-800\/20 flex items-center justify-center rounded-full\">\n                                    <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" class=\"w-7 h-7 stroke-red-500\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25\" \/>\n                                    <\/svg>\n                                <\/div>\n\n                                <h2 class=\"mt-6 text-xl font-semibold text-gray-900 dark:text-white\">Documentation<\/h2>\n\n                                <p class=\"mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed\">\n                                    Laravel has wonderful documentation covering every aspect of the framework. Whether you are a newcomer or have prior experience with Laravel, we recommend reading our documentation from beginning to end.\n                                <\/p>\n                            <\/div>\n\n                            <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" class=\"self-center shrink-0 stroke-red-500 w-6 h-6 mx-6\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75\" \/>\n                            <\/svg>\n                        <\/a>\n\n                        <a href=\"https:\/\/laracasts.com\" class=\"scale-100 p-6 bg-white dark:bg-gray-800\/50 dark:bg-gradient-to-bl from-gray-700\/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white\/5 rounded-lg shadow-2xl shadow-gray-500\/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500\">\n                            <div>\n                                <div class=\"h-16 w-16 bg-red-50 dark:bg-red-800\/20 flex items-center justify-center rounded-full\">\n                                    <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" class=\"w-7 h-7 stroke-red-500\">\n                                        <path stroke-linecap=\"round\" d=\"M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z\" \/>\n                                    <\/svg>\n                                <\/div>\n\n                                <h2 class=\"mt-6 text-xl font-semibold text-gray-900 dark:text-white\">Laracasts<\/h2>\n\n                                <p class=\"mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed\">\n                                    Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.\n                                <\/p>\n                            <\/div>\n\n                            <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" class=\"self-center shrink-0 stroke-red-500 w-6 h-6 mx-6\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75\" \/>\n                            <\/svg>\n                        <\/a>\n\n                        <a href=\"https:\/\/laravel-news.com\" class=\"scale-100 p-6 bg-white dark:bg-gray-800\/50 dark:bg-gradient-to-bl from-gray-700\/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white\/5 rounded-lg shadow-2xl shadow-gray-500\/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500\">\n                            <div>\n                                <div class=\"h-16 w-16 bg-red-50 dark:bg-red-800\/20 flex items-center justify-center rounded-full\">\n                                    <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" class=\"w-7 h-7 stroke-red-500\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 7.5h1.5m-1.5 3h1.5m-7.5 3h7.5m-7.5 3h7.5m3-9h3.375c.621 0 1.125.504 1.125 1.125V18a2.25 2.25 0 01-2.25 2.25M16.5 7.5V18a2.25 2.25 0 002.25 2.25M16.5 7.5V4.875c0-.621-.504-1.125-1.125-1.125H4.125C3.504 3.75 3 4.254 3 4.875V18a2.25 2.25 0 002.25 2.25h13.5M6 7.5h3v3H6v-3z\" \/>\n                                    <\/svg>\n                                <\/div>\n\n                                <h2 class=\"mt-6 text-xl font-semibold text-gray-900 dark:text-white\">Laravel News<\/h2>\n\n                                <p class=\"mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed\">\n                                    Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.\n                                <\/p>\n                            <\/div>\n\n                            <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" class=\"self-center shrink-0 stroke-red-500 w-6 h-6 mx-6\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75\" \/>\n                            <\/svg>\n                        <\/a>\n\n                        <div class=\"scale-100 p-6 bg-white dark:bg-gray-800\/50 dark:bg-gradient-to-bl from-gray-700\/50 via-transparent dark:ring-1 dark:ring-inset dark:ring-white\/5 rounded-lg shadow-2xl shadow-gray-500\/20 dark:shadow-none flex motion-safe:hover:scale-[1.01] transition-all duration-250 focus:outline focus:outline-2 focus:outline-red-500\">\n                            <div>\n                                <div class=\"h-16 w-16 bg-red-50 dark:bg-red-800\/20 flex items-center justify-center rounded-full\">\n                                    <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" class=\"w-7 h-7 stroke-red-500\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.115 5.19l.319 1.913A6 6 0 008.11 10.36L9.75 12l-.387.775c-.217.433-.132.956.21 1.298l1.348 1.348c.21.21.329.497.329.795v1.089c0 .426.24.815.622 1.006l.153.076c.433.217.956.132 1.298-.21l.723-.723a8.7 8.7 0 002.288-4.042 1.087 1.087 0 00-.358-1.099l-1.33-1.108c-.251-.21-.582-.299-.905-.245l-1.17.195a1.125 1.125 0 01-.98-.314l-.295-.295a1.125 1.125 0 010-1.591l.13-.132a1.125 1.125 0 011.3-.21l.603.302a.809.809 0 001.086-1.086L14.25 7.5l1.256-.837a4.5 4.5 0 001.528-1.732l.146-.292M6.115 5.19A9 9 0 1017.18 4.64M6.115 5.19A8.965 8.965 0 0112 3c1.929 0 3.716.607 5.18 1.64\" \/>\n                                    <\/svg>\n                                <\/div>\n\n                                <h2 class=\"mt-6 text-xl font-semibold text-gray-900 dark:text-white\">Vibrant Ecosystem<\/h2>\n\n                                <p class=\"mt-4 text-gray-500 dark:text-gray-400 text-sm leading-relaxed\">\n                                    Laravel's robust library of first-party tools and libraries, such as <a href=\"https:\/\/forge.laravel.com\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Forge<\/a>, <a href=\"https:\/\/vapor.laravel.com\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Vapor<\/a>, <a href=\"https:\/\/nova.laravel.com\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Nova<\/a>, and <a href=\"https:\/\/envoyer.io\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Envoyer<\/a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href=\"https:\/\/laravel.com\/docs\/billing\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Cashier<\/a>, <a href=\"https:\/\/laravel.com\/docs\/dusk\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Dusk<\/a>, <a href=\"https:\/\/laravel.com\/docs\/broadcasting\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Echo<\/a>, <a href=\"https:\/\/laravel.com\/docs\/horizon\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Horizon<\/a>, <a href=\"https:\/\/laravel.com\/docs\/sanctum\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Sanctum<\/a>, <a href=\"https:\/\/laravel.com\/docs\/telescope\" class=\"underline hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">Telescope<\/a>, and more.\n                                <\/p>\n                            <\/div>\n                        <\/div>\n                    <\/div>\n                <\/div>\n\n                <div class=\"flex justify-center mt-16 px-0 sm:items-center sm:justify-between\">\n                    <div class=\"text-center text-sm text-gray-500 dark:text-gray-400 sm:text-left\">\n                        <div class=\"flex items-center gap-4\">\n                            <a href=\"https:\/\/github.com\/sponsors\/taylorotwell\" class=\"group inline-flex items-center hover:text-gray-700 dark:hover:text-white focus:outline focus:outline-2 focus:rounded-sm focus:outline-red-500\">\n                                <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" class=\"-mt-px mr-1 w-5 h-5 stroke-gray-400 dark:stroke-gray-600 group-hover:stroke-gray-600 dark:group-hover:stroke-gray-400\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z\" \/>\n                                <\/svg>\n                                Sponsor\n                            <\/a>\n                        <\/div>\n                    <\/div>\n\n                    <div class=\"ml-4 text-center text-sm text-gray-500 dark:text-gray-400 sm:text-right sm:ml-0\">\n                        Laravel v{{ Illuminate\\Foundation\\Application::VERSION }} (PHP v{{ PHP_VERSION }})\n                    <\/div>\n                <\/div>\n            <\/div>\n        <\/div>\n    <\/body>\n<\/html>\n",
                        "uuid": "a739b64c1da55c70"
                    }
                },
                "uuid": "970f9ad968f65f2d"
            }
        },
        "uuid": "9317fdfcc326063b"
    },
    "routes": {
        "isDir": true,
        "content": {
            "api.php": {
                "isDir": false,
                "content": "<?php\n\nRoute::group(['prefix' => 'v1', 'as' => 'api.', 'namespace' => 'Api\\V1\\Admin', 'middleware' => ['auth:sanctum']], function () {\n    \/\/ Permissions\n    Route::apiResource('permissions', 'PermissionsApiController');\n\n    \/\/ Assets History\n    Route::apiResource('assets-histories', 'AssetsHistoryApiController', ['except' => ['store', 'show', 'update', 'destroy']]);\n\n    \/\/ Provinsi\n    Route::post('provinsis\/media', 'ProvinsiApiController@storeMedia')->name('provinsis.storeMedia');\n    Route::apiResource('provinsis', 'ProvinsiApiController');\n});\n",
                "uuid": "cb35ce5b9c3465ba"
            },
            "channels.php": {
                "isDir": false,
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Broadcast;\n\n\/*\n|--------------------------------------------------------------------------\n| Broadcast Channels\n|--------------------------------------------------------------------------\n|\n| Here you may register all of the event broadcasting channels that your\n| application supports. The given channel authorization callbacks are\n| used to check if an authenticated user can listen to the channel.\n|\n*\/\n\nBroadcast::channel('App.Models.User.{id}', function ($user, $id) {\n    return (int) $user->id === (int) $id;\n});\n",
                "uuid": "d7bdc7e0b1ac3649"
            },
            "console.php": {
                "isDir": false,
                "content": "<?php\n\nuse Illuminate\\Foundation\\Inspiring;\nuse Illuminate\\Support\\Facades\\Artisan;\n\n\/*\n|--------------------------------------------------------------------------\n| Console Routes\n|--------------------------------------------------------------------------\n|\n| This file is where you may define all of your Closure based console\n| commands. Each Closure is bound to a command instance allowing a\n| simple approach to interacting with each command's IO methods.\n|\n*\/\n\nArtisan::command('inspire', function () {\n    $this->comment(Inspiring::quote());\n})->purpose('Display an inspiring quote');\n",
                "uuid": "8d88a4e9ba956e9b"
            },
            "web.php": {
                "isDir": false,
                "content": "<?php\n\nRoute::redirect('\/', '\/login');\nRoute::get('\/home', function () {\n    if (session('status')) {\n        return redirect()->route('admin.home')->with('status', session('status'));\n    }\n\n    return redirect()->route('admin.home');\n});\n\nAuth::routes(['register' => false]);\n\nRoute::group(['prefix' => 'admin', 'as' => 'admin.', 'namespace' => 'Admin', 'middleware' => ['auth']], function () {\n    Route::get('\/', 'HomeController@index')->name('home');\n    \/\/ Permissions\n    Route::delete('permissions\/destroy', 'PermissionsController@massDestroy')->name('permissions.massDestroy');\n    Route::resource('permissions', 'PermissionsController');\n\n    \/\/ Roles\n    Route::delete('roles\/destroy', 'RolesController@massDestroy')->name('roles.massDestroy');\n    Route::resource('roles', 'RolesController');\n\n    \/\/ Users\n    Route::delete('users\/destroy', 'UsersController@massDestroy')->name('users.massDestroy');\n    Route::resource('users', 'UsersController');\n\n    \/\/ Asset Category\n    Route::delete('asset-categories\/destroy', 'AssetCategoryController@massDestroy')->name('asset-categories.massDestroy');\n    Route::resource('asset-categories', 'AssetCategoryController');\n\n    \/\/ Asset Location\n    Route::delete('asset-locations\/destroy', 'AssetLocationController@massDestroy')->name('asset-locations.massDestroy');\n    Route::resource('asset-locations', 'AssetLocationController');\n\n    \/\/ Asset Status\n    Route::delete('asset-statuses\/destroy', 'AssetStatusController@massDestroy')->name('asset-statuses.massDestroy');\n    Route::resource('asset-statuses', 'AssetStatusController');\n\n    \/\/ Asset\n    Route::delete('assets\/destroy', 'AssetController@massDestroy')->name('assets.massDestroy');\n    Route::post('assets\/media', 'AssetController@storeMedia')->name('assets.storeMedia');\n    Route::post('assets\/ckmedia', 'AssetController@storeCKEditorImages')->name('assets.storeCKEditorImages');\n    Route::resource('assets', 'AssetController');\n\n    \/\/ Assets History\n    Route::resource('assets-histories', 'AssetsHistoryController', ['except' => ['create', 'store', 'edit', 'update', 'show', 'destroy']]);\n\n    \/\/ Audit Logs\n    Route::resource('audit-logs', 'AuditLogsController', ['except' => ['create', 'store', 'edit', 'update', 'destroy']]);\n\n    \/\/ Content Category\n    Route::delete('content-categories\/destroy', 'ContentCategoryController@massDestroy')->name('content-categories.massDestroy');\n    Route::resource('content-categories', 'ContentCategoryController');\n\n    \/\/ Content Tag\n    Route::delete('content-tags\/destroy', 'ContentTagController@massDestroy')->name('content-tags.massDestroy');\n    Route::resource('content-tags', 'ContentTagController');\n\n    \/\/ Content Page\n    Route::delete('content-pages\/destroy', 'ContentPageController@massDestroy')->name('content-pages.massDestroy');\n    Route::post('content-pages\/media', 'ContentPageController@storeMedia')->name('content-pages.storeMedia');\n    Route::post('content-pages\/ckmedia', 'ContentPageController@storeCKEditorImages')->name('content-pages.storeCKEditorImages');\n    Route::resource('content-pages', 'ContentPageController');\n\n    \/\/ Provinsi\n    Route::delete('provinsis\/destroy', 'ProvinsiController@massDestroy')->name('provinsis.massDestroy');\n    Route::post('provinsis\/media', 'ProvinsiController@storeMedia')->name('provinsis.storeMedia');\n    Route::post('provinsis\/ckmedia', 'ProvinsiController@storeCKEditorImages')->name('provinsis.storeCKEditorImages');\n    Route::resource('provinsis', 'ProvinsiController');\n});\nRoute::group(['prefix' => 'profile', 'as' => 'profile.', 'namespace' => 'Auth', 'middleware' => ['auth']], function () {\n    \/\/ Change password\n    if (file_exists(app_path('Http\/Controllers\/Auth\/ChangePasswordController.php'))) {\n        Route::get('password', 'ChangePasswordController@edit')->name('password.edit');\n        Route::post('password', 'ChangePasswordController@update')->name('password.update');\n        Route::post('profile', 'ChangePasswordController@updateProfile')->name('password.updateProfile');\n        Route::post('profile\/destroy', 'ChangePasswordController@destroy')->name('password.destroyProfile');\n    }\n});\n",
                "uuid": "3393c885636b03ac"
            }
        },
        "uuid": "a3a416bd38062058"
    },
    "tests": {
        "isDir": true,
        "content": {
            "Browser": {
                "isDir": true,
                "content": {
                    "AssetCategoryTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass AssetCategoryTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.assetcategory.index'));\n            $browser->assertRouteIs('admin.assetcategory.index');\n        });\n    }\n}\n",
                        "uuid": "6edeea45d7ab206e"
                    },
                    "AssetLocationTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass AssetLocationTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.assetlocation.index'));\n            $browser->assertRouteIs('admin.assetlocation.index');\n        });\n    }\n}\n",
                        "uuid": "50a8193741c0377a"
                    },
                    "AssetStatusTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass AssetStatusTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.assetstatus.index'));\n            $browser->assertRouteIs('admin.assetstatus.index');\n        });\n    }\n}\n",
                        "uuid": "aa8044e40e87208d"
                    },
                    "AssetTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass AssetTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.asset.index'));\n            $browser->assertRouteIs('admin.asset.index');\n        });\n    }\n}\n",
                        "uuid": "8ca7e3ab9bad877b"
                    },
                    "AssetsHistoryTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass AssetsHistoryTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.assetshistory.index'));\n            $browser->assertRouteIs('admin.assetshistory.index');\n        });\n    }\n}\n",
                        "uuid": "389fb1ee643763bf"
                    },
                    "ContentCategoryTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass ContentCategoryTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.contentcategory.index'));\n            $browser->assertRouteIs('admin.contentcategory.index');\n        });\n    }\n}\n",
                        "uuid": "fe8b3c49440539b5"
                    },
                    "ContentPageTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass ContentPageTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.contentpage.index'));\n            $browser->assertRouteIs('admin.contentpage.index');\n        });\n    }\n}\n",
                        "uuid": "1e29bce15f209f53"
                    },
                    "ContentTagTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass ContentTagTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.contenttag.index'));\n            $browser->assertRouteIs('admin.contenttag.index');\n        });\n    }\n}\n",
                        "uuid": "4d4f682fa330ad66"
                    },
                    "PermissionsTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass PermissionsTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.permissions.index'));\n            $browser->assertRouteIs('admin.permissions.index');\n        });\n    }\n}\n",
                        "uuid": "4016aef77d58c7f9"
                    },
                    "ProvinsiTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass ProvinsiTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.provinsi.index'));\n            $browser->assertRouteIs('admin.provinsi.index');\n        });\n    }\n}\n",
                        "uuid": "4aa2e58bc70465a3"
                    },
                    "RolesTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass RolesTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.roles.index'));\n            $browser->assertRouteIs('admin.roles.index');\n        });\n    }\n}\n",
                        "uuid": "d0b509bd6f70777e"
                    },
                    "UsersTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Browser;\n\nuse Illuminate\\Foundation\\Testing\\DatabaseMigrations;\nuse Laravel\\Dusk\\Browser;\nuse Tests\\DuskTestCase;\n\nclass UsersTest extends DuskTestCase\n{\n    public function testIndex()\n    {\n        $admin = App\\Models\\User::find(1);\n        $this->browse(function (Browser $browser) use ($admin) {\n            $browser->loginAs($admin);\n            $browser->visit(route('admin.users.index'));\n            $browser->assertRouteIs('admin.users.index');\n        });\n    }\n}\n",
                        "uuid": "8367fff42db70da0"
                    }
                },
                "uuid": "0aa7fef4032b2467"
            },
            "Feature": {
                "isDir": true,
                "content": {
                    "ExampleTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Feature;\n\n\/\/ use Illuminate\\Foundation\\Testing\\RefreshDatabase;\nuse Tests\\TestCase;\n\nclass ExampleTest extends TestCase\n{\n    \/**\n     * A basic test example.\n     *\/\n    public function test_the_application_returns_a_successful_response(): void\n    {\n        $response = $this->get('\/');\n\n        $response->assertStatus(200);\n    }\n}\n",
                        "uuid": "cfc2f15dc2b0f4ad"
                    }
                },
                "uuid": "d9a4e72784d6594c"
            },
            "Unit": {
                "isDir": true,
                "content": {
                    "ExampleTest.php": {
                        "isDir": false,
                        "content": "<?php\n\nnamespace Tests\\Unit;\n\nuse PHPUnit\\Framework\\TestCase;\n\nclass ExampleTest extends TestCase\n{\n    \/**\n     * A basic test example.\n     *\/\n    public function test_that_true_is_true(): void\n    {\n        $this->assertTrue(true);\n    }\n}\n",
                        "uuid": "4218d9a0bc00ad70"
                    }
                },
                "uuid": "4553f8c044006482"
            },
            "CreatesApplication.php": {
                "isDir": false,
                "content": "<?php\n\nnamespace Tests;\n\nuse Illuminate\\Contracts\\Console\\Kernel;\nuse Illuminate\\Foundation\\Application;\n\ntrait CreatesApplication\n{\n    \/**\n     * Creates the application.\n     *\/\n    public function createApplication(): Application\n    {\n        $app = require __DIR__.'\/..\/bootstrap\/app.php';\n\n        $app->make(Kernel::class)->bootstrap();\n\n        return $app;\n    }\n}\n",
                "uuid": "f5317b332a183ad2"
            },
            "TestCase.php": {
                "isDir": false,
                "content": "<?php\n\nnamespace Tests;\n\nuse Illuminate\\Foundation\\Testing\\TestCase as BaseTestCase;\n\nabstract class TestCase extends BaseTestCase\n{\n    use CreatesApplication;\n}\n",
                "uuid": "9f1744167232fba0"
            }
        },
        "uuid": "679ba454f97d4057"
    },
    "composer.json": {
        "isDir": false,
        "content": "{\n    \"name\": \"laravel\/laravel\",\n    \"type\": \"project\",\n    \"description\": \"The Laravel Framework.\",\n    \"keywords\": [\"framework\", \"laravel\"],\n    \"license\": \"MIT\",\n    \"require\": {\n        \"php\": \"^8.1\",\n        \"guzzlehttp\/guzzle\": \"^7.2\",\n        \"laravel\/framework\": \"^10.0\",\n        \"laravel\/sanctum\": \"^3.2\",\n        \"laravel\/tinker\": \"^2.8\",\n        \"yajra\/laravel-datatables-oracle\": \"^10.3\",\n        \"spatie\/laravel-medialibrary\": \"^10.7\"\n    },\n    \"require-dev\": {\n        \"fakerphp\/faker\": \"^1.9.1\",\n        \"laravel\/pint\": \"^1.0\",\n        \"laravel\/sail\": \"^1.18\",\n        \"laravel\/ui\": \"^4.2\",\n        \"mockery\/mockery\": \"^1.4.4\",\n        \"nunomaduro\/collision\": \"^7.0\",\n        \"phpunit\/phpunit\": \"^10.0\",\n        \"spatie\/laravel-ignition\": \"^2.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"App\\\\\": \"app\/\",\n            \"Database\\\\Factories\\\\\": \"database\/factories\/\",\n            \"Database\\\\Seeders\\\\\": \"database\/seeders\/\"\n        }\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Tests\\\\\": \"tests\/\"\n        }\n    },\n    \"scripts\": {\n        \"post-autoload-dump\": [\n            \"Illuminate\\\\Foundation\\\\ComposerScripts::postAutoloadDump\",\n            \"@php artisan package:discover --ansi\"\n        ],\n        \"post-update-cmd\": [\n            \"@php artisan vendor:publish --tag=laravel-assets --ansi --force\"\n        ],\n        \"post-root-package-install\": [\n            \"@php -r \\\"file_exists('.env') || copy('.env.example', '.env');\\\"\"\n        ],\n        \"post-create-project-cmd\": [\n            \"@php artisan key:generate --ansi\"\n        ]\n    },\n    \"extra\": {\n        \"branch-alias\": {\n            \"dev-master\": \"10.x-dev\"\n        },\n        \"laravel\": {\n            \"dont-discover\": []\n        }\n    },\n    \"config\": {\n        \"optimize-autoloader\": true,\n        \"preferred-install\": \"dist\",\n        \"sort-packages\": true,\n        \"allow-plugins\": {\n            \"pestphp\/pest-plugin\": true\n        }\n    },\n    \"minimum-stability\": \"stable\",\n    \"prefer-stable\": true\n}\n",
        "uuid": "193a4f2de430055c"
    },
    "package.json": {
        "isDir": false,
        "content": "{\n    \"private\": true,\n    \"scripts\": {\n        \"dev\": \"vite\",\n        \"build\": \"vite build\"\n    },\n    \"devDependencies\": {\n        \"axios\": \"^1.1.2\",\n        \"laravel-vite-plugin\": \"^0.7.2\",\n        \"vite\": \"^4.0.0\"\n    }\n}\n",
        "uuid": "1ca377770d232404"
    },
    "vite.config.js": {
        "isDir": false,
        "content": "import { defineConfig } from 'vite';\nimport laravel from 'laravel-vite-plugin';\n\nexport default defineConfig({\n    plugins: [\n        laravel({\n            input: ['resources\/css\/app.css', 'resources\/js\/app.js'],\n            refresh: true,\n        }),\n    ],\n});\n",
        "uuid": "811ce006590337e5"
    }
}